{"version":3,"sources":["webpack://NetLicensing/webpack/universalModuleDefinition","webpack://NetLicensing/webpack/bootstrap","webpack://NetLicensing/./src/util/CheckUtils.js","webpack://NetLicensing/./node_modules/axios/lib/utils.js","webpack://NetLicensing/./src/entities/BaseEntity.js","webpack://NetLicensing/./src/Constants.js","webpack://NetLicensing/./src/vo/Context.js","webpack://NetLicensing/./src/services/Service.js","webpack://NetLicensing/./node_modules/axios/lib/defaults.js","webpack://NetLicensing/./src/entities/Country.js","webpack://NetLicensing/./src/entities/Transaction.js","webpack://NetLicensing/./src/entities/Token.js","webpack://NetLicensing/./src/entities/ProductDiscount.js","webpack://NetLicensing/./src/entities/Product.js","webpack://NetLicensing/./src/entities/ProductModule.js","webpack://NetLicensing/./src/entities/PaymentMethod.js","webpack://NetLicensing/./src/entities/LicenseTemplate.js","webpack://NetLicensing/./src/entities/License.js","webpack://NetLicensing/./src/vo/ValidationResults.js","webpack://NetLicensing/./src/vo/ValidationParameters.js","webpack://NetLicensing/./src/entities/Licensee.js","webpack://NetLicensing/./src/util/CastsUtils.js","webpack://NetLicensing/./node_modules/axios/lib/cancel/Cancel.js","webpack://NetLicensing/./node_modules/axios/lib/cancel/isCancel.js","webpack://NetLicensing/./node_modules/axios/lib/core/createError.js","webpack://NetLicensing/./node_modules/axios/lib/adapters/xhr.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/bind.js","webpack://NetLicensing/./src/services/UtilityService.js","webpack://NetLicensing/./src/services/TransactionService.js","webpack://NetLicensing/./src/services/TokenService.js","webpack://NetLicensing/./src/services/ProductService.js","webpack://NetLicensing/./src/services/ProductModuleService.js","webpack://NetLicensing/./src/services/PaymentMethodService.js","webpack://NetLicensing/./src/services/LicenseTemplateService.js","webpack://NetLicensing/./src/services/LicenseService.js","webpack://NetLicensing/./src/services/LicenseeService.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/spread.js","webpack://NetLicensing/./node_modules/axios/lib/cancel/CancelToken.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/combineURLs.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://NetLicensing/./node_modules/axios/lib/core/transformData.js","webpack://NetLicensing/./node_modules/axios/lib/core/dispatchRequest.js","webpack://NetLicensing/./node_modules/axios/lib/core/InterceptorManager.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/cookies.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/btoa.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/buildURL.js","webpack://NetLicensing/./node_modules/axios/lib/core/enhanceError.js","webpack://NetLicensing/./node_modules/axios/lib/core/settle.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://NetLicensing/./node_modules/process/browser.js","webpack://NetLicensing/./node_modules/axios/lib/core/Axios.js","webpack://NetLicensing/./node_modules/is-buffer/index.js","webpack://NetLicensing/./node_modules/axios/lib/axios.js","webpack://NetLicensing/./node_modules/axios/index.js","webpack://NetLicensing/./src/netlicensing-client.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","isValid","valid","undefined","Number","isFinite","isNaN","paramNotNull","parameter","parameterName","this","TypeError","paramNotEmpty","bind","isBuffer","toString","isArray","val","isObject","isFunction","forEach","obj","fn","length","key","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","document","merge","result","assignValue","arguments","extend","a","b","thisArg","trim","str","replace","propertiesMap","WeakMap","definedMap","castsMap","readOnlyMap","BaseEntity","_ref","properties","casts","readOnly","_classCallCheck","set","setProperties","hasProperty","isPropertyReadOnly","_CheckUtils2","default","_typeof","castedValue","cast","setProperty","_this","removeProperties","has","keys","def","assign","removeDefine","_this2","removeProperty","indexOf","_CastsUtils2","Boolean","hasDefine","self","descriptors","getProperty","onlyGetter","_this3","_this4","getProperties","customProperties","BASIC_AUTHENTICATION","APIKEY_IDENTIFICATION","LicensingModel","VALID","TryAndBuy","NAME","Rental","RED_THRESHOLD","YELLOW_THRESHOLD","Subscription","Floating","MultiFeature","PayPerUse","PricingTable","Quota","LicenseTemplate","ENDPOINT_PATH","LicenseType","FEATURE","TIMEVOLUME","FLOATING","QUANTITY","Product","LicenseeSecretMode","DISABLED","PREDEFINED","CLIENT","Token","Type","DEFAULT","SHOP","APIKEY","Transaction","Status","CANCELLED","CLOSED","PENDING","Licensee","ENDPOINT_PATH_VALIDATE","ENDPOINT_PATH_TRANSFER","License","PaymentMethod","ProductModule","Utility","valuesMap","defaultsMap","Context","values","baseUrl","securityMode","_Constants2","setValues","setValue","getValue","username","password","apiKey","vendorNumber","Error","copedValue","Array","removeValues","removeValue","httpXHR","Service","context","urlTemplate","queryParams","resultType","request","then","response","getEntity","data","items","item","map","status","method","template","String","params","toLowerCase","getBaseUrl","isValidUrl","restUrl","url","responseType","headers","transformRequest","toQueryString","getSecurityMode","getUsername","getPassword","auth","getApiKey","Authorization","btoa","_axios2","catch","error","info","infos","id","Promise","resolve","reasonPhrase","reject","lists","list","entity","_ref2","setListMethod","charAt","toUpperCase","substr","console","warn","type","RegExp","test","prefix","query","k","v","Date","toISOString","push","encodeURIComponent","join","utils","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","adapter","defaults","XMLHttpRequest","process","JSON","stringify","transformResponse","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","common","Accept","_BaseEntity2","Country","_possibleConstructorReturn","__proto__","getPrototypeOf","code","vatPercent","isEu","defines","vat","number","source","grandTotal","discount","currency","dateCreated","dateClosed","active","paymentMethod","expirationTime","tokenType","licenseeNumber","successURL","successURLTitle","cancelURL","cancelURLTitle","shopURL","ProductDiscount","totalPrice","amountFix","amountPercent","getTotalPrice","getCurrency","amount","getAmountFix","getAmountPercent","discountsMap","discountsTouched","version","description","licensingInfo","licenseeAutoCreate","licenseeSecretMode","inUse","discounts","addDiscount","_ProductDiscount2","licensingModel","maxCheckoutValidity","yellowThreshold","redThreshold","licenseTemplate","paypal.subject","paypalSubject","licenseType","price","automatic","hidden","hideLicenses","timeVolume","maxSessions","quantity","parentfeature","startDate","_CheckUtils","vr","ValidationResults","validators","productModuleNumber","productModuleValidation","ttl","getValidators","vpMap","ValidationParameters","parameters","productNumber","licenseeName","licenseeSecret","productModuleParameters","markedForTransfer","parseInt","parseFloat","Cancel","message","__CANCEL__","enhanceError","config","settle","buildURL","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","loadEvent","xDomain","XDomainRequest","onprogress","ontimeout","open","paramsSerializer","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseText","statusText","onerror","cookies","xsrfValue","withCredentials","read","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","args","apply","listLicenseTypes","setSecurityMode","_Service2","listLicensingModels","listCountries","filter","_Country2","create","transaction","post","asPropertiesMap","_Transaction2","update","path","token","_Token2","delete","_Product2","forceCascade","productModule","_ProductModule2","_PaymentMethod2","_LicenseTemplate2","licenseTemplateNumber","transactionNumber","license","_License2","licensee","_Licensee2","validate","validationParameters","getProductNumber","getLicenseeName","getLicenseeSecret","pmIndex","getParameters","productModuleName","validationResults","_ValidationResults2","setProductModuleValidation","setTtl","getLastHttpRequestInfo","transfer","sourceLicenseeNumber","callback","arr","CancelToken","executor","resolvePromise","reason","throwIfRequested","baseURL","relativeURL","fns","transformData","isCancel","isAbsoluteURL","combineURLs","throwIfCancellationRequested","InterceptorManager","handlers","use","fulfilled","rejected","eject","h","write","expires","domain","secure","cookie","toGMTString","match","decodeURIComponent","remove","now","chars","E","input","block","charCode","output","idx","charCodeAt","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","location","requestURL","parsed","ignoreDuplicateOf","split","line","concat","encode","serializedParams","parts","normalizedName","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","dispatchRequest","Axios","instanceConfig","interceptors","chain","interceptor","unshift","shift","constructor","readFloatLE","slice","isSlowBuffer","_isBuffer","createInstance","defaultConfig","instance","axios","all","promises","spread","NetLicensing","LicenseeService","LicenseService","LicenseTemplateService","PaymentMethodService","ProductModuleService","ProductService","TokenService","TransactionService","UtilityService","CastsUtils","CheckUtils"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,OAAA,kBAAAH,GACA,iBAAAC,QACAA,QAAA,aAAAD,IAEAD,EAAA,aAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA2CA,OAtCAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACAkB,OAAAC,eAAAnB,EAAA,cAAiDwB,OAAA,KAIjDlB,EAAAmB,EAAA,SAAAxB,GACA,IAAAe,EAAAf,KAAAyB,WACA,WAA2B,OAAAzB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDtB,EAAAyB,EAAA,GAIAzB,IAAA0B,EAAA,+FC3DIC,QADW,SACHT,GACJ,IAAIU,OAAmBC,IAAVX,GAAwC,mBAAVA,EAE3C,MADqB,iBAAVA,IAAoBU,EAAQE,OAAOC,SAASb,KAAWY,OAAOE,MAAMd,IACxEU,GAGXK,aAPW,SAOEC,EAAWC,GACpB,IAAKC,KAAKT,QAAQO,GAAY,MAAM,IAAIG,UAAJ,aAA2BF,EAA3B,kBAA0DD,GAC9F,GAAkB,OAAdA,EAAoB,MAAM,IAAIG,UAAJ,aAA2BF,EAA3B,oBAGlCG,cAZW,SAYGJ,EAAWC,GACrB,IAAKC,KAAKT,QAAQO,GAAY,MAAM,IAAIG,UAAJ,aAA2BF,EAA3B,kBAA0DD,GAC9F,IAAKA,EAAW,MAAM,IAAIG,UAAJ,aAA2BF,EAA3B,uFCnB9B,IAAAI,EAAAvC,EAAA,IACAwC,EAAAxC,EAAA,IAMAyC,EAAA7B,OAAAW,UAAAkB,SAQA,SAAAC,EAAAC,GACA,yBAAAF,EAAApC,KAAAsC,GA2EA,SAAAC,EAAAD,GACA,cAAAA,GAAA,iBAAAA,EAuCA,SAAAE,EAAAF,GACA,4BAAAF,EAAApC,KAAAsC,GAoEA,SAAAG,EAAAC,EAAAC,GAEA,UAAAD,QAAA,IAAAA,EAUA,GALA,iBAAAA,IAEAA,OAGAL,EAAAK,GAEA,QAAA7C,EAAA,EAAAC,EAAA4C,EAAAE,OAAmC/C,EAAAC,EAAOD,IAC1C8C,EAAA3C,KAAA,KAAA0C,EAAA7C,KAAA6C,QAIA,QAAAG,KAAAH,EACAnC,OAAAW,UAAAC,eAAAnB,KAAA0C,EAAAG,IACAF,EAAA3C,KAAA,KAAA0C,EAAAG,KAAAH,GA0DApD,EAAAD,SACAgD,UACAS,cAhQA,SAAAR,GACA,+BAAAF,EAAApC,KAAAsC,IAgQAH,WACAY,WAxPA,SAAAT,GACA,0BAAAU,UAAAV,aAAAU,UAwPAC,kBA/OA,SAAAX,GAOA,MALA,oBAAAY,yBAAA,OACAA,YAAAC,OAAAb,GAEA,GAAAA,EAAA,QAAAA,EAAAc,kBAAAF,aA2OAG,SAhOA,SAAAf,GACA,uBAAAA,GAgOAgB,SAvNA,SAAAhB,GACA,uBAAAA,GAuNAC,WACAgB,YA/MA,SAAAjB,GACA,gBAAAA,GA+MAkB,OA5LA,SAAAlB,GACA,wBAAAF,EAAApC,KAAAsC,IA4LAmB,OAnLA,SAAAnB,GACA,wBAAAF,EAAApC,KAAAsC,IAmLAoB,OA1KA,SAAApB,GACA,wBAAAF,EAAApC,KAAAsC,IA0KAE,aACAmB,SAxJA,SAAArB,GACA,OAAAC,EAAAD,IAAAE,EAAAF,EAAAsB,OAwJAC,kBA/IA,SAAAvB,GACA,0BAAAwB,iBAAAxB,aAAAwB,iBA+IAC,qBArHA,WACA,2BAAAC,WAAA,gBAAAA,UAAAC,UAIA,oBAAAxE,QACA,oBAAAyE,UAgHAzB,UACA0B,MArDA,SAAAA,IACA,IAAAC,KACA,SAAAC,EAAA/B,EAAAO,GACA,iBAAAuB,EAAAvB,IAAA,iBAAAP,EACA8B,EAAAvB,GAAAsB,EAAAC,EAAAvB,GAAAP,GAEA8B,EAAAvB,GAAAP,EAIA,QAAAzC,EAAA,EAAAC,EAAAwE,UAAA1B,OAAuC/C,EAAAC,EAAOD,IAC9C4C,EAAA6B,UAAAzE,GAAAwE,GAEA,OAAAD,GAyCAG,OA9BA,SAAAC,EAAAC,EAAAC,GAQA,OAPAjC,EAAAgC,EAAA,SAAAnC,EAAAO,GAEA2B,EAAA3B,GADA6B,GAAA,mBAAApC,EACAJ,EAAAI,EAAAoC,GAEApC,IAGAkC,GAuBAG,KA1IA,SAAAC,GACA,OAAAA,EAAAC,QAAA,WAAAA,QAAA,qiBC7JAlF,EAAA,QACAA,EAAA,wDAOA,IAAMmF,EAAgB,IAAIC,QAQpBC,EAAa,IAAID,QAOjBE,EAAW,IAAIF,QAOfG,EAAc,IAAIH,QAEHI,aACjB,SAAAA,EAAAC,GAA6C,IAA/BC,EAA+BD,EAA/BC,WAAYC,EAAmBF,EAAnBE,MAAOC,EAAYH,EAAZG,sGAAYC,CAAAzD,KAAAoD,GACzCL,EAAcW,IAAI1D,SAClBiD,EAAWS,IAAI1D,SACfkD,EAASQ,IAAI1D,KAAMuD,OACnBJ,EAAYO,IAAI1D,KAAMwD,OAElBF,GACAtD,KAAK2D,cAAcL,iDAUfpE,EAAUJ,GAElB,GAAIkB,KAAK4D,YAAY1E,IAAac,KAAK6D,mBAAmB3E,GACtD,MAAM,IAAIe,UAAJ,YAA0Bf,EAA1B,yBAIV,IAAK4E,EAAAC,QAAWxE,QAAQL,IAAiC,iBAApB,IAAOA,EAAP,YAAA8E,EAAO9E,IACxC,MAAM,IAAIe,UAAJ,qBAAmCf,GAI7C,IAAK4E,EAAAC,QAAWxE,QAAQT,GACpB,MAAM,IAAImB,UAAJ,YAA0Bf,EAA1B,kBAAoDJ,GAG9D,IAAMmF,EAAcjE,KAAKkE,KAAKhF,EAAUJ,GAGxC,IAAKgF,EAAAC,QAAWxE,QAAQT,GACpB,MAAM,IAAImB,UAAJ,YAA0Bf,EAA1B,uBAAyD+E,GAUnE,OANAjE,KAAKxC,OAAO0B,GAGO6D,EAAcnE,IAAIoB,MAC1Bd,GAAY+E,EAEhBjE,yCASCd,EAAUJ,GAClB,OAAOkB,KAAKmE,YAAYjF,EAAUJ,yCAQxBwE,GAAY,IAAAc,EAAApE,KACtBA,KAAKqE,mBAEL,IAAMC,EAAM9F,OAAOW,UAAUC,eAQ7B,OANAZ,OAAO+F,KAAKjB,GAAY5C,QAAQ,SAACI,GACzBwD,EAAIrG,KAAKqF,EAAYxC,IACrBsD,EAAKD,YAAYrD,EAAKwC,EAAWxC,MAIlCd,yCAQCd,GACR,OAAOV,OAAOW,UAAUC,eAAenB,KAAK8E,EAAcnE,IAAIoB,MAAOd,uCAS7DA,EAAUsF,GAClB,OAAOhG,OAAOW,UAAUC,eAAenB,KAAK8E,EAAcnE,IAAIoB,MAAOd,GAC/D6D,EAAcnE,IAAIoB,MAAMd,GACxBsF,0CAON,OAAOhG,OAAOiG,UAAW1B,EAAcnE,IAAIoB,8CAQhCd,GAIX,cAHmB6D,EAAcnE,IAAIoB,MACnBd,GAClBc,KAAK0E,aAAaxF,GACXc,8CAOMsD,GAAY,IAAAqB,EAAA3E,MACGsD,GAAc9E,OAAO+F,KAAKxB,EAAcnE,IAAIoB,QAEpDU,QAAQ,SAACxB,GACzByF,EAAKC,eAAe1F,gDAITA,GACf,OAAOiE,EAAYvE,IAAIoB,MAAM6E,QAAQ3F,IAAa,+BAGjDA,EAAUJ,GACX,OAAKoE,EAAStE,IAAIoB,MAAMd,IAEjB,EAAA4F,EAAAf,SAAWb,EAAStE,IAAIoB,MAAMd,GAAWJ,GAFNA,oCAUpCI,GACN,OAAO6F,QAAQ9B,EAAWrE,IAAIoB,MAAMd,mCAQjCA,GACH,IAAIc,KAAKgF,UAAU9F,GAAnB,CAEA,IAAK4E,EAAAC,QAAWxE,QAAQL,IAAiC,iBAApB,IAAOA,EAAP,YAAA8E,EAAO9E,IACxC,MAAM,IAAIe,UAAJ,qBAAmCf,GAG7C,IAAM+F,EAAOjF,YAGNA,KAAKd,GAEZ,IAAMgG,GACFvG,YAAY,EACZD,cAAc,EACdE,IAHgB,WAIZ,OAAOqG,EAAKE,YAAYjG,KAI3Bc,KAAK6D,mBAAmB3E,KACzBgG,EAAYxB,IAAM,SAAA5E,GAAA,OAASmG,EAAKd,YAAYjF,EAAUJ,KAG1CmE,EAAWrE,IAAIoB,MACvBd,IAAY,EAEpBV,OAAOC,eAAeuB,KAAMd,EAAUgG,yCAQ7BhG,GACJc,KAAKgF,UAAU9F,YAEJ+D,EAAWrE,IAAIoB,MAChBd,UAERc,KAAKd,oCASRoE,EAAY8B,GAAY,IAAAC,EAAArF,KAC5BsD,EAAW5C,QAAQ,SAACxB,GAChBmG,EAAK7H,OAAO0B,EAAUkG,+CAOZ,IAAAE,EAAAtF,KACRsD,EAAatD,KAAKuF,gBAClBC,KAEAlB,EAAM9F,OAAOW,UAAUC,eAS7B,OAPAZ,OAAO+F,KAAKvE,MAAMU,QAAQ,SAACI,GAClBwD,EAAIrG,KAAJqH,EAAexE,IACfgD,EAAAC,QAAWxE,QAAQ+F,EAAKxE,MAE7B0E,EAAiB1E,GAAOwE,EAAKxE,MAG1BtC,OAAOiG,UAAWe,EAAkBlC,sBApO9BF,gHC/BjBqC,qBAAsB,aACtBC,sBAAuB,SAEvBC,gBACIC,MAAO,QACPC,WACIC,KAAM,aAEVC,QACID,KAAM,SACNE,cAAe,eACfC,iBAAkB,mBAEtBC,cACIJ,KAAM,gBAEVK,UACIL,KAAM,YAEVM,cACIN,KAAM,gBAEVO,WACIP,KAAM,aAEVQ,cACIR,KAAM,gBAEVS,OACIT,KAAM,UAIdU,iBACIC,cAAe,kBACfC,aACIC,QAAS,UACTC,WAAY,aACZC,SAAU,WACVC,SAAU,aAIlBC,SACIN,cAAe,UACfO,oBACIC,SAAU,WACVC,WAAY,aACZC,OAAQ,WAIhBC,OACIX,cAAe,QACfY,MACIC,QAAS,UACTC,KAAM,OACNC,OAAQ,WAIhBC,aACIhB,cAAe,cACfiB,QACIC,UAAW,YACXC,OAAQ,SACRC,QAAS,YAIjBC,UACIrB,cAAe,WACfsB,uBAAwB,WACxBC,uBAAwB,YAG5BC,SACIxB,cAAe,WAGnByB,eACIzB,cAAe,iBAGnB0B,eACI1B,cAAe,iBAGnB2B,SACI3B,cAAe,wjBC3FvB7I,EAAA,QACAA,EAAA,uDAOA,IAAMyK,EAAY,IAAIrF,QAOhBC,EAAa,IAAID,QAOjBsF,EAAc,IAAItF,QAEHuF,aACjB,SAAAA,EAAYC,gGAAQ/E,CAAAzD,KAAAuI,GAChBD,EAAY5E,IAAI1D,MACZyI,QAAS,0CACTC,aAAcC,EAAA5E,QAAU0B,uBAG5B4C,EAAU3E,IAAI1D,SAEdiD,EAAWS,IAAI1D,SAEfA,KAAK4I,UAAUpK,OAAOiG,UAAW6D,EAAY1J,IAAIoB,MAAOwI,iDAGjDC,GACP,OAAOzI,KAAK6I,SAAS,UAAWJ,sCAGzBjE,GACP,OAAOxE,KAAK8I,SAAS,UAAWtE,uCAGxBuE,GACR,OAAO/I,KAAK6I,SAAS,WAAYE,uCAGzBvE,GACR,OAAOxE,KAAK8I,SAAS,WAAYtE,uCAGzBwE,GACR,OAAOhJ,KAAK6I,SAAS,WAAYG,uCAGzBxE,GACR,OAAOxE,KAAK8I,SAAS,WAAYtE,qCAG3ByE,GACN,OAAOjJ,KAAK6I,SAAS,SAAUI,qCAGzBzE,GACN,OAAOxE,KAAK8I,SAAS,SAAUtE,2CAGnBkE,GACZ,OAAO1I,KAAK6I,SAAS,eAAgBH,2CAGzBlE,GACZ,OAAOxE,KAAK8I,SAAS,eAAgBtE,2CAGzB0E,GACZ,OAAOlJ,KAAK6I,SAAS,eAAgBK,2CAGzB1E,GACZ,OAAOxE,KAAK8I,SAAS,eAAgBtE,oCAShC1D,EAAKhC,GAEV,IAAKgF,EAAAC,QAAWxE,QAAQuB,IAAuB,iBAAf,IAAOA,EAAP,YAAAkD,EAAOlD,IAAkB,MAAM,IAAIqI,MAAJ,iBAA2BrI,GAC1F,IAAKgD,EAAAC,QAAWxE,QAAQT,GAAQ,MAAM,IAAIqK,MAAJ,SAAmBrI,EAAnB,mBAAyChC,GAG/EkB,KAAKxC,OAAOsD,GAEZ,IAAIsI,EAAatK,EASjB,MAPqB,iBAAjB,IAAOA,EAAP,YAAAkF,EAAOlF,MACPsK,EAAcC,MAAM/I,QAAQxB,GAAUN,OAAOiG,UAAW3F,GAASN,OAAOiG,UAAW3F,IAGxEuJ,EAAUzJ,IAAIoB,MACtBc,GAAOsI,EAEPpJ,uCAQDwI,GAAQ,IAAApE,EAAApE,KACdA,KAAKsJ,eAEL,IAAMhF,EAAM9F,OAAOW,UAAUC,eAQ7B,OANAZ,OAAO+F,KAAKiE,GAAQ9H,QAAQ,SAACI,GACrBwD,EAAIrG,KAAKuK,EAAQ1H,IACjBsD,EAAKyE,SAAS/H,EAAK0H,EAAO1H,MAI3Bd,sCASFc,EAAK0D,GACV,OAAO6D,EAAUzJ,IAAIoB,MAAMc,IAAQ0D,sCAOnC,OAAOhG,OAAOiG,UAAW4D,EAAUzJ,IAAIoB,2CAQ/Bc,GAKR,cAJeuH,EAAUzJ,IAAIoB,MACfc,GAEdd,KAAK0E,aAAa5D,GACXd,0CAOEuE,GAAM,IAAAI,EAAA3E,MACAuE,GAAQ/F,OAAO+F,KAAK8D,EAAUzJ,IAAIoB,QAC1CU,QAAQ,SAAAI,GAAA,OAAO6D,EAAK4E,YAAYzI,oCASpCA,EAAKsE,GACR,IAAIpF,KAAKgF,UAAUlE,GAAnB,CAEA,IAAKgD,EAAAC,QAAWxE,QAAQuB,IAA4B,YAApB,oBAAO5B,SAAP,YAAA8E,EAAO9E,WACnC,MAAM,IAAIe,UAAJ,kBAAgCa,GAG1C,IAAMmE,EAAOjF,YAGNA,KAAKc,GAEZ,IAAMoE,GACFvG,YAAY,EACZD,cAAc,EACdE,IAHgB,WAIZ,OAAOqG,EAAK6D,SAAShI,KAIxBsE,IACDF,EAAYxB,IAAM,SAAA5E,GAAA,OAASmG,EAAK4D,SAAS/H,EAAKhC,KAGlCmE,EAAWrE,IAAIoB,MACvBc,IAAO,EAEftC,OAAOC,eAAeuB,KAAMc,EAAKoE,sCAQ3BpE,GACN,OAAOiE,QAAQ9B,EAAWrE,IAAIoB,MAAMc,yCAQ3BA,GACJd,KAAKgF,UAAUlE,YAEJmC,EAAWrE,IAAIoB,MAChBc,UAERd,KAAKc,uBA1MCyH,8iBCxBrB3K,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAI4L,KAEiBC,gMAEb,OAAOD,8BAsBAE,EAASC,EAAaC,EAAaC,GAC1C,OAAOJ,EACFK,QAAQJ,EAAS,MAAOC,EAAaC,GACrCG,KAAK,SAAAC,GAAA,OAAcA,EAAYP,EAAQQ,UAAUJ,EAAYG,EAASE,KAAKC,MAAMC,KAAK,IAAM,oCAsBzFV,EAASC,EAAaC,EAAaC,GAC3C,OAAOJ,EACFK,QAAQJ,EAAS,MAAOC,EAAaC,GACrCG,KAAK,SAAAC,GAAA,OAAcA,EACdA,EAASE,KAAKC,MAAMC,KAAKC,IAAI,SAAAD,GAAA,OAAQX,EAAQQ,UAAUJ,EAAYO,uCAsBrEV,EAASC,EAAaC,EAAaC,GAC3C,OAAOJ,EACFK,QAAQJ,EAAS,OAAQC,EAAaC,GACtCG,KAAK,SAAAC,GAAA,OAAcA,EAAYP,EAAQQ,UAAUJ,EAAYG,EAASE,KAAKC,MAAMC,KAAK,IAAM,sCAUvFV,EAASC,EAAaC,GAChC,OAAOH,EACFK,QAAQJ,EAAS,SAAUC,EAAaC,GACxCG,KAAK,SAAAC,GAAA,OAAiC,MAApBA,EAASM,yCAWrBZ,EAASa,EAAQZ,EAAaC,GACzC,KAAMF,wBAA6B,MAAM,IAAIzJ,UAAU,uDAEvD,IAAMuK,EAAWC,OAAOd,GAClBe,EAASd,MAEf,IAAKY,EAAU,MAAM,IAAIvK,UAAU,kCAGnC,IAAK,MAAO,OAAQ,UAAU4E,QAAQ0F,EAAOI,eAAiB,EAC1D,MAAM,IAAIxB,MAAJ,wBAAkCoB,EAAlC,gDAIV,IAAKb,EAAQkB,WAAW,MACpB,MAAM,IAAIzB,MAAM,8BAGpB,IAAKM,EAAQoB,WAAWJ,OAAOf,EAAQkB,eACnC,MAAM,IAAIzB,MAAJ,aAAuBO,EAAQkB,aAA/B,wBAGV,IAAIE,EAAapB,EAAQkB,aAArB,IAAqCjB,EAKzC,GAHAmB,EAAUA,EAAQhI,QAAQ,eAAgB,OAGrC2G,EAAQoB,WAAWJ,OAAOK,IAC3B,MAAM,IAAI3B,MAAJ,aAAuB2B,EAAvB,wBAGV,IAAMhB,GACFiB,IAAKD,EACLP,OAAQA,EAAOI,cACfK,aAAc,OACdC,WACAC,kBAAmB,SAAChB,EAAMe,GACtB,MAAgC,sCAA5BA,EAAQ,gBACDxB,EAAQ0B,cAAcjB,GAE1BA,KAaf,QATK,MAAO,OAAQ,SAASrF,QAAQiF,EAAQS,SAClB,SAAnBT,EAAQS,SACRT,EAAQmB,QAAQ,gBAAkB,qCAEtCnB,EAAQI,KAAOQ,GAEfZ,EAAQY,OAASA,EAGbhB,EAAQ0B,mBAEZ,KAAKzC,EAAA5E,QAAS0B,qBACV,IAAKiE,EAAQ2B,cAAe,MAAM,IAAIlC,MAAM,gCAC5C,IAAKO,EAAQ4B,cAAe,MAAM,IAAInC,MAAM,gCAE5CW,EAAQyB,MACJxC,SAAUW,EAAQ2B,cAClBrC,SAAUU,EAAQ4B,eAEtB,MAEJ,KAAK3C,EAAA5E,QAAS2B,sBACV,IAAKgE,EAAQ8B,YAAa,MAAM,IAAIrC,MAAM,8BAE1CW,EAAQmB,QAAQQ,cAAhB,SAAyCC,eAAehC,EAAQ8B,aAChE,MACJ,QACI,MAAM,IAAIrC,MAAM,yBAGxB,OAAO,EAAAwC,EAAA5H,SAAM+F,GACRC,KAAK,SAACC,GAEH,OADAR,EAAUQ,EACHA,IAEV4B,MAAM,SAACC,GAGJ,GAFArC,EAAUqC,EAENA,EAAM7B,SAAU,CAGhB,IAAM8B,EAAOD,EAAM7B,SAASE,KAAK6B,MAAMD,KAAK,IAAM,KAElD,GAAIA,GAAoB,sBAAZA,EAAKE,GACb,OAAOC,QAAQC,QAAQ,MAG3B,IAAMC,EAAeL,EAAKhN,OAAS,UACnC,MAAM,IAAIqK,MAAJ,oCAA8C0C,EAAM7B,SAASM,OAA7D,KAAwE6B,GAGlF,OAAOF,QAAQG,OAAOP,uCAUjBhC,EAAYO,GACzB,IAAM9G,EAAa8G,EAAKlL,UAAY,KAC9BmN,EAAQjC,EAAKkC,MAAQ,KAE3B,IAAKzC,EAAY,OAAOO,EAGxB,IAAMmC,EAAS,IAAI1C,EAEnB,KAAM0C,wBACF,MAAM,IAAIpD,MAAJ,kBAA4BU,EAA5B,0CA8BV,OA3BAvG,EAAW5C,QAAQ,SAAA2C,GAAqB,IAAlBhF,EAAkBgF,EAAlBhF,KAAMS,EAAYuE,EAAZvE,MACxByN,EAAOpI,YAAY9F,EAAMS,KAGzBuN,GACAA,EAAM3L,QAAQ,SAAA8L,GAAwB,IAArBnO,EAAqBmO,EAArBnO,KAAMa,EAAesN,EAAftN,SACbuN,YAA0BpO,EAAKqO,OAAO,GAAGC,cAAgBtO,EAAKuO,OAAO,EAAGvO,EAAKwC,OAAS,GAGvD,mBAA1B0L,EAAOE,IAAmE,mBAA3BF,EAAA,SAOrB,mBAA1BA,EAAOE,GAKoB,mBAA3BF,EAAA,UACPA,EAAA,SAAuBlO,EAAMa,GAL7BqN,EAAOE,GAAevN,GANtB2N,QAAQC,KAAR,YAAyBL,EAAzB,0BAAyErC,EAAK2C,KAA9E,4CACoB1O,KAezBkO,qCAGOxB,GAQd,OAPgB,IAAIiC,OAAO,yKAKD,KAEXC,KAAKlC,yCAGHb,EAAMgD,GACvB,IAAMC,KAEA7I,EAAM9F,OAAOW,UAAUC,eAa7B,OAXAZ,OAAO+F,KAAK2F,GAAMxJ,QAAQ,SAACI,GACvB,GAAIwD,EAAIrG,KAAKiM,EAAMpJ,GAAM,CACrB,IAAMsM,EAAIF,EAAYA,EAAZ,IAAsBpM,EAAtB,IAA+BA,EACrCuM,EAAInD,EAAKpJ,GACbuM,EAAKA,aAAaC,KAAQD,EAAEE,cAAgBF,EAC5CF,EAAMK,KAAY,OAANH,GAA2B,iBAAb,IAAOA,EAAP,YAAArJ,EAAOqJ,IAC7B5D,EAAQ0B,cAAckC,EAAGD,GACtBK,mBAAmBL,GAFf,IAEqBK,mBAAmBJ,OAIpDF,EAAMO,KAAK,KAAK5K,QAAQ,iBAAkB,wBArRpC2G,iECXrB,IAAAkE,EAAA/P,EAAA,GACAgQ,EAAAhQ,EAAA,IAEAiQ,GACAC,eAAA,qCAGA,SAAAC,EAAA9C,EAAAnM,IACA6O,EAAAnM,YAAAyJ,IAAA0C,EAAAnM,YAAAyJ,EAAA,mBACAA,EAAA,gBAAAnM,GAgBA,IAXAkP,EAWAC,GACAD,SAXA,oBAAAE,eAEAF,EAAApQ,EAAA,SACG,IAAAuQ,IAEHH,EAAApQ,EAAA,KAEAoQ,GAMA9C,kBAAA,SAAAhB,EAAAe,GAEA,OADA2C,EAAA3C,EAAA,gBACA0C,EAAA3M,WAAAkJ,IACAyD,EAAA5M,cAAAmJ,IACAyD,EAAAvN,SAAA8J,IACAyD,EAAA/L,SAAAsI,IACAyD,EAAAjM,OAAAwI,IACAyD,EAAAhM,OAAAuI,GAEAA,EAEAyD,EAAAzM,kBAAAgJ,GACAA,EAAA7I,OAEAsM,EAAA7L,kBAAAoI,IACA6D,EAAA9C,EAAA,mDACAf,EAAA7J,YAEAsN,EAAAnN,SAAA0J,IACA6D,EAAA9C,EAAA,kCACAmD,KAAAC,UAAAnE,IAEAA,IAGAoE,mBAAA,SAAApE,GAEA,oBAAAA,EACA,IACAA,EAAAkE,KAAAG,MAAArE,GACO,MAAAsE,IAEP,OAAAtE,IAOAuE,QAAA,EAEAC,eAAA,aACAC,eAAA,eAEAC,kBAAA,EAEAC,eAAA,SAAAvE,GACA,OAAAA,GAAA,KAAAA,EAAA,MAIA2D,EAAAhD,SACA6D,QACAC,OAAA,sCAIApB,EAAAjN,SAAA,gCAAA6J,GACA0D,EAAAhD,QAAAV,QAGAoD,EAAAjN,SAAA,+BAAA6J,GACA0D,EAAAhD,QAAAV,GAAAoD,EAAAvL,MAAAyL,KAGAtQ,EAAAD,QAAA2Q,+VCxFAe,EAAApR,EAAA,2CAeqBqR,cACjB,SAAAA,EAAY3L,gGAAYG,CAAAzD,KAAAiP,GAAA,IAAA7K,mKAAA8K,CAAAlP,MAAAiP,EAAAE,WAAA3Q,OAAA4Q,eAAAH,IAAAhR,KAAA+B,MAEhBsD,aAEAC,OACI8L,KAAM,SACNhR,KAAM,SACNiR,WAAY,MACZC,KAAM,cARM,OAapBnL,EAAKoL,SAAS,OAAQ,OAAQ,aAAc,SAbxBpL,mXAgBhBiL,GACJ,OAAOrP,KAAKmE,YAAY,OAAQkL,mCAG5B7K,GACJ,OAAOxE,KAAKmF,YAAY,OAAQX,mCAG5BnG,GACJ,OAAO2B,KAAKmE,YAAY,OAAQ9F,mCAG5BmG,GACJ,OAAOxE,KAAKmF,YAAY,OAAQX,yCAGtBiL,GACV,OAAOzP,KAAKmE,YAAY,aAAcsL,yCAG5BjL,GACV,OAAOxE,KAAKmF,YAAY,aAAcX,mCAGlC+K,GACJ,OAAOvP,KAAKmE,YAAY,OAAQoL,mCAG5B/K,GACJ,OAAOxE,KAAKmF,YAAY,OAAQX,sBA9CnByK,gWCfrBD,EAAApR,EAAA,2CAqCqB6J,cACjB,SAAAA,EAAYnE,gGAAYG,CAAAzD,KAAAyH,GAAA,IAAArD,mKAAA8K,CAAAlP,MAAAyH,EAAA0H,WAAA3Q,OAAA4Q,eAAA3H,IAAAxJ,KAAA+B,MAEhBsD,aAEAC,OACImM,OAAQ,SACRrR,KAAM,SACNiM,OAAQ,SACRqF,OAAQ,SACRC,WAAY,QACZC,SAAU,QACVC,SAAU,SACVC,YAAa,OACbC,WAAY,OACZC,OAAQ,UACRC,cAAe,UAGnB1M,UAAW,aAlBK,OAsBpBY,EAAKoL,SACD,SACA,OACA,SACA,SACA,aACA,WACA,WACA,cACA,aACA,kBAhCgBpL,qXAoCdsL,GACN,OAAO1P,KAAKmE,YAAY,SAAUuL,qCAG5BlL,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,mCAG9BnG,GACJ,OAAO2B,KAAKmE,YAAY,OAAQ9F,mCAG5BmG,GACJ,OAAOxE,KAAKmF,YAAY,OAAQX,qCAG1B8F,GACN,OAAOtK,KAAKmE,YAAY,SAAUmG,qCAG5B9F,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,qCAG5BmL,GACN,OAAO3P,KAAKmE,YAAY,SAAUwL,qCAG5BnL,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,yCAGxBoL,GACV,OAAO5P,KAAKmE,YAAY,aAAcyL,yCAG5BpL,GACV,OAAOxE,KAAKmF,YAAY,aAAcX,uCAG9BqL,GACR,OAAO7P,KAAKmE,YAAY,WAAY0L,uCAG5BrL,GACR,OAAOxE,KAAKmF,YAAY,WAAYX,uCAG5BsL,GACR,OAAO9P,KAAKmE,YAAY,WAAY2L,uCAG5BtL,GACR,OAAOxE,KAAKmF,YAAY,WAAYX,0CAGzBuL,GACX,OAAO/P,KAAKmE,YAAY,cAAe4L,0CAG5BvL,GACX,OAAOxE,KAAKmF,YAAY,cAAeX,yCAG7BwL,GACV,OAAOhQ,KAAKmE,YAAY,aAAc6L,yCAG5BxL,GACV,OAAOxE,KAAKmF,YAAY,aAAcX,4CAGzB0L,GACb,OAAOlQ,KAAKmE,YAAY,gBAAiB+L,4CAG5B1L,GACb,OAAOxE,KAAKmF,YAAY,gBAAiBX,uCAIzC,OAAOxE,KAAKmE,YAAY,UAAU,sBAtHrBsD,gWCrCrBuH,EAAApR,EAAA,2CA4BqBwJ,cACjB,SAAAA,EAAY9D,gGAAYG,CAAAzD,KAAAoH,GAAA,IAAAhD,mKAAA8K,CAAAlP,MAAAoH,EAAA+H,WAAA3Q,OAAA4Q,eAAAhI,IAAAnJ,KAAA+B,MAEhBsD,aAEAC,OACImM,OAAQ,SACRO,OAAQ,UACRE,eAAgB,OAChBjH,aAAc,SACdkH,UAAW,SACXC,eAAgB,SAChBC,WAAY,SACZC,gBAAiB,SACjBC,UAAW,SACXC,eAAgB,SAChBC,QAAS,UAGblN,UAAW,SAAU,cAlBL,OAsBpBY,EAAKoL,SACD,SACA,SACA,iBACA,eACA,YACA,iBACA,aACA,kBACA,YACA,iBACA,YAjCgBpL,qXAqCdI,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,qCAG5ByL,GACN,OAAOjQ,KAAKmE,YAAY,SAAU8L,qCAG5BzL,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,6CAGpB2L,GACd,OAAOnQ,KAAKmE,YAAY,iBAAkBgM,6CAG5B3L,GACd,OAAOxE,KAAKmF,YAAY,iBAAkBX,2CAG9B0E,GACZ,OAAOlJ,KAAKmE,YAAY,eAAgB+E,2CAG5B1E,GACZ,OAAOxE,KAAKmF,YAAY,eAAgBX,wCAG/B4L,GACT,OAAOpQ,KAAKmE,YAAY,YAAaiM,wCAG5B5L,GACT,OAAOxE,KAAKmF,YAAY,YAAaX,6CAGvB6L,GACd,OAAOrQ,KAAKmE,YAAY,iBAAkBkM,6CAG5B7L,GACd,OAAOxE,KAAKmF,YAAY,iBAAkBX,yCAGhC8L,GACV,OAAOtQ,KAAKmE,YAAY,aAAcmM,yCAG5B9L,GACV,OAAOxE,KAAKmF,YAAY,aAAcX,8CAGvB+L,GACf,OAAOvQ,KAAKmE,YAAY,kBAAmBoM,8CAG5B/L,GACf,OAAOxE,KAAKmF,YAAY,kBAAmBX,wCAGlCgM,GACT,OAAOxQ,KAAKmE,YAAY,YAAaqM,wCAG5BhM,GACT,OAAOxE,KAAKmF,YAAY,YAAaX,6CAGvBiM,GACd,OAAOzQ,KAAKmE,YAAY,iBAAkBsM,6CAG5BjM,GACd,OAAOxE,KAAKmF,YAAY,iBAAkBX,sCAGnCA,GACP,OAAOxE,KAAKmF,YAAY,UAAWX,sBAnHtB4C,gWC7BrB4H,EAAApR,EAAA,2CAEqB+S,cACjB,SAAAA,EAAYrN,gGAAYG,CAAAzD,KAAA2Q,GAAA,IAAAvM,mKAAA8K,CAAAlP,MAAA2Q,EAAAxB,WAAA3Q,OAAA4Q,eAAAuB,IAAA1S,KAAA+B,MAEhBsD,aAEAC,OACIqN,WAAY,QACZd,SAAU,SACVe,UAAW,QACXC,cAAe,UARH,OAapB1M,EAAKoL,SAAS,aAAc,WAAY,YAAa,kBAbjCpL,yXAgBVwM,GACV,OAAO5Q,KAAKmE,YAAY,aAAcyM,yCAG5BpM,GACV,OAAOxE,KAAKmF,YAAY,aAAcX,uCAG9BsL,GACR,OAAO9P,KAAKmE,YAAY,WAAY2L,uCAG5BtL,GACR,OAAOxE,KAAKmF,YAAY,WAAYX,wCAG3BqM,GACT,OAAO7Q,KAAKmE,YAAY,YAAa0M,GAAWjM,eAAe,sDAGtDJ,GACT,OAAOxE,KAAKmF,YAAY,YAAaX,4CAGxBsM,GACb,OAAO9Q,KAAKmE,YAAY,gBAAiB2M,GAAelM,eAAe,sDAG1DJ,GACb,OAAOxE,KAAKmF,YAAY,gBAAiBX,sCAIzC,IAAMoM,EAAa5Q,KAAK+Q,gBAClBjB,EAAW9P,KAAKgR,cAClBC,EAAS,EAKb,OAHIjR,KAAKkR,aAAa,QAAOD,EAASjR,KAAKkR,gBACvClR,KAAKmR,iBAAiB,QAAOF,EAAYjR,KAAKmR,mBAAjB,KAEvBP,EAAV,IAAwBd,EAAxB,IAAoCmB,qBAzDvBN,kWCDrB/S,EAAA,QACAA,EAAA,wDAOA,IAAMwT,EAAe,IAAIpO,QAOnBqO,EAAmB,IAAIrO,QAwCR+D,cACjB,SAAAA,EAAYzD,gGAAYG,CAAAzD,KAAA+G,GAAA,IAAA3C,mKAAA8K,CAAAlP,MAAA+G,EAAAoI,WAAA3Q,OAAA4Q,eAAArI,IAAA9I,KAAA+B,MAEhBsD,aAEAC,OACImM,OAAQ,SACRO,OAAQ,UACR5R,KAAM,SACNiT,QAAS,SACTC,YAAa,SACbC,cAAe,SACfC,mBAAoB,UACpBC,mBAAoB,SACpBC,MAAO,WAGXnO,UAAW,YAhBK,OAoBpBY,EAAKoL,SACD,SACA,SACA,OACA,UACA,cACA,gBACA,qBACA,qBACA,UAGJ4B,EAAa1N,IAAbU,MACAiN,EAAiB3N,IAAjBU,GAA2B,GAjCPA,qXAoCdsL,GACN,OAAO1P,KAAKmE,YAAY,SAAUuL,qCAG5BlL,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,qCAG5ByL,GACN,OAAOjQ,KAAKmE,YAAY,SAAU8L,qCAG5BzL,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,mCAG9BnG,GACJ,OAAO2B,KAAKmE,YAAY,OAAQ9F,mCAG5BmG,GACJ,OAAOxE,KAAKmF,YAAY,OAAQX,sCAGzB8M,GACP,OAAOtR,KAAKmE,YAAY,UAAWmN,sCAG5B9M,GACP,OAAOxE,KAAKmF,YAAY,UAAWX,iDAGjBiN,GAClB,OAAOzR,KAAKmE,YAAY,qBAAsBsN,iDAG5BjN,GAClB,OAAOxE,KAAKmF,YAAY,qBAAsBX,iDAG5BkN,GAClB,OAAO1R,KAAKmE,YAAY,qBAAsBuN,iDAG5BlN,GAClB,OAAOxE,KAAKmF,YAAY,qBAAsBX,0CAGnC+M,GACX,OAAOvR,KAAKmE,YAAY,cAAeoN,0CAG5B/M,GACX,OAAOxE,KAAKmF,YAAY,cAAeX,4CAG1BgN,GACb,OAAOxR,KAAKmE,YAAY,gBAAiBqN,4CAG5BhN,GACb,OAAOxE,KAAKmF,YAAY,gBAAiBX,oCAGpCA,GACL,OAAOxE,KAAKmF,YAAY,QAASX,uCASzBqL,GACR,KAAMA,wBACF,MAAM,IAAI5P,UAAU,mDAGxB,IAAM2R,EAAYR,EAAaxS,IAAIoB,MAKnC,OAJA4R,EAAUpE,KAAKqC,GACfuB,EAAa1N,IAAI1D,KAAM4R,GACvBP,EAAiB3N,IAAI1D,MAAM,GAEpBA,iDAOS4R,GAAW,IAAAjN,EAAA3E,KAI3B,OAHAoR,EAAa1N,IAAI1D,SACjBqR,EAAiB3N,IAAI1D,MAAM,GAEtB4R,EAEDvI,MAAM/I,QAAQsR,IACdA,EAAUlR,QAAQ,SAACmP,GACflL,EAAKkN,YAAYhC,KAGd7P,OAGXA,KAAK6R,YAAYD,GAEV5R,MAZgBA,mDAoBvB,OAAOxB,OAAOiG,UAAW2M,EAAaxS,IAAIoB,+CAG9BsD,GACZ,GAAKA,EAAL,CAEA,IAAMuM,EAAW,IAAAiC,EAAA/N,QACjBT,EAAW5C,QAAQ,SAACxB,GAChB2Q,EAAS1L,YAAYjF,EAASb,KAAMa,EAASJ,SAEjDkB,KAAK6R,YAAYhC,8CAIjB,IAAM9M,yVAUN,OARIqO,EAAaxS,IAAIoB,MAAMa,SACvBkC,EAAc8M,SAAWuB,EAAaxS,IAAIoB,MAAMqK,IAAI,SAAAwF,GAAA,OAAYA,EAASxP,eAGxE0C,EAAc8M,UAAYwB,EAAiBzS,IAAIoB,QAChD+C,EAAc8M,SAAW,IAGtB9M,qBAhLMgE,gWCvDrBiI,EAAApR,EAAA,2CAqCqBuK,cACjB,SAAAA,EAAY7E,gGAAYG,CAAAzD,KAAAmI,GAAA,IAAA/D,mKAAA8K,CAAAlP,MAAAmI,EAAAgH,WAAA3Q,OAAA4Q,eAAAjH,IAAAlK,KAAA+B,MAEhBsD,aAEAC,OACImM,OAAQ,SACRO,OAAQ,UACR5R,KAAM,SACN0T,eAAgB,SAChBC,oBAAqB,MACrBC,gBAAiB,MACjBC,aAAc,MACdC,gBAAiB,SACjBR,MAAO,WAGXnO,UAAW,YAhBK,OAoBpBY,EAAKoL,SACD,SACA,SACA,OACA,iBACA,sBACA,kBACA,eACA,kBACA,UA7BgBpL,qXAiCdsL,GACN,OAAO1P,KAAKmE,YAAY,SAAUuL,qCAG5BlL,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,qCAG5ByL,GACN,OAAOjQ,KAAKmE,YAAY,SAAU8L,qCAG5BzL,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,mCAG9BnG,GACJ,OAAO2B,KAAKmE,YAAY,OAAQ9F,mCAG5BmG,GACJ,OAAOxE,KAAKmF,YAAY,OAAQX,6CAGlBuN,GACd,OAAO/R,KAAKmE,YAAY,iBAAkB4N,6CAG5BvN,GACd,OAAOxE,KAAKmF,YAAY,iBAAkBX,kDAGvBwN,GACnB,OAAOhS,KAAKmE,YAAY,sBAAuB6N,kDAG5BxN,GACnB,OAAOxE,KAAKmF,YAAY,sBAAuBX,8CAGhCyN,GACf,OAAOjS,KAAKmE,YAAY,kBAAmB8N,8CAG5BzN,GACf,OAAOxE,KAAKmF,YAAY,kBAAmBX,2CAG/B0N,GACZ,OAAOlS,KAAKmE,YAAY,eAAgB+N,2CAG5B1N,GACZ,OAAOxE,KAAKmF,YAAY,eAAgBX,8CAGzB2N,GACf,OAAOnS,KAAKmE,YAAY,kBAAmBgO,8CAG5B3N,GACf,OAAOxE,KAAKmF,YAAY,kBAAmBX,oCAGtCA,GACL,OAAOxE,KAAKmF,YAAY,QAASX,sBAnGpB2D,gWCrCrB6G,EAAApR,EAAA,2CAUqBsK,cACjB,SAAAA,EAAY5E,gGAAYG,CAAAzD,KAAAkI,GAAA,IAAA9D,mKAAA8K,CAAAlP,MAAAkI,EAAAiH,WAAA3Q,OAAA4Q,eAAAlH,IAAAjK,KAAA+B,MAEhBsD,aAEAC,OACImM,OAAQ,SACRO,OAAQ,UACRmC,iBAAkB,UAGtB5O,UAAW,YAVK,OAcpBY,EAAKoL,SAAS,SAAU,SAAU,mBAddpL,qXAiBdsL,GACN,OAAO1P,KAAKmE,YAAY,SAAUuL,qCAG5BlL,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,qCAG5ByL,GACN,OAAOjQ,KAAKmE,YAAY,SAAU8L,qCAG5BzL,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,4CAGrB6N,GACb,OAAOrS,KAAKmE,YAAY,iBAAkBkO,4CAG7B7N,GACb,OAAOxE,KAAKmF,YAAY,iBAAkBX,sBAvC7B0D,gWCVrB8G,EAAApR,EAAA,2CAoDqB4I,cACjB,SAAAA,EAAYlD,gGAAYG,CAAAzD,KAAAwG,GAAA,IAAApC,mKAAA8K,CAAAlP,MAAAwG,EAAA2I,WAAA3Q,OAAA4Q,eAAA5I,IAAAvI,KAAA+B,MAEhBsD,aAEAC,OACImM,OAAQ,SACRO,OAAQ,UACR5R,KAAM,SACNiU,YAAa,SACbC,MAAO,SACPzC,SAAU,SACV0C,UAAW,UACXC,OAAQ,UACRC,aAAc,UACdC,WAAY,MACZC,YAAa,MACbC,SAAU,MACVlB,MAAO,WAGXnO,UAAW,YApBK,OAwBpBY,EAAKoL,SACD,SACA,SACA,OACA,cACA,QACA,WACA,YACA,SACA,eACA,aACA,cACA,WACA,UArCgBpL,qXAyCdsL,GACN,OAAO1P,KAAKmE,YAAY,SAAUuL,qCAG5BlL,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,qCAG5ByL,GACN,OAAOjQ,KAAKmE,YAAY,SAAU8L,qCAG5BzL,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,mCAG9BnG,GACJ,OAAO2B,KAAKmE,YAAY,OAAQ9F,mCAG5BmG,GACJ,OAAOxE,KAAKmF,YAAY,OAAQX,0CAGrB8N,GACX,OAAOtS,KAAKmE,YAAY,cAAemO,0CAG5B9N,GACX,OAAOxE,KAAKmF,YAAY,cAAeX,oCAGlC+N,GACL,OAAOvS,KAAKmE,YAAY,QAASoO,oCAG5B/N,GACL,OAAOxE,KAAKmF,YAAY,QAASX,uCAGzBsL,GACR,OAAO9P,KAAKmE,YAAY,WAAY2L,uCAG5BtL,GACR,OAAOxE,KAAKmF,YAAY,WAAYX,wCAG3BgO,GACT,OAAOxS,KAAKmE,YAAY,YAAaqO,wCAG5BhO,GACT,OAAOxE,KAAKmF,YAAY,YAAaX,qCAG/BiO,GACN,OAAOzS,KAAKmE,YAAY,SAAUsO,qCAG5BjO,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,2CAGtBkO,GACZ,OAAO1S,KAAKmE,YAAY,eAAgBuO,2CAG5BlO,GACZ,OAAOxE,KAAKmF,YAAY,eAAgBX,yCAG9BmO,GACV,OAAO3S,KAAKmE,YAAY,aAAcwO,yCAG5BnO,GACV,OAAOxE,KAAKmF,YAAY,aAAcX,0CAG3BoO,GACX,OAAO5S,KAAKmE,YAAY,cAAeyO,0CAG5BpO,GACX,OAAOxE,KAAKmF,YAAY,cAAeX,uCAG/BqO,GACR,OAAO7S,KAAKmE,YAAY,WAAY0O,uCAG5BrO,GACR,OAAOxE,KAAKmF,YAAY,WAAYX,oCAG/BA,GACL,OAAOxE,KAAKmF,YAAY,QAASX,sBA3IpBgC,gWCpDrBwI,EAAApR,EAAA,2CAqCqBqK,cACjB,SAAAA,EAAY3E,gGAAYG,CAAAzD,KAAAiI,GAAA,IAAA7D,mKAAA8K,CAAAlP,MAAAiI,EAAAkH,WAAA3Q,OAAA4Q,eAAAnH,IAAAhK,KAAA+B,MAEhBsD,aAEAC,OACImM,OAAQ,SACRO,OAAQ,UACR5R,KAAM,SACNkU,MAAO,QACPE,OAAQ,UACRK,cAAe,SACfH,WAAY,MACZI,UAAW,OACXpB,MAAO,WAGXnO,UAAW,QAAS,WAAY,YAhBhB,OAoBpBY,EAAKoL,SACD,SACA,SACA,OACA,SACA,gBACA,aACA,YACA,QACA,WACA,UA9BgBpL,qXAkCdsL,GACN,OAAO1P,KAAKmE,YAAY,SAAUuL,qCAG5BlL,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,qCAG5ByL,GACN,OAAOjQ,KAAKmE,YAAY,SAAU8L,qCAG5BzL,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,mCAG9BnG,GACJ,OAAO2B,KAAKmE,YAAY,OAAQ9F,mCAG5BmG,GACJ,OAAOxE,KAAKmF,YAAY,OAAQX,qCAG1BiO,GACN,OAAOzS,KAAKmE,YAAY,SAAUsO,qCAG5BjO,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,4CAGrBsO,GACb,OAAO9S,KAAKmE,YAAY,gBAAiB2O,4CAG5BtO,GACb,OAAOxE,KAAKmF,YAAY,gBAAiBX,yCAG/BmO,GACV,OAAO3S,KAAKmE,YAAY,aAAcwO,yCAG5BnO,GACV,OAAOxE,KAAKmF,YAAY,aAAcX,wCAG7BuO,GACT,OAAO/S,KAAKmE,YAAY,YAAa4O,wCAG5BvO,GACT,OAAOxE,KAAKmF,YAAY,YAAaX,oCAGhCA,GACL,OAAOxE,KAAKmF,YAAY,QAASX,oCAG5BA,GACL,OAAOxE,KAAKmF,YAAY,QAASX,uCAGzBA,GACR,OAAOxE,KAAKmF,YAAY,WAAYX,sBApGvByD,4iBCrCrB+K,EAAApV,EAAA,uCAMA,IAAMqV,EAAK,IAAIjQ,QAEMkQ,aACjB,SAAAA,iGAAczP,CAAAzD,KAAAkT,GACVD,EAAGvP,IAAI1D,MAAQmT,kEAIf,OAAO3U,OAAOiG,UAAWwO,EAAGrU,IAAIoB,MAAMmT,+DAGfC,EAAqBC,GAC5C,IAAKvP,EAAAC,QAAWxE,QAAQ6T,IAAuD,iBAA/B,IAAOA,EAAP,YAAApP,EAAOoP,IACnD,MAAM,IAAInT,UAAJ,2BAAyCmT,GAKnD,OAFAH,EAAGrU,IAAIoB,MAAMmT,WAAWC,GAAuBC,EAExCrT,wDAGgBoT,GACvB,IAAKtP,EAAAC,QAAWxE,QAAQ6T,IAAuD,iBAA/B,IAAOA,EAAP,YAAApP,EAAOoP,IACnD,MAAM,IAAInT,UAAJ,2BAAyCmT,GAGnD,OAAOH,EAAGrU,IAAIoB,MAAMmT,WAAWC,kCAG5BE,GACH,IAAKxP,EAAAC,QAAWxE,QAAQ+T,IAAuB,iBAAf,IAAOA,EAAP,YAAAtP,EAAOsP,IACnC,MAAM,IAAIrT,UAAJ,WAAyBqT,GAInC,OAFAL,EAAGrU,IAAIoB,MAAMsT,IAAM,IAAIhG,KAAK7C,OAAO6I,IAE5BtT,sCAIP,OAAQiT,EAAGrU,IAAIoB,MAAMsT,IAAO,IAAIhG,KAAK2F,EAAGrU,IAAIoB,MAAMsT,UAAO7T,qCAIzD,IAAIyK,EAAO,qBAELiJ,EAAanT,KAAKuT,gBAClBjP,EAAM9F,OAAOW,UAAUC,eAW7B,OATAZ,OAAO+F,KAAK4O,GAAYzS,QAAQ,SAAC0S,GAC7BlJ,oBAAyBkJ,EAAzB,IACI9O,EAAIrG,KAAKkV,EAAYC,KACrBlJ,GAAQkE,KAAKC,UAAU8E,EAAWC,OAI1ClJ,GAAQ,uBArDKgJ,8VCHrB,IAAMM,EAAQ,IAAIxQ,QAEGyQ,aACjB,SAAAA,iGAAchQ,CAAAzD,KAAAyT,GACVD,EAAM9P,IAAI1D,MAAQ0T,mEAULC,GAEb,OADAH,EAAM5U,IAAIoB,MAAM2T,cAAgBA,EACzB3T,gDAQP,OAAOwT,EAAM5U,IAAIoB,MAAM2T,sDAYXC,GAEZ,OADAJ,EAAM5U,IAAIoB,MAAM4T,aAAeA,EACxB5T,+CAQP,OAAOwT,EAAM5U,IAAIoB,MAAM4T,uDAUTC,GAEd,OADAL,EAAM5U,IAAIoB,MAAM6T,eAAiBA,EAC1B7T,iDAQP,OAAOwT,EAAM5U,IAAIoB,MAAM6T,uDAQvB,OAAOrV,OAAOiG,UAAW+O,EAAM5U,IAAIoB,MAAM0T,yEAGRN,GACjC,OAAO5U,OAAOiG,UAAW+O,EAAM5U,IAAIoB,MAAM0T,WAAWN,iEAGnBA,EAAqBU,GAAyB,IACvEJ,EAAeF,EAAM5U,IAAIoB,MAAzB0T,WAQR,YANwCjU,IAApCiU,EAAWN,IAAuC5U,OAAO+F,KAAKmP,EAAWN,IAAsBvS,SAC/F6S,EAAWN,OAGfM,EAAWN,GAAuB5U,OAAOiG,OAAOiP,EAAWN,GAAsBU,GAE1E9T,wBAxFMyT,gWCPrBzE,EAAApR,EAAA,2CA8BqBkK,cACjB,SAAAA,EAAYxE,gGAAYG,CAAAzD,KAAA8H,GAAA,IAAA1D,mKAAA8K,CAAAlP,MAAA8H,EAAAqH,WAAA3Q,OAAA4Q,eAAAtH,IAAA7J,KAAA+B,MAEhBsD,aAEAC,OACImM,OAAQ,SACRO,OAAQ,UACR5R,KAAM,SACNwV,eAAgB,SAChBE,kBAAmB,UACnBpC,MAAO,WAGXnO,UAAW,YAbK,OAiBpBY,EAAKoL,SAAS,SAAU,SAAU,OAAQ,iBAAkB,oBAAqB,UAjB7DpL,qXAoBdsL,GACN,OAAO1P,KAAKmE,YAAY,SAAUuL,qCAG5BlL,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,qCAG5ByL,GACN,OAAOjQ,KAAKmE,YAAY,SAAU8L,qCAG5BzL,GACN,OAAOxE,KAAKmF,YAAY,SAAUX,mCAG9BnG,GACJ,OAAO2B,KAAKmE,YAAY,OAAQ9F,mCAG5BmG,GACJ,OAAOxE,KAAKmF,YAAY,OAAQX,6CAGlBqP,GACd,OAAO7T,KAAKmE,YAAY,iBAAkB0P,6CAG5BrP,GACd,OAAOxE,KAAKmF,YAAY,iBAAkBX,gDAGzBuP,GACjB,OAAO/T,KAAKmE,YAAY,oBAAqB4P,gDAG5BvP,GACjB,OAAOxE,KAAKmF,YAAY,oBAAqBX,oCAGxCA,GACL,OAAOxE,KAAKmF,YAAY,QAASX,sBA9DpBsD,+GC7BN,SAAChH,EAAKhC,GACjB,OAAQgC,EAAI8B,OAAO+H,eACf,IAAK,MACL,IAAK,SACD,OAAOF,OAAO3L,GAClB,IAAK,MACL,IAAK,UACD,OAAOkV,SAASlV,EAAO,IAC3B,IAAK,QACL,IAAK,SACD,OAAOmV,WAAWnV,GACtB,IAAK,OACL,IAAK,UACD,OAAQA,GACJ,IAAK,OACL,IAAK,OACD,OAAO,EACX,IAAK,QACL,IAAK,QACD,OAAO,EACX,QACI,OAAOiG,QAAQjG,GAE3B,IAAK,OACD,MAAkB,QAAVA,EAAmB,MAAQ,IAAIwO,KAAK7C,OAAO3L,IACvD,QACI,OAAOA,sDC1BnB,SAAAoV,EAAAC,GACAnU,KAAAmU,UAGAD,EAAA/U,UAAAkB,SAAA,WACA,gBAAAL,KAAAmU,QAAA,KAAAnU,KAAAmU,QAAA,KAGAD,EAAA/U,UAAAiV,YAAA,EAEA7W,EAAAD,QAAA4W,gCChBA3W,EAAAD,QAAA,SAAAwB,GACA,SAAAA,MAAAsV,2CCDA,IAAAC,EAAAzW,EAAA,IAYAL,EAAAD,QAAA,SAAA6W,EAAAG,EAAAjF,EAAAvF,EAAAE,GACA,IAAA6B,EAAA,IAAA1C,MAAAgL,GACA,OAAAE,EAAAxI,EAAAyI,EAAAjF,EAAAvF,EAAAE,kCCdA,IAAA2D,EAAA/P,EAAA,GACA2W,EAAA3W,EAAA,IACA4W,EAAA5W,EAAA,IACA6W,EAAA7W,EAAA,IACA8W,EAAA9W,EAAA,IACA+W,EAAA/W,EAAA,IACA8N,EAAA,oBAAAhO,eAAAgO,MAAAhO,OAAAgO,KAAAvL,KAAAzC,SAAAE,EAAA,IAEAL,EAAAD,QAAA,SAAAgX,GACA,WAAArI,QAAA,SAAAC,EAAAE,GACA,IAAAwI,EAAAN,EAAApK,KACA2K,EAAAP,EAAArJ,QAEA0C,EAAA3M,WAAA4T,WACAC,EAAA,gBAGA,IAAA/K,EAAA,IAAAoE,eACA4G,EAAA,qBACAC,GAAA,EAiBA,GAXA,oBAAArX,SACAA,OAAAsX,gBAAA,oBAAAlL,GACA4K,EAAAJ,EAAAvJ,OACAjB,EAAA,IAAApM,OAAAsX,eACAF,EAAA,SACAC,GAAA,EACAjL,EAAAmL,WAAA,aACAnL,EAAAoL,UAAA,cAIAZ,EAAA/I,KAAA,CACA,IAAAxC,EAAAuL,EAAA/I,KAAAxC,UAAA,GACAC,EAAAsL,EAAA/I,KAAAvC,UAAA,GACA6L,EAAApJ,cAAA,SAAAC,EAAA3C,EAAA,IAAAC,GA+DA,GA5DAc,EAAAqL,KAAAb,EAAA/J,OAAAoC,cAAA6H,EAAAF,EAAAvJ,IAAAuJ,EAAA5J,OAAA4J,EAAAc,mBAAA,GAGAtL,EAAA2E,QAAA6F,EAAA7F,QAGA3E,EAAAgL,GAAA,WACA,GAAAhL,IAAA,IAAAA,EAAAuL,YAAAN,KAQA,IAAAjL,EAAAQ,QAAAR,EAAAwL,aAAA,IAAAxL,EAAAwL,YAAAzQ,QAAA,WAKA,IAAA0Q,EAAA,0BAAAzL,EAAA2K,EAAA3K,EAAA0L,yBAAA,KAEAxL,GACAE,KAFAoK,EAAAtJ,cAAA,SAAAsJ,EAAAtJ,aAAAlB,EAAAE,SAAAF,EAAA2L,aAIAnL,OAAA,OAAAR,EAAAQ,OAAA,IAAAR,EAAAQ,OACAoL,WAAA,OAAA5L,EAAAQ,OAAA,aAAAR,EAAA4L,WACAzK,QAAAsK,EACAjB,SACAxK,WAGAyK,EAAArI,EAAAE,EAAApC,GAGAF,EAAA,OAIAA,EAAA6L,QAAA,WAGAvJ,EAAAuI,EAAA,gBAAAL,EAAA,KAAAxK,IAGAA,EAAA,MAIAA,EAAAoL,UAAA,WACA9I,EAAAuI,EAAA,cAAAL,EAAA7F,QAAA,cAAA6F,EAAA,eACAxK,IAGAA,EAAA,MAMA6D,EAAA3L,uBAAA,CACA,IAAA4T,EAAAhY,EAAA,IAGAiY,GAAAvB,EAAAwB,iBAAApB,EAAAJ,EAAAvJ,OAAAuJ,EAAA5F,eACAkH,EAAAG,KAAAzB,EAAA5F,qBACAjP,EAEAoW,IACAhB,EAAAP,EAAA3F,gBAAAkH,GAuBA,GAlBA,qBAAA/L,GACA6D,EAAAjN,QAAAmU,EAAA,SAAAtU,EAAAO,QACA,IAAA8T,GAAA,iBAAA9T,EAAA6J,qBAEAkK,EAAA/T,GAGAgJ,EAAAkM,iBAAAlV,EAAAP,KAMA+T,EAAAwB,kBACAhM,EAAAgM,iBAAA,GAIAxB,EAAAtJ,aACA,IACAlB,EAAAkB,aAAAsJ,EAAAtJ,aACO,MAAAwD,GAGP,YAAA8F,EAAAtJ,aACA,MAAAwD,EAMA,mBAAA8F,EAAA2B,oBACAnM,EAAAoM,iBAAA,WAAA5B,EAAA2B,oBAIA,mBAAA3B,EAAA6B,kBAAArM,EAAAsM,QACAtM,EAAAsM,OAAAF,iBAAA,WAAA5B,EAAA6B,kBAGA7B,EAAA+B,aAEA/B,EAAA+B,YAAAC,QAAAvM,KAAA,SAAAwM,GACAzM,IAIAA,EAAA0M,QACApK,EAAAmK,GAEAzM,EAAA,aAIArK,IAAAmV,IACAA,EAAA,MAIA9K,EAAA2M,KAAA7B,oCC/KArX,EAAAD,QAAA,SAAAsD,EAAA+B,GACA,kBAEA,IADA,IAAA+T,EAAA,IAAArN,MAAA9G,UAAA1B,QACA/C,EAAA,EAAmBA,EAAA4Y,EAAA7V,OAAiB/C,IACpC4Y,EAAA5Y,GAAAyE,UAAAzE,GAEA,OAAA8C,EAAA+V,MAAAhU,EAAA+T,oFCDA,QAAA9Y,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,kEAmBIgZ,iBAXW,SAWMlN,GACb,KAAMA,wBACF,MAAM,IAAIzJ,UAAU,0CAKxB,OAFAyJ,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAE3BqR,EAAA/S,QACFuI,KAAK5C,EAAYf,EAAA5E,QAAUqE,QAAQ3B,cADjC,iBAEFsD,KAAK,SAAAI,GAAA,OAASA,EAAME,IAAI,SAAAD,GAAA,OAAQA,EAAKlL,SAAS,GAAGJ,WAa1DiY,oBAjCW,SAiCSrN,GAChB,KAAMA,wBACF,MAAM,IAAIzJ,UAAU,0CAKxB,OAFAyJ,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAE3BqR,EAAA/S,QACFuI,KAAK5C,EAAYf,EAAA5E,QAAUqE,QAAQ3B,cADjC,oBAEFsD,KAAK,SAAAI,GAAA,OAASA,EAAME,IAAI,SAAAD,GAAA,OAAQA,EAAKlL,SAAS,GAAGJ,WAe1DkY,cAzDW,SAyDGtN,EAASuN,GACnB,KAAMvN,wBACF,MAAM,IAAIzJ,UAAU,0CAGxByJ,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAElC,IAAMmE,KAEN,GAAIqN,EAAQ,CACR,IAAKnT,EAAAC,QAAWxE,QAAQ0X,GACpB,MAAM,IAAIhX,UAAJ,wBAAsCgX,GAEhDrN,EAAYqN,OAASA,EAGzB,OAAOH,EAAA/S,QACFuI,KAAK5C,EAAYf,EAAA5E,QAAUqE,QAAQ3B,cADjC,aAC4DmD,EAD5DsN,EAAAnT,8GCrFf,QAAAnG,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,kEAgCIuZ,OAfW,SAeJzN,EAAS0N,GACZ,KAAM1N,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB,KAAMmX,wBACF,MAAM,IAAInX,UAAU,kDAKxB,OAFAyJ,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAE3BqR,EAAA/S,QACFsT,KAAK3N,EAASf,EAAA5E,QAAU0D,YAAYhB,cAAe2Q,EAAYE,kBAD7DC,EAAAxT,UAiBXnF,IA3CW,SA2CP8K,EAASgG,GACT,KAAMhG,wBACF,MAAM,IAAIzJ,UAAU,0CAOxB,OAJA6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAEjChG,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAE3BqR,EAAA/S,QACFnF,IAAI8K,EAAYf,EAAA5E,QAAU0D,YAAYhB,cADpC,IACqDiJ,KADrD6H,EAAAxT,UAiBXuI,KArEW,SAqEN5C,EAASuN,GACV,KAAMvN,wBACF,MAAM,IAAIzJ,UAAU,0CAGxByJ,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAElC,IAAMmE,KAEN,GAAIqN,EAAQ,CACR,IAAKnT,EAAAC,QAAWxE,QAAQ0X,GACpB,MAAM,IAAIhX,UAAJ,wBAAsCgX,GAEhDrN,EAAYqN,OAASA,EAGzB,OAAOH,EAAA/S,QACFuI,KAAK5C,EAASf,EAAA5E,QAAU0D,YAAYhB,cAAemD,EADjD2N,EAAAxT,UAoBXyT,OAzGW,SAyGJ9N,EAASgG,EAAQ0H,GACpB,KAAM1N,wBACF,MAAM,IAAIzJ,UAAU,uDAGxB,KAAMmX,wBACF,MAAM,IAAInX,UAAU,+DAGxB6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAEjChG,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAElC,IAAMgS,EAAU9O,EAAA5E,QAAU0D,YAAYhB,cAAhC,IAAiDiJ,EAEvD,OAAOoH,EAAA/S,QACFsT,KAAK3N,EAAS+N,EAAML,EAAYE,kBAD9BC,EAAAxT,8GC7If,QAAAnG,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,kEAuBIuZ,OAdW,SAcJzN,EAASgO,GACZ,KAAMhO,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB,KAAMyX,wBACF,MAAM,IAAIzX,UAAU,sCAGxB,OAAO6W,EAAA/S,QACFsT,KAAK3N,EAASf,EAAA5E,QAAUqD,MAAMX,cAAeiR,EAAMJ,kBADjDK,EAAA5T,UAiBXnF,IAxCW,SAwCP8K,EAASgG,GACT,KAAMhG,wBACF,MAAM,IAAIzJ,UAAU,uDAKxB,OAFA6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAE1BoH,EAAA/S,QACFnF,IAAI8K,EAAYf,EAAA5E,QAAUqD,MAAMX,cAD9B,IAC+CiJ,KAD/CiI,EAAA5T,UAiBXuI,KAhEW,SAgEN5C,EAASuN,GACV,KAAMvN,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB,IAAM2J,KAEN,GAAIqN,EAAQ,CACR,IAAKnT,EAAAC,QAAWxE,QAAQ0X,GACpB,MAAM,IAAIhX,UAAJ,wBAAsCgX,GAEhDrN,EAAYqN,OAASA,EAGzB,OAAOH,EAAA/S,QACFuI,KAAK5C,EAASf,EAAA5E,QAAUqD,MAAMX,cAAemD,EAD3C+N,EAAA5T,UAiBX6T,OA/FW,SA+FJlO,EAASgG,GACZ,KAAMhG,wBACF,MAAM,IAAIzJ,UAAU,uDAKxB,OAFA6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAE1BoH,EAAA/S,QACF6T,OAAOlO,EAAYf,EAAA5E,QAAUqD,MAAMX,cADjC,IACkDiJ,wGCpHjE,QAAA9R,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,kEAyBIuZ,OAhBW,SAgBJzN,EAASxH,GACZ,KAAMwH,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB,KAAMiC,wBACF,MAAM,IAAIjC,UAAU,0CAKxB,OAFAyJ,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAE3BqR,EAAA/S,QACFsT,KAAK3N,EAASf,EAAA5E,QAAUgD,QAAQN,cAAevE,EAAQoV,kBADrDO,EAAA9T,UAiBXnF,IA5CW,SA4CP8K,EAASgG,GACT,KAAMhG,wBACF,MAAM,IAAIzJ,UAAU,0CAOxB,OAJA6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAEjChG,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAE3BqR,EAAA/S,QACFnF,IAAI8K,EAAYf,EAAA5E,QAAUgD,QAAQN,cADhC,IACiDiJ,KADjDmI,EAAA9T,UAiBXuI,KAtEW,SAsEN5C,EAASuN,GACV,KAAMvN,wBACF,MAAM,IAAIzJ,UAAU,0CAGxByJ,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAElC,IAAMmE,KAEN,GAAIqN,EAAQ,CACR,IAAKnT,EAAAC,QAAWxE,QAAQ0X,GACpB,MAAM,IAAIhX,UAAJ,wBAAsCgX,GAEhDrN,EAAYqN,OAASA,EAGzB,OAAOH,EAAA/S,QACFuI,KAAK5C,EAASf,EAAA5E,QAAUgD,QAAQN,cAAemD,EAD7CiO,EAAA9T,UAoBXyT,OA1GW,SA0GJ9N,EAASgG,EAAQxN,GACpB,KAAMwH,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB,KAAMiC,wBACF,MAAM,IAAIjC,UAAU,0CAOxB,OAJA6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAEjChG,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAE3BqR,EAAA/S,QACFsT,KAAK3N,EAAYf,EAAA5E,QAAUgD,QAAQN,cADjC,IACkDiJ,EAAUxN,EAAQoV,kBADpEO,EAAA9T,UAoBX6T,OA3IW,SA2IJlO,EAASgG,EAAQoI,GACpB,KAAMpO,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAEjC,IAAM9F,GAAgBkO,aAAc/S,QAAQ+S,IAE5C,OAAOhB,EAAA/S,QACF6T,OAAOlO,EAAYf,EAAA5E,QAAUgD,QAAQN,cADnC,IACoDiJ,EAAU9F,wGClK7E,QAAAhM,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,kEA2BIuZ,OAlBW,SAkBJzN,EAASiK,EAAeoE,GAC3B,KAAMrO,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB,KAAM8X,wBACF,MAAM,IAAI9X,UAAU,gDASxB,OANA6D,EAAAC,QAAW7D,cAAcyT,EAAe,iBAExCjK,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAElCsS,EAAc5T,YAAY,gBAAiBwP,GAEpCmD,EAAA/S,QACFsT,KAAK3N,EAASf,EAAA5E,QAAUoE,cAAc1B,cAAesR,EAAcT,kBADjEU,EAAAjU,UAiBXnF,IAlDW,SAkDP8K,EAASgG,GACT,KAAMhG,wBACF,MAAM,IAAIzJ,UAAU,0CAOxB,OAJA6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAEjChG,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAE3BqR,EAAA/S,QACFnF,IAAI8K,EAAYf,EAAA5E,QAAUoE,cAAc1B,cADtC,IACuDiJ,KADvDsI,EAAAjU,UAiBXuI,KA5EW,SA4EN5C,EAASuN,GACV,KAAMvN,wBACF,MAAM,IAAIzJ,UAAU,0CAGxByJ,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAElC,IAAMmE,KAEN,GAAIqN,EAAQ,CACR,IAAKnT,EAAAC,QAAWxE,QAAQ0X,GACpB,MAAM,IAAIhX,UAAJ,wBAAsCgX,GAEhDrN,EAAYqN,OAASA,EAGzB,OAAOH,EAAA/S,QACFuI,KAAK5C,EAASf,EAAA5E,QAAUoE,cAAc1B,cAAemD,EADnDoO,EAAAjU,UAoBXyT,OAhHW,SAgHJ9N,EAASgG,EAAQqI,GACpB,KAAMrO,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB,KAAM8X,wBACF,MAAM,IAAI9X,UAAU,gDAGxB6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAEjChG,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAElC,IAAMgS,EAAU9O,EAAA5E,QAAUoE,cAAc1B,cAAlC,IAAmDiJ,EAEzD,OAAOoH,EAAA/S,QACFsT,KAAK3N,EAAS+N,EAAMM,EAAcT,kBADhCU,EAAAjU,UAoBX6T,OAnJW,SAmJJlO,EAASgG,EAAQoI,GACpB,KAAMpO,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAEjC,IAAM9F,GAAgBkO,aAAc/S,QAAQ+S,IAE5C,OAAOhB,EAAA/S,QACF6T,OAAOlO,EAAYf,EAAA5E,QAAUoE,cAAc1B,cADzC,IAC0DiJ,EAAU9F,wGC1KnF,QAAAhM,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,kEAgBIgB,IAdW,SAcP8K,EAASgG,GACT,KAAMhG,wBACF,MAAM,IAAIzJ,UAAU,0CAOxB,OAJA6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAEjChG,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAE3BqR,EAAA/S,QACFnF,IAAI8K,EAAYf,EAAA5E,QAAUmE,cAAczB,cADtC,IACuDiJ,KADvDuI,EAAAlU,UAiBXuI,KAxCW,SAwCN5C,EAASuN,GACV,KAAMvN,wBACF,MAAM,IAAIzJ,UAAU,0CAGxByJ,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAElC,IAAMmE,KAEN,GAAIqN,EAAQ,CACR,IAAKnT,EAAAC,QAAWxE,QAAQ0X,GACpB,MAAM,IAAIhX,UAAJ,wBAAsCgX,GAEhDrN,EAAYqN,OAASA,EAGzB,OAAOH,EAAA/S,QACFuI,KAAK5C,EAASf,EAAA5E,QAAUmE,cAAczB,cAAemD,EADnDqO,EAAAlU,UAoBXyT,OA5EW,SA4EJ9N,EAASgG,EAAQQ,GACpB,KAAMxG,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB,KAAMiQ,wBACF,MAAM,IAAIjQ,UAAU,sDAGxB6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAEjChG,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAElC,IAAMgS,EAAU9O,EAAA5E,QAAUmE,cAAczB,cAAlC,IAAmDiJ,EAEzD,OAAOoH,EAAA/S,QACFsT,KAAK3N,EAAS+N,EAAMvH,EAAcoH,kBADhCW,EAAAlU,8GCjGf,QAAAnG,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,kEA2BIuZ,OAlBW,SAkBJzN,EAAS0J,EAAqBjB,GACjC,KAAMzI,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB,KAAMkS,wBACF,MAAM,IAAIlS,UAAU,0DASxB,OANA6D,EAAAC,QAAW7D,cAAckT,EAAqB,uBAE9C1J,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAElC0M,EAAgBhO,YAAY,sBAAuBiP,GAE5C0D,EAAA/S,QACFsT,KAAK3N,EAASf,EAAA5E,QAAUyC,gBAAgBC,cAAe0L,EAAgBmF,kBADrEY,EAAAnU,UAiBXnF,IAlDW,SAkDP8K,EAASgG,GACT,KAAMhG,wBACF,MAAM,IAAIzJ,UAAU,0CAOxB,OAJA6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAEjChG,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAE3BqR,EAAA/S,QACFnF,IAAI8K,EAAYf,EAAA5E,QAAUyC,gBAAgBC,cADxC,IACyDiJ,KADzDwI,EAAAnU,UAiBXuI,KA5EW,SA4EN5C,EAASuN,GACV,KAAMvN,wBACF,MAAM,IAAIzJ,UAAU,0CAGxByJ,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAElC,IAAMmE,KAEN,GAAIqN,EAAQ,CACR,IAAKnT,EAAAC,QAAWxE,QAAQ0X,GACpB,MAAM,IAAIhX,UAAJ,wBAAsCgX,GAEhDrN,EAAYqN,OAASA,EAGzB,OAAOH,EAAA/S,QACFuI,KAAK5C,EAASf,EAAA5E,QAAUyC,gBAAgBC,cAAemD,EADrDsO,EAAAnU,UAoBXyT,OAhHW,SAgHJ9N,EAASgG,EAAQyC,GACpB,KAAMzI,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB,KAAMkS,wBACF,MAAM,IAAIlS,UAAU,0DAGxB6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAEjChG,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAElC,IAAMgS,EAAU9O,EAAA5E,QAAUyC,gBAAgBC,cAApC,IAAqDiJ,EAE3D,OAAOoH,EAAA/S,QACFsT,KAAK3N,EAAS+N,EAAMtF,EAAgBmF,kBADlCY,EAAAnU,UAoBX6T,OAnJW,SAmJJlO,EAASgG,EAAQoI,GACpB,KAAMpO,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAEjC,IAAM9F,GAAgBkO,aAAc/S,QAAQ+S,IAE5C,OAAOhB,EAAA/S,QACF6T,OAAOlO,EAAYf,EAAA5E,QAAUyC,gBAAgBC,cAD3C,IAC4DiJ,EAAU9F,wGC1KrF,QAAAhM,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,kEAoCIuZ,OA3BW,SA2BJzN,EAAS2G,EAAgB8H,EAAuBC,EAAmBC,GACtE,KAAM3O,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB,KAAMoY,wBACF,MAAM,IAAIpY,UAAU,0CAaxB,OAVA6D,EAAAC,QAAW7D,cAAcmQ,EAAgB,kBACzCvM,EAAAC,QAAW7D,cAAciY,EAAuB,yBAEhDzO,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAElC4S,EAAQlU,YAAY,iBAAkBkM,GACtCgI,EAAQlU,YAAY,wBAAyBgU,GAEzCC,GAAmBC,EAAQlU,YAAY,oBAAqBiU,GAEzDtB,EAAA/S,QACFsT,KAAK3N,EAASf,EAAA5E,QAAUkE,QAAQxB,cAAe4R,EAAQf,kBADrDgB,EAAAvU,UAkBXnF,IAhEW,SAgEP8K,EAASgG,GACT,KAAMhG,wBACF,MAAM,IAAIzJ,UAAU,0CAOxB,OAJA6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAEjChG,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAE3BqR,EAAA/S,QACFnF,IAAI8K,EAAYf,EAAA5E,QAAUkE,QAAQxB,cADhC,IACiDiJ,KADjD4I,EAAAvU,UAiBXuI,KA1FW,SA0FN5C,EAASuN,GACV,KAAMvN,wBACF,MAAM,IAAIzJ,UAAU,0CAGxByJ,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAElC,IAAMmE,KAEN,GAAIqN,EAAQ,CACR,IAAKnT,EAAAC,QAAWxE,QAAQ0X,GACpB,MAAM,IAAIhX,UAAJ,wBAAsCgX,GAEhDrN,EAAYqN,OAASA,EAGzB,OAAOH,EAAA/S,QACFuI,KAAK5C,EAASf,EAAA5E,QAAUkE,QAAQxB,cAAemD,EAD7C0O,EAAAvU,UAwBXyT,OAlIW,SAkIJ9N,EAASgG,EAAQ0I,EAAmBC,GACvC,KAAM3O,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB,KAAMoY,wBACF,MAAM,IAAIpY,UAAU,0CASxB,OANA6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAEjChG,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAE9B2S,GAAmBC,EAAQlU,YAAY,oBAAqBiU,GAEzDtB,EAAA/S,QACFsT,KAAK3N,EAAYf,EAAA5E,QAAUkE,QAAQxB,cADjC,IACkDiJ,EAAU2I,EAAQf,kBADpEgB,EAAAvU,UAsBX6T,OAvKW,SAuKJlO,EAASgG,EAAQoI,GACpB,KAAMpO,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAEjC,IAAM9F,GAAgBkO,aAAc/S,QAAQ+S,IAE5C,OAAOhB,EAAA/S,QACF6T,OAAOlO,EAAYf,EAAA5E,QAAUkE,QAAQxB,cADnC,IACoDiJ,EAAU9F,wGC9L7E,QAAAhM,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,mEA2BIuZ,OAlBW,SAkBJzN,EAASiK,EAAe4E,GAC3B,KAAM7O,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB,KAAMsY,wBACF,MAAM,IAAItY,UAAU,4CASxB,OANA6D,EAAAC,QAAW7D,cAAcyT,EAAe,iBAExCjK,EAAQmN,gBAAgBlO,EAAA5E,QAAU0B,sBAElC8S,EAASpU,YAAY,gBAAiBwP,GAE/BmD,EAAA/S,QACFsT,KAAK3N,EAASf,EAAA5E,QAAU+D,SAASrB,cAAe8R,EAASjB,kBADvDkB,EAAAzU,UAiBXnF,IAlDW,SAkDP8K,EAASgG,GACT,KAAMhG,wBACF,MAAM,IAAIzJ,UAAU,0CAKxB,OAFA6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAE1BoH,EAAA/S,QACFnF,IAAI8K,EAAYf,EAAA5E,QAAU+D,SAASrB,cADjC,IACkDiJ,KADlD8I,EAAAzU,UAiBXuI,KA1EW,SA0EN5C,EAASuN,GACV,KAAMvN,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB,IAAM2J,KAEN,GAAIqN,EAAQ,CACR,IAAKnT,EAAAC,QAAWxE,QAAQ0X,GACpB,MAAM,IAAIhX,UAAJ,wBAAsCgX,GAEhDrN,EAAYqN,OAASA,EAGzB,OAAOH,EAAA/S,QACFuI,KAAK5C,EAASf,EAAA5E,QAAU+D,SAASrB,cAAemD,EAD9C4O,EAAAzU,UAoBXyT,OA5GW,SA4GJ9N,EAASgG,EAAQ6I,GACpB,KAAM7O,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB,KAAMsY,wBACF,MAAM,IAAItY,UAAU,4CAKxB,OAFA6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAE1BoH,EAAA/S,QACFsT,KAAK3N,EAAYf,EAAA5E,QAAU+D,SAASrB,cADlC,IACmDiJ,EAAU6I,EAASjB,kBADtEkB,EAAAzU,UAoBX6T,OA3IW,SA2IJlO,EAASgG,EAAQoI,GACpB,KAAMpO,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAEjC,IAAM9F,GAAgBkO,aAAc/S,QAAQ+S,IAE5C,OAAOhB,EAAA/S,QACF6T,OAAOlO,EAAYf,EAAA5E,QAAU+D,SAASrB,cADpC,IACqDiJ,EAAU9F,IAkB1E6O,SAvKW,SAuKF/O,EAASgG,EAAQgJ,GACtB,KAAMhP,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB,KAAMyY,wBACF,MAAM,IAAIzY,UAAU,oEAGxB6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UAEjC,IAAM9F,KAEF8O,EAAqBC,qBACrB/O,EAAY+J,cAAgB+E,EAAqBC,oBAGjDD,EAAqBE,oBACrBhP,EAAYgK,aAAe8E,EAAqBE,mBAGhDF,EAAqBG,sBACrBjP,EAAYiK,eAAiB6E,EAAqBG,qBAGtD,IAAIC,EAAU,EACRpF,EAAagF,EAAqBK,gBAElCzU,EAAM9F,OAAOW,UAAUC,eAE7BZ,OAAO+F,KAAKmP,GAAYhT,QAAQ,SAACsY,GAE7B,GADApP,wBAAkCkP,GAAaE,EAC1C1U,EAAIrG,KAAKyV,EAAYsF,GAA1B,CAEA,IAAMlZ,EAAY4T,EAAWsF,GAE7Bxa,OAAO+F,KAAKzE,GAAWY,QAAQ,SAACI,GACxBwD,EAAIrG,KAAK6B,EAAWgB,KACpB8I,EAAY9I,EAAMgY,GAAWhZ,EAAUgB,MAG/CgY,GAAW,KAGf,IAAMrB,EAAU9O,EAAA5E,QAAU+D,SAASrB,cAA7B,IAA8CiJ,EAA9C,IAAwD/G,EAAA5E,QAAU+D,SAASC,uBAEjF,OAAO+O,EAAA/S,QACFsT,KAAK3N,EAAS+N,EAAM7N,GACpBG,KAAK,SAACK,GACH,IAAMF,KACA+O,EAAoB,IAAAC,EAAAnV,QAU1B,OARAqG,EAAKlL,SAASwB,QAAQ,SAACxB,GACnBgL,EAAKhL,EAASb,MAAQ+P,KAAKG,MAAMrP,EAASJ,SAG9Cma,EACKE,2BAA2BjP,EAAKkJ,oBAAqBlJ,GACrDkP,OAAOtC,EAAA/S,QAAQsV,yBAAyBnP,KAAKoJ,KAE3C2F,KAoBnBK,SAvPW,SAuPF5P,EAASgG,EAAQ6J,GACtB,KAAM7P,wBACF,MAAM,IAAIzJ,UAAU,0CAGxB6D,EAAAC,QAAW7D,cAAcwP,EAAQ,UACjC5L,EAAAC,QAAW7D,cAAcqZ,EAAsB,wBAE/C,IAAM3P,GAAgB2P,wBAEhB9B,EAAU9O,EAAA5E,QAAU+D,SAASrB,cAA7B,IAA8CiJ,EAA9C,IAAwD/G,EAAA5E,QAAU+D,SAASE,uBAEjF,OAAO8O,EAAA/S,QACFsT,KAAK3N,EAAS+N,EAAM7N,uDCpQjCrM,EAAAD,QAAA,SAAAkc,GACA,gBAAAC,GACA,OAAAD,EAAA7C,MAAA,KAAA8C,mCCtBA,IAAAvF,EAAAtW,EAAA,IAQA,SAAA8b,EAAAC,GACA,sBAAAA,EACA,UAAA1Z,UAAA,gCAGA,IAAA2Z,EACA5Z,KAAAsW,QAAA,IAAArK,QAAA,SAAAC,GACA0N,EAAA1N,IAGA,IAAAwL,EAAA1X,KACA2Z,EAAA,SAAAxF,GACAuD,EAAAmC,SAKAnC,EAAAmC,OAAA,IAAA3F,EAAAC,GACAyF,EAAAlC,EAAAmC,WAOAH,EAAAva,UAAA2a,iBAAA,WACA,GAAA9Z,KAAA6Z,OACA,MAAA7Z,KAAA6Z,QAQAH,EAAA/J,OAAA,WACA,IAAA4G,EAIA,OACAmB,MAJA,IAAAgC,EAAA,SAAAvb,GACAoY,EAAApY,IAIAoY,WAIAhZ,EAAAD,QAAAoc,gCC/CAnc,EAAAD,QAAA,SAAAyc,EAAAC,GACA,OAAAA,EACAD,EAAAjX,QAAA,eAAAkX,EAAAlX,QAAA,WACAiX,iCCJAxc,EAAAD,QAAA,SAAAyN,GAIA,sCAAAkC,KAAAlC,kCCVA,IAAA4C,EAAA/P,EAAA,GAUAL,EAAAD,QAAA,SAAA4M,EAAAe,EAAAgP,GAMA,OAJAtM,EAAAjN,QAAAuZ,EAAA,SAAArZ,GACAsJ,EAAAtJ,EAAAsJ,EAAAe,KAGAf,iCChBA,IAAAyD,EAAA/P,EAAA,GACAsc,EAAAtc,EAAA,IACAuc,EAAAvc,EAAA,IACAqQ,EAAArQ,EAAA,GACAwc,EAAAxc,EAAA,IACAyc,EAAAzc,EAAA,IAKA,SAAA0c,EAAAhG,GACAA,EAAA+B,aACA/B,EAAA+B,YAAAyD,mBAUAvc,EAAAD,QAAA,SAAAgX,GAkCA,OAjCAgG,EAAAhG,GAGAA,EAAAyF,UAAAK,EAAA9F,EAAAvJ,OACAuJ,EAAAvJ,IAAAsP,EAAA/F,EAAAyF,QAAAzF,EAAAvJ,MAIAuJ,EAAArJ,QAAAqJ,EAAArJ,YAGAqJ,EAAApK,KAAAgQ,EACA5F,EAAApK,KACAoK,EAAArJ,QACAqJ,EAAApJ,kBAIAoJ,EAAArJ,QAAA0C,EAAAvL,MACAkS,EAAArJ,QAAA6D,WACAwF,EAAArJ,QAAAqJ,EAAA/J,YACA+J,EAAArJ,aAGA0C,EAAAjN,SACA,qDACA,SAAA6J,UACA+J,EAAArJ,QAAAV,MAIA+J,EAAAtG,SAAAC,EAAAD,SAEAsG,GAAAvK,KAAA,SAAAC,GAUA,OATAsQ,EAAAhG,GAGAtK,EAAAE,KAAAgQ,EACAlQ,EAAAE,KACAF,EAAAiB,QACAqJ,EAAAhG,mBAGAtE,GACG,SAAA6P,GAcH,OAbAM,EAAAN,KACAS,EAAAhG,GAGAuF,KAAA7P,WACA6P,EAAA7P,SAAAE,KAAAgQ,EACAL,EAAA7P,SAAAE,KACA2P,EAAA7P,SAAAiB,QACAqJ,EAAAhG,qBAKArC,QAAAG,OAAAyN,oCCjFA,IAAAlM,EAAA/P,EAAA,GAEA,SAAA2c,IACAva,KAAAwa,YAWAD,EAAApb,UAAAsb,IAAA,SAAAC,EAAAC,GAKA,OAJA3a,KAAAwa,SAAAhN,MACAkN,YACAC,aAEA3a,KAAAwa,SAAA3Z,OAAA,GAQA0Z,EAAApb,UAAAyb,MAAA,SAAA5O,GACAhM,KAAAwa,SAAAxO,KACAhM,KAAAwa,SAAAxO,GAAA,OAYAuO,EAAApb,UAAAuB,QAAA,SAAAE,GACA+M,EAAAjN,QAAAV,KAAAwa,SAAA,SAAAK,GACA,OAAAA,GACAja,EAAAia,MAKAtd,EAAAD,QAAAid,gCCjDA,IAAA5M,EAAA/P,EAAA,GAEAL,EAAAD,QACAqQ,EAAA3L,wBAKA8Y,MAAA,SAAAzc,EAAAS,EAAAic,EAAAtD,EAAAuD,EAAAC,GACA,IAAAC,KACAA,EAAA1N,KAAAnP,EAAA,IAAAoP,mBAAA3O,IAEA6O,EAAApM,SAAAwZ,IACAG,EAAA1N,KAAA,eAAAF,KAAAyN,GAAAI,eAGAxN,EAAArM,SAAAmW,IACAyD,EAAA1N,KAAA,QAAAiK,GAGA9J,EAAArM,SAAA0Z,IACAE,EAAA1N,KAAA,UAAAwN,IAGA,IAAAC,GACAC,EAAA1N,KAAA,UAGArL,SAAA+Y,SAAAxN,KAAA,OAGAqI,KAAA,SAAA1X,GACA,IAAA+c,EAAAjZ,SAAA+Y,OAAAE,MAAA,IAAApO,OAAA,aAA0D3O,EAAA,cAC1D,OAAA+c,EAAAC,mBAAAD,EAAA,UAGAE,OAAA,SAAAjd,GACA2B,KAAA8a,MAAAzc,EAAA,GAAAiP,KAAAiO,MAAA,UAQAT,MAAA,aACA/E,KAAA,WAA6B,aAC7BuF,OAAA,4CC7CA,IAAAE,EAAA,oEAEA,SAAAC,IACAzb,KAAAmU,QAAA,uCAEAsH,EAAAtc,UAAA,IAAAgK,MACAsS,EAAAtc,UAAAkQ,KAAA,EACAoM,EAAAtc,UAAAd,KAAA,wBAwBAd,EAAAD,QAtBA,SAAAoe,GAGA,IAFA,IAIAC,EAAAC,EAJA/Y,EAAA4H,OAAAiR,GACAG,EAAA,GAGAC,EAAA,EAAAzR,EAAAmR,EAIA3Y,EAAA6J,OAAA,EAAAoP,KAAAzR,EAAA,IAAAyR,EAAA,GAEAD,GAAAxR,EAAAqC,OAAA,GAAAiP,GAAA,EAAAG,EAAA,KACA,CAEA,IADAF,EAAA/Y,EAAAkZ,WAAAD,GAAA,MACA,IACA,UAAAL,EAEAE,KAAA,EAAAC,EAEA,OAAAC,iCC9BA,IAAAlO,EAAA/P,EAAA,GAEAL,EAAAD,QACAqQ,EAAA3L,uBAIA,WACA,IAEAga,EAFAC,EAAA,kBAAAhP,KAAAhL,UAAAia,WACAC,EAAAha,SAAAia,cAAA,KASA,SAAAC,EAAAtR,GACA,IAAAuR,EAAAvR,EAWA,OATAkR,IAEAE,EAAAI,aAAA,OAAAD,GACAA,EAAAH,EAAAG,MAGAH,EAAAI,aAAA,OAAAD,IAIAA,KAAAH,EAAAG,KACAE,SAAAL,EAAAK,SAAAL,EAAAK,SAAA1Z,QAAA,YACA2Z,KAAAN,EAAAM,KACAC,OAAAP,EAAAO,OAAAP,EAAAO,OAAA5Z,QAAA,aACA6Z,KAAAR,EAAAQ,KAAAR,EAAAQ,KAAA7Z,QAAA,YACA8Z,SAAAT,EAAAS,SACAC,KAAAV,EAAAU,KACAC,SAAA,MAAAX,EAAAW,SAAApQ,OAAA,GACAyP,EAAAW,SACA,IAAAX,EAAAW,UAYA,OARAd,EAAAK,EAAA3e,OAAAqf,SAAAT,MAQA,SAAAU,GACA,IAAAC,EAAAtP,EAAArM,SAAA0b,GAAAX,EAAAW,KACA,OAAAC,EAAAT,WAAAR,EAAAQ,UACAS,EAAAR,OAAAT,EAAAS,MAhDA,GAsDA,WACA,wCC9DA,IAAA9O,EAAA/P,EAAA,GAIAsf,GACA,6DACA,kEACA,gEACA,sCAgBA3f,EAAAD,QAAA,SAAA2N,GACA,IACAnK,EACAP,EACAzC,EAHAmf,KAKA,OAAAhS,GAEA0C,EAAAjN,QAAAuK,EAAAkS,MAAA,eAAAC,GAKA,GAJAtf,EAAAsf,EAAAvY,QAAA,KACA/D,EAAA6M,EAAA/K,KAAAwa,EAAAxQ,OAAA,EAAA9O,IAAA6M,cACApK,EAAAoN,EAAA/K,KAAAwa,EAAAxQ,OAAA9O,EAAA,IAEAgD,EAAA,CACA,GAAAmc,EAAAnc,IAAAoc,EAAArY,QAAA/D,IAAA,EACA,OAGAmc,EAAAnc,GADA,eAAAA,GACAmc,EAAAnc,GAAAmc,EAAAnc,OAAAuc,QAAA9c,IAEA0c,EAAAnc,GAAAmc,EAAAnc,GAAA,KAAAP,OAKA0c,GAnBiBA,iCC9BjB,IAAAtP,EAAA/P,EAAA,GAEA,SAAA0f,EAAA/c,GACA,OAAAkN,mBAAAlN,GACAuC,QAAA,aACAA,QAAA,aACAA,QAAA,YACAA,QAAA,aACAA,QAAA,YACAA,QAAA,aACAA,QAAA,aAUAvF,EAAAD,QAAA,SAAAyN,EAAAL,EAAA0K,GAEA,IAAA1K,EACA,OAAAK,EAGA,IAAAwS,EACA,GAAAnI,EACAmI,EAAAnI,EAAA1K,QACG,GAAAiD,EAAA7L,kBAAA4I,GACH6S,EAAA7S,EAAArK,eACG,CACH,IAAAmd,KAEA7P,EAAAjN,QAAAgK,EAAA,SAAAnK,EAAAO,GACA,OAAAP,QAAA,IAAAA,IAIAoN,EAAArN,QAAAC,GACAO,GAAA,KAEAP,MAGAoN,EAAAjN,QAAAH,EAAA,SAAA8M,GACAM,EAAAlM,OAAA4L,GACAA,IAAAE,cACSI,EAAAnN,SAAA6M,KACTA,EAAAe,KAAAC,UAAAhB,IAEAmQ,EAAAhQ,KAAA8P,EAAAxc,GAAA,IAAAwc,EAAAjQ,SAIAkQ,EAAAC,EAAA9P,KAAA,KAOA,OAJA6P,IACAxS,KAAA,IAAAA,EAAAlG,QAAA,cAAA0Y,GAGAxS,iCCpDAxN,EAAAD,QAAA,SAAAuO,EAAAyI,EAAAjF,EAAAvF,EAAAE,GAOA,OANA6B,EAAAyI,SACAjF,IACAxD,EAAAwD,QAEAxD,EAAA/B,UACA+B,EAAA7B,WACA6B,iCCjBA,IAAA8I,EAAA/W,EAAA,IASAL,EAAAD,QAAA,SAAA4O,EAAAE,EAAApC,GACA,IAAA6E,EAAA7E,EAAAsK,OAAAzF,eAEA7E,EAAAM,QAAAuE,MAAA7E,EAAAM,QAGA8B,EAAAuI,EACA,mCAAA3K,EAAAM,OACAN,EAAAsK,OACA,KACAtK,EAAAF,QACAE,IAPAkC,EAAAlC,kCCbA,IAAA2D,EAAA/P,EAAA,GAEAL,EAAAD,QAAA,SAAA2N,EAAAwS,GACA9P,EAAAjN,QAAAuK,EAAA,SAAAnM,EAAAT,GACAA,IAAAof,GAAApf,EAAAsO,gBAAA8Q,EAAA9Q,gBACA1B,EAAAwS,GAAA3e,SACAmM,EAAA5M,sBCPA,IAOAqf,EACAC,EARAxP,EAAA5Q,EAAAD,WAUA,SAAAsgB,IACA,UAAAzU,MAAA,mCAEA,SAAA0U,IACA,UAAA1U,MAAA,qCAsBA,SAAA2U,EAAAC,GACA,GAAAL,IAAAM,WAEA,OAAAA,WAAAD,EAAA,GAGA,IAAAL,IAAAE,IAAAF,IAAAM,WAEA,OADAN,EAAAM,WACAA,WAAAD,EAAA,GAEA,IAEA,OAAAL,EAAAK,EAAA,GACK,MAAAvP,GACL,IAEA,OAAAkP,EAAAzf,KAAA,KAAA8f,EAAA,GACS,MAAAvP,GAET,OAAAkP,EAAAzf,KAAA+B,KAAA+d,EAAA,MAvCA,WACA,IAEAL,EADA,mBAAAM,WACAA,WAEAJ,EAEK,MAAApP,GACLkP,EAAAE,EAEA,IAEAD,EADA,mBAAAM,aACAA,aAEAJ,EAEK,MAAArP,GACLmP,EAAAE,GAjBA,GAwEA,IAEAK,EAFAC,KACAC,GAAA,EAEAC,GAAA,EAEA,SAAAC,IACAF,GAAAF,IAGAE,GAAA,EACAF,EAAArd,OACAsd,EAAAD,EAAAb,OAAAc,GAEAE,GAAA,EAEAF,EAAAtd,QACA0d,KAIA,SAAAA,IACA,IAAAH,EAAA,CAGA,IAAA3P,EAAAqP,EAAAQ,GACAF,GAAA,EAGA,IADA,IAAAI,EAAAL,EAAAtd,OACA2d,GAAA,CAGA,IAFAN,EAAAC,EACAA,OACAE,EAAAG,GACAN,GACAA,EAAAG,GAAAI,MAGAJ,GAAA,EACAG,EAAAL,EAAAtd,OAEAqd,EAAA,KACAE,GAAA,EAnEA,SAAAM,GACA,GAAAf,IAAAM,aAEA,OAAAA,aAAAS,GAGA,IAAAf,IAAAE,IAAAF,IAAAM,aAEA,OADAN,EAAAM,aACAA,aAAAS,GAEA,IAEAf,EAAAe,GACK,MAAAlQ,GACL,IAEA,OAAAmP,EAAA1f,KAAA,KAAAygB,GACS,MAAAlQ,GAGT,OAAAmP,EAAA1f,KAAA+B,KAAA0e,KAgDAC,CAAAlQ,IAiBA,SAAAmQ,EAAAb,EAAAc,GACA7e,KAAA+d,MACA/d,KAAA6e,QAYA,SAAAC,KA5BA3Q,EAAA4Q,SAAA,SAAAhB,GACA,IAAArH,EAAA,IAAArN,MAAA9G,UAAA1B,OAAA,GACA,GAAA0B,UAAA1B,OAAA,EACA,QAAA/C,EAAA,EAAuBA,EAAAyE,UAAA1B,OAAsB/C,IAC7C4Y,EAAA5Y,EAAA,GAAAyE,UAAAzE,GAGAqgB,EAAA3Q,KAAA,IAAAoR,EAAAb,EAAArH,IACA,IAAAyH,EAAAtd,QAAAud,GACAN,EAAAS,IASAK,EAAAzf,UAAAsf,IAAA,WACAze,KAAA+d,IAAApH,MAAA,KAAA3W,KAAA6e,QAEA1Q,EAAA6Q,MAAA,UACA7Q,EAAA8Q,SAAA,EACA9Q,EAAA+Q,OACA/Q,EAAAgR,QACAhR,EAAAmD,QAAA,GACAnD,EAAAiR,YAIAjR,EAAAkR,GAAAP,EACA3Q,EAAAmR,YAAAR,EACA3Q,EAAAoR,KAAAT,EACA3Q,EAAAqR,IAAAV,EACA3Q,EAAAsR,eAAAX,EACA3Q,EAAAuR,mBAAAZ,EACA3Q,EAAAwR,KAAAb,EACA3Q,EAAAyR,gBAAAd,EACA3Q,EAAA0R,oBAAAf,EAEA3Q,EAAA2R,UAAA,SAAAzhB,GAAqC,UAErC8P,EAAA4R,QAAA,SAAA1hB,GACA,UAAA8K,MAAA,qCAGAgF,EAAA6R,IAAA,WAA2B,WAC3B7R,EAAA8R,MAAA,SAAAC,GACA,UAAA/W,MAAA,mCAEAgF,EAAAgS,MAAA,WAA4B,wCCrL5B,IAAAlS,EAAArQ,EAAA,GACA+P,EAAA/P,EAAA,GACA2c,EAAA3c,EAAA,IACAwiB,EAAAxiB,EAAA,IAOA,SAAAyiB,EAAAC,GACAtgB,KAAAiO,SAAAqS,EACAtgB,KAAAugB,cACAzW,QAAA,IAAAyQ,EACAvQ,SAAA,IAAAuQ,GASA8F,EAAAlhB,UAAA2K,QAAA,SAAAwK,GAGA,iBAAAA,IACAA,EAAA3G,EAAAvL,OACA2I,IAAAxI,UAAA,IACKA,UAAA,MAGL+R,EAAA3G,EAAAvL,MAAA6L,GAAkC1D,OAAA,OAAcvK,KAAAiO,SAAAqG,IAChD/J,OAAA+J,EAAA/J,OAAAI,cAGA,IAAA6V,GAAAJ,OAAA3gB,GACA6W,EAAArK,QAAAC,QAAAoI,GAUA,IARAtU,KAAAugB,aAAAzW,QAAApJ,QAAA,SAAA+f,GACAD,EAAAE,QAAAD,EAAA/F,UAAA+F,EAAA9F,YAGA3a,KAAAugB,aAAAvW,SAAAtJ,QAAA,SAAA+f,GACAD,EAAAhT,KAAAiT,EAAA/F,UAAA+F,EAAA9F,YAGA6F,EAAA3f,QACAyV,IAAAvM,KAAAyW,EAAAG,QAAAH,EAAAG,SAGA,OAAArK,GAIA3I,EAAAjN,SAAA,0CAAA6J,GAEA8V,EAAAlhB,UAAAoL,GAAA,SAAAQ,EAAAuJ,GACA,OAAAtU,KAAA8J,QAAA6D,EAAAvL,MAAAkS,OACA/J,SACAQ,YAKA4C,EAAAjN,SAAA,+BAAA6J,GAEA8V,EAAAlhB,UAAAoL,GAAA,SAAAQ,EAAAb,EAAAoK,GACA,OAAAtU,KAAA8J,QAAA6D,EAAAvL,MAAAkS,OACA/J,SACAQ,MACAb,aAKA3M,EAAAD,QAAA+iB,iBCjEA,SAAAjgB,EAAAO,GACA,QAAAA,EAAAigB,aAAA,mBAAAjgB,EAAAigB,YAAAxgB,UAAAO,EAAAigB,YAAAxgB,SAAAO,GALApD,EAAAD,QAAA,SAAAqD,GACA,aAAAA,IAAAP,EAAAO,IAQA,SAAAA,GACA,yBAAAA,EAAAkgB,aAAA,mBAAAlgB,EAAAmgB,OAAA1gB,EAAAO,EAAAmgB,MAAA,MATAC,CAAApgB,QAAAqgB,0CCRA,IAAArT,EAAA/P,EAAA,GACAuC,EAAAvC,EAAA,IACAyiB,EAAAziB,EAAA,IACAqQ,EAAArQ,EAAA,GAQA,SAAAqjB,EAAAC,GACA,IAAAxX,EAAA,IAAA2W,EAAAa,GACAC,EAAAhhB,EAAAkgB,EAAAlhB,UAAA2K,QAAAJ,GAQA,OALAiE,EAAAnL,OAAA2e,EAAAd,EAAAlhB,UAAAuK,GAGAiE,EAAAnL,OAAA2e,EAAAzX,GAEAyX,EAIA,IAAAC,EAAAH,EAAAhT,GAGAmT,EAAAf,QAGAe,EAAAjK,OAAA,SAAAmJ,GACA,OAAAW,EAAAtT,EAAAvL,MAAA6L,EAAAqS,KAIAc,EAAAlN,OAAAtW,EAAA,IACAwjB,EAAA1H,YAAA9b,EAAA,IACAwjB,EAAAjH,SAAAvc,EAAA,IAGAwjB,EAAAC,IAAA,SAAAC,GACA,OAAArV,QAAAoV,IAAAC,IAEAF,EAAAG,OAAA3jB,EAAA,IAEAL,EAAAD,QAAA8jB,EAGA7jB,EAAAD,QAAAyG,QAAAqd,mBCnDA7jB,EAAAD,QAAAM,EAAA,kCCCA,QAAAA,EAAA,QAGAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SAGAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SAGAA,EAAA,SACAA,EAAA,uDAIA,IAAM4jB,GAEFjZ,kBACAkL,+BACAP,4BAGAzJ,kBACAgY,0BACAC,yBACAC,iCACAC,+BACAC,+BACAC,yBACAC,uBACAC,6BACAC,yBAGAhT,kBACAhH,kBACAH,mBACAtB,0BACA0B,wBACAnB,kBACA4J,0BACAxI,wBACAf,gBACAK,sBAGAya,qBACAC,sBAGJ5kB,EAAOD,QAAUkkB,EAGjBjkB,EAAOD,QAAQyG,QAAUyd","file":"netlicensing-client.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"NetLicensing\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NetLicensing\"] = factory();\n\telse\n\t\troot[\"NetLicensing\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 54);\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nexport default {\r\n    isValid(value) {\r\n        let valid = (value !== undefined && typeof value !== 'function');\r\n        if (typeof value === 'number') valid = Number.isFinite(value) && !Number.isNaN(value);\r\n        return valid;\r\n    },\r\n\r\n    paramNotNull(parameter, parameterName) {\r\n        if (!this.isValid(parameter)) throw new TypeError(`Parameter ${parameterName} has bad value ${parameter}`);\r\n        if (parameter === null) throw new TypeError(`Parameter ${parameterName} cannot be null`);\r\n    },\r\n\r\n    paramNotEmpty(parameter, parameterName) {\r\n        if (!this.isValid(parameter)) throw new TypeError(`Parameter ${parameterName} has bad value ${parameter}`);\r\n        if (!parameter) throw new TypeError(`Parameter ${parameterName} cannot be null or empty string`);\r\n    },\r\n};\r\n","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport CastsUtils from '../util/CastsUtils';\r\n\r\n/**\r\n * The entity properties.\r\n * @type {{}}\r\n * @private\r\n */\r\nconst propertiesMap = new WeakMap();\r\n\r\n/**\r\n * List of properties that was defined\r\n * @type {{}}\r\n * @private\r\n */\r\n\r\nconst definedMap = new WeakMap();\r\n\r\n/**\r\n * List of properties that need be casts\r\n * @type {{}}\r\n * @private\r\n */\r\nconst castsMap = new WeakMap();\r\n\r\n/**\r\n * List of properties that has read-only access\r\n * @type {{}}\r\n * @private\r\n */\r\nconst readOnlyMap = new WeakMap();\r\n\r\nexport default class BaseEntity {\r\n    constructor({ properties, casts, readOnly }) {\r\n        propertiesMap.set(this, {});\r\n        definedMap.set(this, {});\r\n        castsMap.set(this, casts || []);\r\n        readOnlyMap.set(this, readOnly || []);\r\n\r\n        if (properties) {\r\n            this.setProperties(properties);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set a given property on the entity.\r\n     * @param property\r\n     * @param value\r\n     * @returns {BaseEntity}\r\n     */\r\n    setProperty(property, value) {\r\n        // if property has read-only access and was initialized at least once\r\n        if (this.hasProperty(property) && this.isPropertyReadOnly(property)) {\r\n            throw new TypeError(`Property ${property} has read-only access`);\r\n        }\r\n\r\n        // if property name has bad native type\r\n        if (!CheckUtils.isValid(property) || typeof property === 'object') {\r\n            throw new TypeError(`Bad property name:${property}`);\r\n        }\r\n\r\n        // if property value has bad native type\r\n        if (!CheckUtils.isValid(value)) {\r\n            throw new TypeError(`Property ${property} has bad value ${value}`);\r\n        }\r\n\r\n        const castedValue = this.cast(property, value);\r\n\r\n        // check if property value after cast has bad native type\r\n        if (!CheckUtils.isValid(value)) {\r\n            throw new TypeError(`Property ${property} has bad cast value ${castedValue}`);\r\n        }\r\n\r\n        // define to property\r\n        this.define(property);\r\n\r\n        // save property to propertiesMap\r\n        const properties = propertiesMap.get(this);\r\n        properties[property] = castedValue;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Alias for setProperty\r\n     * @param property\r\n     * @param value\r\n     * @returns {BaseEntity}\r\n     */\r\n    addProperty(property, value) {\r\n        return this.setProperty(property, value);\r\n    }\r\n\r\n    /**\r\n     * Set the entity properties.\r\n     * @param properties\r\n     * @returns {BaseEntity}\r\n     */\r\n    setProperties(properties) {\r\n        this.removeProperties();\r\n\r\n        const has = Object.prototype.hasOwnProperty;\r\n\r\n        Object.keys(properties).forEach((key) => {\r\n            if (has.call(properties, key)) {\r\n                this.setProperty(key, properties[key]);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Check if we has property\r\n     * @param property\r\n     * @protected\r\n     */\r\n    hasProperty(property) {\r\n        return Object.prototype.hasOwnProperty.call(propertiesMap.get(this), property);\r\n    }\r\n\r\n    /**\r\n     * Get an property from the entity.\r\n     * @param property\r\n     * @param def\r\n     * @returns {*}\r\n     */\r\n    getProperty(property, def) {\r\n        return Object.prototype.hasOwnProperty.call(propertiesMap.get(this), property)\r\n            ? propertiesMap.get(this)[property]\r\n            : def;\r\n    }\r\n\r\n    /**\r\n     * Get all of the current properties on the entity.\r\n     */\r\n    getProperties() {\r\n        return Object.assign({}, propertiesMap.get(this));\r\n    }\r\n\r\n    /**\r\n     * Remove property\r\n     * @param property\r\n     * @returns {BaseEntity}\r\n     */\r\n    removeProperty(property) {\r\n        const properties = propertiesMap.get(this);\r\n        delete properties[property];\r\n        this.removeDefine(property);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove properties\r\n     * @param properties\r\n     */\r\n    removeProperties(properties) {\r\n        const propertiesForRemove = properties || Object.keys(propertiesMap.get(this));\r\n\r\n        propertiesForRemove.forEach((property) => {\r\n            this.removeProperty(property);\r\n        });\r\n    }\r\n\r\n    isPropertyReadOnly(property) {\r\n        return readOnlyMap.get(this).indexOf(property) >= 0;\r\n    }\r\n\r\n    cast(property, value) {\r\n        if (!castsMap.get(this)[property]) return value;\r\n\r\n        return CastsUtils(castsMap.get(this)[property], value);\r\n    }\r\n\r\n    /**\r\n     * Check if property has defined\r\n     * @param property\r\n     * @protected\r\n     */\r\n    hasDefine(property) {\r\n        return Boolean(definedMap.get(this)[property]);\r\n    }\r\n\r\n    /**\r\n     * Define property getter and setter\r\n     * @param property\r\n     * @protected\r\n     */\r\n    define(property) {\r\n        if (this.hasDefine(property)) return;\r\n\r\n        if (!CheckUtils.isValid(property) || typeof property === 'object') {\r\n            throw new TypeError(`Bad property name:${property}`);\r\n        }\r\n\r\n        const self = this;\r\n\r\n        // delete property\r\n        delete this[property];\r\n\r\n        const descriptors = {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get() {\r\n                return self.getProperty(property);\r\n            },\r\n        };\r\n\r\n        if (!this.isPropertyReadOnly(property)) {\r\n            descriptors.set = value => self.setProperty(property, value);\r\n        }\r\n\r\n        const defined = definedMap.get(this);\r\n        defined[property] = true;\r\n\r\n        Object.defineProperty(this, property, descriptors);\r\n    }\r\n\r\n    /**\r\n     * Remove property getter and setter\r\n     * @param property\r\n     * @protected\r\n     */\r\n    removeDefine(property) {\r\n        if (!this.hasDefine(property)) return;\r\n\r\n        const defined = definedMap.get(this);\r\n        delete defined[property];\r\n\r\n        delete this[property];\r\n    }\r\n\r\n    /**\r\n     * Define properties getter and setter\r\n     * @param properties\r\n     * @param onlyGetter\r\n     * @protected\r\n     */\r\n    defines(properties, onlyGetter) {\r\n        properties.forEach((property) => {\r\n            this.define(property, onlyGetter);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get properties map\r\n     */\r\n    asPropertiesMap() {\r\n        const properties = this.getProperties();\r\n        const customProperties = {};\r\n\r\n        const has = Object.prototype.hasOwnProperty;\r\n\r\n        Object.keys(this).forEach((key) => {\r\n            if (!has.call(this, key)) return;\r\n            if (!CheckUtils.isValid(this[key])) return;\r\n\r\n            customProperties[key] = this[key];\r\n        });\r\n\r\n        return Object.assign({}, customProperties, properties);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nexport default {\r\n    BASIC_AUTHENTICATION: 'BASIC_AUTH',\r\n    APIKEY_IDENTIFICATION: 'APIKEY',\r\n\r\n    LicensingModel: {\r\n        VALID: 'valid',\r\n        TryAndBuy: {\r\n            NAME: 'TryAndBuy',\r\n        },\r\n        Rental: {\r\n            NAME: 'Rental',\r\n            RED_THRESHOLD: 'redThreshold',\r\n            YELLOW_THRESHOLD: 'yellowThreshold',\r\n        },\r\n        Subscription: {\r\n            NAME: 'Subscription',\r\n        },\r\n        Floating: {\r\n            NAME: 'Floating',\r\n        },\r\n        MultiFeature: {\r\n            NAME: 'MultiFeature',\r\n        },\r\n        PayPerUse: {\r\n            NAME: 'PayPerUse',\r\n        },\r\n        PricingTable: {\r\n            NAME: 'PricingTable',\r\n        },\r\n        Quota: {\r\n            NAME: 'Quota',\r\n        },\r\n    },\r\n\r\n    LicenseTemplate: {\r\n        ENDPOINT_PATH: 'licensetemplate',\r\n        LicenseType: {\r\n            FEATURE: 'FEATURE',\r\n            TIMEVOLUME: 'TIMEVOLUME',\r\n            FLOATING: 'FLOATING',\r\n            QUANTITY: 'QUANTITY',\r\n        },\r\n    },\r\n\r\n    Product: {\r\n        ENDPOINT_PATH: 'product',\r\n        LicenseeSecretMode: {\r\n            DISABLED: 'DISABLED',\r\n            PREDEFINED: 'PREDEFINED',\r\n            CLIENT: 'CLIENT',\r\n        },\r\n    },\r\n\r\n    Token: {\r\n        ENDPOINT_PATH: 'token',\r\n        Type: {\r\n            DEFAULT: 'DEFAULT',\r\n            SHOP: 'SHOP',\r\n            APIKEY: 'APIKEY',\r\n        },\r\n    },\r\n\r\n    Transaction: {\r\n        ENDPOINT_PATH: 'transaction',\r\n        Status: {\r\n            CANCELLED: 'CANCELLED',\r\n            CLOSED: 'CLOSED',\r\n            PENDING: 'PENDING',\r\n        },\r\n    },\r\n\r\n    Licensee: {\r\n        ENDPOINT_PATH: 'licensee',\r\n        ENDPOINT_PATH_VALIDATE: 'validate',\r\n        ENDPOINT_PATH_TRANSFER: 'transfer',\r\n    },\r\n\r\n    License: {\r\n        ENDPOINT_PATH: 'license',\r\n    },\r\n\r\n    PaymentMethod: {\r\n        ENDPOINT_PATH: 'paymentmethod',\r\n    },\r\n\r\n    ProductModule: {\r\n        ENDPOINT_PATH: 'productmodule',\r\n    },\r\n\r\n    Utility: {\r\n        ENDPOINT_PATH: 'utility',\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\nimport Constants from '../Constants';\r\nimport CheckUtils from '../util/CheckUtils';\r\n\r\n/**\r\n * The context values.\r\n * @type {{}}\r\n * @private\r\n */\r\nconst valuesMap = new WeakMap();\r\n\r\n/**\r\n * List of values that was defined\r\n * @type {{}}\r\n * @private\r\n */\r\nconst definedMap = new WeakMap();\r\n\r\n/**\r\n * Context defaults\r\n * @type {{baseUrl: string, securityMode}}\r\n * @private\r\n */\r\nconst defaultsMap = new WeakMap();\r\n\r\nexport default class Context {\r\n    constructor(values) {\r\n        defaultsMap.set(this, {\r\n            baseUrl: 'https://go.netlicensing.io/core/v2/rest',\r\n            securityMode: Constants.BASIC_AUTHENTICATION,\r\n        });\r\n\r\n        valuesMap.set(this, {});\r\n\r\n        definedMap.set(this, {});\r\n\r\n        this.setValues(Object.assign({}, defaultsMap.get(this), values));\r\n    }\r\n\r\n    setBaseUrl(baseUrl) {\r\n        return this.setValue('baseUrl', baseUrl);\r\n    }\r\n\r\n    getBaseUrl(def) {\r\n        return this.getValue('baseUrl', def);\r\n    }\r\n\r\n    setUsername(username) {\r\n        return this.setValue('username', username);\r\n    }\r\n\r\n    getUsername(def) {\r\n        return this.getValue('username', def);\r\n    }\r\n\r\n    setPassword(password) {\r\n        return this.setValue('password', password);\r\n    }\r\n\r\n    getPassword(def) {\r\n        return this.getValue('password', def);\r\n    }\r\n\r\n    setApiKey(apiKey) {\r\n        return this.setValue('apiKey', apiKey);\r\n    }\r\n\r\n    getApiKey(def) {\r\n        return this.getValue('apiKey', def);\r\n    }\r\n\r\n    setSecurityMode(securityMode) {\r\n        return this.setValue('securityMode', securityMode);\r\n    }\r\n\r\n    getSecurityMode(def) {\r\n        return this.getValue('securityMode', def);\r\n    }\r\n\r\n    setVendorNumber(vendorNumber) {\r\n        return this.setValue('vendorNumber', vendorNumber);\r\n    }\r\n\r\n    getVendorNumber(def) {\r\n        return this.getValue('vendorNumber', def);\r\n    }\r\n\r\n    /**\r\n     * Set a given values on the context.\r\n     * @param key\r\n     * @param value\r\n     * @returns {Context}\r\n     */\r\n    setValue(key, value) {\r\n        // check values\r\n        if (!CheckUtils.isValid(key) || typeof key === 'object') throw new Error(`Bad value key:${key}`);\r\n        if (!CheckUtils.isValid(value)) throw new Error(`Value ${key} has wrong value${value}`);\r\n\r\n        // define keys\r\n        this.define(key);\r\n\r\n        let copedValue = value;\r\n\r\n        if (typeof value === 'object') {\r\n            copedValue = (Array.isArray(value)) ? Object.assign([], value) : Object.assign({}, value);\r\n        }\r\n\r\n        const values = valuesMap.get(this);\r\n        values[key] = copedValue;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the array of context values.\r\n     * @param values\r\n     * @returns {Context}\r\n     */\r\n    setValues(values) {\r\n        this.removeValues();\r\n\r\n        const has = Object.prototype.hasOwnProperty;\r\n\r\n        Object.keys(values).forEach((key) => {\r\n            if (has.call(values, key)) {\r\n                this.setValue(key, values[key]);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get an value from the context.\r\n     * @param key\r\n     * @param def\r\n     * @returns {*}\r\n     */\r\n    getValue(key, def) {\r\n        return valuesMap.get(this)[key] || def;\r\n    }\r\n\r\n    /**\r\n     * Get all of the current value on the context.\r\n     */\r\n    getValues() {\r\n        return Object.assign({}, valuesMap.get(this));\r\n    }\r\n\r\n    /**\r\n     * Remove value\r\n     * @param key\r\n     * @returns {Context}\r\n     */\r\n    removeValue(key) {\r\n        const values = valuesMap.get(this);\r\n        delete values[key];\r\n\r\n        this.removeDefine(key);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove values\r\n     * @param keys\r\n     */\r\n    removeValues(keys) {\r\n        const keysAr = keys || Object.keys(valuesMap.get(this));\r\n        keysAr.forEach(key => this.removeValue(key));\r\n    }\r\n\r\n    /**\r\n     * Define value getter and setter\r\n     * @param key\r\n     * @param onlyGetter\r\n     * @private\r\n     */\r\n    define(key, onlyGetter) {\r\n        if (this.hasDefine(key)) return;\r\n\r\n        if (!CheckUtils.isValid(key) || typeof property === 'object') {\r\n            throw new TypeError(`Bad value name:${key}`);\r\n        }\r\n\r\n        const self = this;\r\n\r\n        // delete property\r\n        delete this[key];\r\n\r\n        const descriptors = {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get() {\r\n                return self.getValue(key);\r\n            },\r\n        };\r\n\r\n        if (!onlyGetter) {\r\n            descriptors.set = value => self.setValue(key, value);\r\n        }\r\n\r\n        const defined = definedMap.get(this);\r\n        defined[key] = true;\r\n\r\n        Object.defineProperty(this, key, descriptors);\r\n    }\r\n\r\n    /**\r\n     * Check if value has defined\r\n     * @param key\r\n     * @private\r\n     */\r\n    hasDefine(key) {\r\n        return Boolean(definedMap.get(this)[key]);\r\n    }\r\n\r\n    /**\r\n     * Remove value getter and setter\r\n     * @param key\r\n     * @private\r\n     */\r\n    removeDefine(key) {\r\n        if (!this.hasDefine(key)) return;\r\n\r\n        const defined = definedMap.get(this);\r\n        delete defined[key];\r\n\r\n        delete this[key];\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\nimport axios from 'axios';\r\nimport Context from '../vo/Context';\r\nimport Constans from '../Constants';\r\nimport BaseEntity from '../entities/BaseEntity';\r\n\r\nlet httpXHR = {};\r\n\r\nexport default class Service {\r\n    static getLastHttpRequestInfo() {\r\n        return httpXHR;\r\n    }\r\n\r\n    /**\r\n     * Helper method for performing GET request to N\r\n     etLicensing API services. Finds and returns first suitable item with\r\n     * type resultType from the response.\r\n     *\r\n     * Context for the NetLicensing API call\r\n     * @param context\r\n     *\r\n     * the REST URL template\r\n     * @param urlTemplate\r\n     *\r\n     * The REST query parameters values. May be null if there are no parameters.\r\n     * @param queryParams\r\n     *\r\n     * the type of the result\r\n     * @param resultType\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    static get(context, urlTemplate, queryParams, resultType) {\r\n        return Service\r\n            .request(context, 'get', urlTemplate, queryParams)\r\n            .then(response => ((response) ? Service.getEntity(resultType, response.data.items.item[0]) : null));\r\n    }\r\n\r\n    /**\r\n     * Helper method for performing GET request to NetLicensing API service that returns page of items with type\r\n     * resultType.\r\n     *\r\n     * context for the NetLicensing API call\r\n     * @param context\r\n     *\r\n     * the REST URL template\r\n     * @param urlTemplate\r\n     *\r\n     * The REST query parameters values. May be null if there are no parameters.\r\n     * @param queryParams\r\n     *\r\n     * the type of the result\r\n     * @param resultType\r\n     *\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    static list(context, urlTemplate, queryParams, resultType) {\r\n        return Service\r\n            .request(context, 'get', urlTemplate, queryParams)\r\n            .then(response => ((response)\r\n                ? response.data.items.item.map(item => Service.getEntity(resultType, item))\r\n                : []));\r\n    }\r\n\r\n    /**\r\n     * Helper method for performing POST request to NetLicensing API services. Finds and returns first suitable item\r\n     * with type resultType from the response.\r\n     *\r\n     * context for the NetLicensing API call\r\n     * @param context\r\n     *\r\n     * the REST URL template\r\n     * @param urlTemplate\r\n     *\r\n     * The REST query parameters values. May be null if there are no parameters.\r\n     * @param queryParams\r\n     *\r\n     * he type of the result\r\n     * @param resultType\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    static post(context, urlTemplate, queryParams, resultType) {\r\n        return Service\r\n            .request(context, 'post', urlTemplate, queryParams)\r\n            .then(response => ((response) ? Service.getEntity(resultType, response.data.items.item[0]) : null));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param context\r\n     * @param urlTemplate\r\n     * @param queryParams\r\n     * @returns {Promise}\r\n     */\r\n    static delete(context, urlTemplate, queryParams) {\r\n        return Service\r\n            .request(context, 'delete', urlTemplate, queryParams)\r\n            .then(response => (response.status === 204));\r\n    }\r\n\r\n    /**\r\n     * Send request to NetLicensing  RestApi\r\n     * @param context\r\n     * @param method\r\n     * @param urlTemplate\r\n     * @param queryParams\r\n     * @returns {Promise}\r\n     */\r\n    static request(context, method, urlTemplate, queryParams) {\r\n        if (!(context instanceof Context)) throw new TypeError('context must be an instance of NetLicensing.Context');\r\n\r\n        const template = String(urlTemplate);\r\n        const params = queryParams || {};\r\n\r\n        if (!template) throw new TypeError('Url template must be specified');\r\n\r\n        // validate http method\r\n        if (['get', 'post', 'delete'].indexOf(method.toLowerCase()) < 0) {\r\n            throw new Error(`Invalid request type:${method}, allowed requests types: GET, POST, DELETE.`);\r\n        }\r\n\r\n        // validate context\r\n        if (!context.getBaseUrl(null)) {\r\n            throw new Error('Base url must be specified');\r\n        }\r\n\r\n        if (!Service.isValidUrl(String(context.getBaseUrl()))) {\r\n            throw new Error(`Base url \"${context.getBaseUrl()}\" is not a valid URL`);\r\n        }\r\n\r\n        let restUrl = `${context.getBaseUrl()}/${urlTemplate}`;\r\n\r\n        restUrl = restUrl.replace(/([^:]\\/)\\/+/g, '$1');\r\n\r\n        // validate baseUrl +  urlTemplate\r\n        if (!Service.isValidUrl(String(restUrl))) {\r\n            throw new Error(`Rest url \"${restUrl}\" is not a valid URL`);\r\n        }\r\n\r\n        const request = {\r\n            url: restUrl,\r\n            method: method.toLowerCase(),\r\n            responseType: 'json',\r\n            headers: {},\r\n            transformRequest: [(data, headers) => {\r\n                if (headers['Content-Type'] === 'application/x-www-form-urlencoded') {\r\n                    return Service.toQueryString(data);\r\n                }\r\n                return data;\r\n            }],\r\n        };\r\n\r\n        if (['put', 'post', 'patch'].indexOf(request.method)) {\r\n            if (request.method === 'post') {\r\n                request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\r\n            }\r\n            request.data = params;\r\n        } else {\r\n            request.params = params;\r\n        }\r\n\r\n        switch (context.getSecurityMode()) {\r\n            // Basic Auth\r\n            case Constans.BASIC_AUTHENTICATION:\r\n                if (!context.getUsername()) throw new Error('Missing parameter \"username\"');\r\n                if (!context.getPassword()) throw new Error('Missing parameter \"password\"');\r\n\r\n                request.auth = {\r\n                    username: context.getUsername(),\r\n                    password: context.getPassword(),\r\n                };\r\n                break;\r\n            // ApiKey Auth\r\n            case Constans.APIKEY_IDENTIFICATION:\r\n                if (!context.getApiKey()) throw new Error('Missing parameter \"apiKey\"');\r\n\r\n                request.headers.Authorization = `Basic ${btoa(`apiKey:${context.getApiKey()}`)}`;\r\n                break;\r\n            default:\r\n                throw new Error('Unknown security mode');\r\n        }\r\n\r\n        return axios(request)\r\n            .then((response) => {\r\n                httpXHR = response;\r\n                return response;\r\n            })\r\n            .catch((error) => {\r\n                httpXHR = error;\r\n\r\n                if (error.response) {\r\n                    // The request was made and the server responded with a status code\r\n                    // that falls out of the range of 2xx\r\n                    const info = error.response.data.infos.info[0] || null;\r\n\r\n                    if (info && info.id === 'NotFoundException') {\r\n                        return Promise.resolve(null);\r\n                    }\r\n\r\n                    const reasonPhrase = info.value || 'Unknown';\r\n                    throw new Error(`Unsupported response status code ${error.response.status}: ${reasonPhrase}`);\r\n                }\r\n\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Create Entity from item\r\n     * @param resultType\r\n     * @param item\r\n     * @returns {*}\r\n     */\r\n    static getEntity(resultType, item) {\r\n        const properties = item.property || null;\r\n        const lists = item.list || null;\r\n\r\n        if (!resultType) return item;\r\n\r\n        // eslint-disable-next-line new-cap\r\n        const entity = new resultType();\r\n\r\n        if (!(entity instanceof BaseEntity)) {\r\n            throw new Error(`Invalid entity ${resultType}, entity must be instanceof BaseEntity`);\r\n        }\r\n\r\n        properties.forEach(({ name, value }) => {\r\n            entity.setProperty(name, value);\r\n        });\r\n\r\n        if (lists) {\r\n            lists.forEach(({ name, property }) => {\r\n                const setListMethod = `setList${name.charAt(0).toUpperCase()}${name.substr(1, name.length - 1)}`;\r\n                const setListsMethod = 'setLists';\r\n\r\n                if (typeof entity[setListMethod] !== 'function' && typeof entity[setListsMethod] !== 'function') {\r\n                    // eslint-disable-next-line no-console\r\n                    console.warn(`Methods: ${setListMethod},${setListsMethod} not found in ${item.type} \r\n                    for list property ${name}`);\r\n                    return;\r\n                }\r\n\r\n                if (typeof entity[setListMethod] === 'function') {\r\n                    entity[setListMethod](property);\r\n                    return;\r\n                }\r\n\r\n                if (typeof entity[setListsMethod] === 'function') {\r\n                    entity[setListsMethod](name, property);\r\n                }\r\n            });\r\n        }\r\n\r\n        return entity;\r\n    }\r\n\r\n    static isValidUrl(url) {\r\n        const pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.?)+[a-z]{2,}|' + // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n\r\n        return pattern.test(url);\r\n    }\r\n\r\n    static toQueryString(data, prefix) {\r\n        const query = [];\r\n\r\n        const has = Object.prototype.hasOwnProperty;\r\n\r\n        Object.keys(data).forEach((key) => {\r\n            if (has.call(data, key)) {\r\n                const k = prefix ? `${prefix}[${key}]` : key;\r\n                let v = data[key];\r\n                v = (v instanceof Date) ? v.toISOString() : v;\r\n                query.push((v !== null && typeof v === 'object') ?\r\n                    Service.toQueryString(v, k) :\r\n                    `${encodeURIComponent(k)}=${encodeURIComponent(v)}`);\r\n            }\r\n        });\r\n\r\n        return query.join('&').replace(/%5B[0-9]+%5D=/g, '=');\r\n    }\r\n}\r\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * Country entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing  API:\r\n *\r\n * @property code - Unique code of country.\r\n *\r\n * @property name - Unique name of country\r\n *\r\n * @property vatPercent - Country vat.\r\n *\r\n * @property isEu - is country in EU.\r\n */\r\nexport default class Country extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                code: 'string',\r\n                name: 'string',\r\n                vatPercent: 'int',\r\n                isEu: 'boolean',\r\n            },\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines(['code', 'name', 'vatPercent', 'isEu']);\r\n    }\r\n\r\n    setCode(code) {\r\n        return this.setProperty('code', code);\r\n    }\r\n\r\n    getCode(def) {\r\n        return this.getProperty('code', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setVatPercent(vat) {\r\n        return this.setProperty('vatPercent', vat);\r\n    }\r\n\r\n    getVatPercent(def) {\r\n        return this.getProperty('vatPercent', def);\r\n    }\r\n\r\n    setIsEu(isEu) {\r\n        return this.setProperty('isEu', isEu);\r\n    }\r\n\r\n    getIsEu(def) {\r\n        return this.getProperty('isEu', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * Transaction entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing API:\r\n *\r\n * Unique number (across all products of a vendor) that identifies the transaction. This number is\r\n * always generated by NetLicensing.\r\n * @property string number\r\n *\r\n * always true for transactions\r\n * @property boolean active\r\n *\r\n * Status of transaction. \"CANCELLED\", \"CLOSED\", \"PENDING\".\r\n * @property string status\r\n *\r\n * \"SHOP\". AUTO transaction for internal use only.\r\n * @property string source\r\n *\r\n * grand total for SHOP transaction (see source).\r\n * @property float grandTotal\r\n *\r\n * discount for SHOP transaction (see source).\r\n * @property float discount\r\n *\r\n * specifies currency for money fields (grandTotal and discount). Check data types to discover which\r\n * @property string currency\r\n *\r\n * Date created. Optional.\r\n * @property string dateCreated\r\n *\r\n * Date closed. Optional.\r\n * @property string dateClosed\r\n *\r\n * @constructor\r\n */\r\nexport default class Transaction extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                name: 'string',\r\n                status: 'string',\r\n                source: 'string',\r\n                grandTotal: 'float',\r\n                discount: 'float',\r\n                currency: 'string',\r\n                dateCreated: 'date',\r\n                dateClosed: 'date',\r\n                active: 'boolean',\r\n                paymentMethod: 'string',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['active'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines([\r\n            'number',\r\n            'name',\r\n            'status',\r\n            'source',\r\n            'grandTotal',\r\n            'discount',\r\n            'currency',\r\n            'dateCreated',\r\n            'dateClosed',\r\n            'paymentMethod',\r\n        ]);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setStatus(status) {\r\n        return this.setProperty('status', status);\r\n    }\r\n\r\n    getStatus(def) {\r\n        return this.getProperty('status', def);\r\n    }\r\n\r\n    setSource(source) {\r\n        return this.setProperty('source', source);\r\n    }\r\n\r\n    getSource(def) {\r\n        return this.getProperty('source', def);\r\n    }\r\n\r\n    setGrandTotal(grandTotal) {\r\n        return this.setProperty('grandTotal', grandTotal);\r\n    }\r\n\r\n    getGrandTotal(def) {\r\n        return this.getProperty('grandTotal', def);\r\n    }\r\n\r\n    setDiscount(discount) {\r\n        return this.setProperty('discount', discount);\r\n    }\r\n\r\n    getDiscount(def) {\r\n        return this.getProperty('discount', def);\r\n    }\r\n\r\n    setCurrency(currency) {\r\n        return this.setProperty('currency', currency);\r\n    }\r\n\r\n    getCurrency(def) {\r\n        return this.getProperty('currency', def);\r\n    }\r\n\r\n    setDateCreated(dateCreated) {\r\n        return this.setProperty('dateCreated', dateCreated);\r\n    }\r\n\r\n    getDateCreated(def) {\r\n        return this.getProperty('dateCreated', def);\r\n    }\r\n\r\n    setDateClosed(dateClosed) {\r\n        return this.setProperty('dateClosed', dateClosed);\r\n    }\r\n\r\n    getDateClosed(def) {\r\n        return this.getProperty('dateClosed', def);\r\n    }\r\n\r\n    setPaymentMethod(paymentMethod) {\r\n        return this.setProperty('paymentMethod', paymentMethod);\r\n    }\r\n\r\n    getPaymentMethod(def) {\r\n        return this.getProperty('paymentMethod', def);\r\n    }\r\n\r\n    setActive() {\r\n        return this.setProperty('active', true);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * Product module entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing API:\r\n *\r\n * Unique number\r\n * @property string number\r\n *\r\n * If set to false, the token is disabled.\r\n * @property boolean active\r\n *\r\n * Expiration Time\r\n * @property string expirationTime\r\n *\r\n * @property string vendorNumber\r\n *\r\n * Token type to be generated.\r\n * DEFAULT - default one-time token (will be expired after first request)\r\n * SHOP - shop token is used to redirect customer to the netlicensingShop(licenseeNumber is mandatory)\r\n * APIKEY - APIKey-token\r\n * @property string tokenType\r\n *\r\n * @property string licenseeNumber\r\n *\r\n * @constructor\r\n */\r\nexport default class Token extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                expirationTime: 'date',\r\n                vendorNumber: 'string',\r\n                tokenType: 'string',\r\n                licenseeNumber: 'string',\r\n                successURL: 'string',\r\n                successURLTitle: 'string',\r\n                cancelURL: 'string',\r\n                cancelURLTitle: 'string',\r\n                shopURL: 'string',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['number', 'shopURL'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines([\r\n            'number',\r\n            'active',\r\n            'expirationTime',\r\n            'vendorNumber',\r\n            'tokenType',\r\n            'licenseeNumber',\r\n            'successURL',\r\n            'successURLTitle',\r\n            'cancelURL',\r\n            'cancelURLTitle',\r\n            'shopURL',\r\n        ]);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setExpirationTime(expirationTime) {\r\n        return this.setProperty('expirationTime', expirationTime);\r\n    }\r\n\r\n    getExpirationTime(def) {\r\n        return this.getProperty('expirationTime', def);\r\n    }\r\n\r\n    setVendorNumber(vendorNumber) {\r\n        return this.setProperty('vendorNumber', vendorNumber);\r\n    }\r\n\r\n    getVendorNumber(def) {\r\n        return this.getProperty('vendorNumber', def);\r\n    }\r\n\r\n    setTokenType(tokenType) {\r\n        return this.setProperty('tokenType', tokenType);\r\n    }\r\n\r\n    getTokenType(def) {\r\n        return this.getProperty('tokenType', def);\r\n    }\r\n\r\n    setLicenseeNumber(licenseeNumber) {\r\n        return this.setProperty('licenseeNumber', licenseeNumber);\r\n    }\r\n\r\n    getLicenseeNumber(def) {\r\n        return this.getProperty('licenseeNumber', def);\r\n    }\r\n\r\n    setSuccessURL(successURL) {\r\n        return this.setProperty('successURL', successURL);\r\n    }\r\n\r\n    getSuccessURL(def) {\r\n        return this.getProperty('successURL', def);\r\n    }\r\n\r\n    setSuccessURLTitle(successURLTitle) {\r\n        return this.setProperty('successURLTitle', successURLTitle);\r\n    }\r\n\r\n    getSuccessURLTitle(def) {\r\n        return this.getProperty('successURLTitle', def);\r\n    }\r\n\r\n    setCancelURL(cancelURL) {\r\n        return this.setProperty('cancelURL', cancelURL);\r\n    }\r\n\r\n    getCancelURL(def) {\r\n        return this.getProperty('cancelURL', def);\r\n    }\r\n\r\n    setCancelURLTitle(cancelURLTitle) {\r\n        return this.setProperty('cancelURLTitle', cancelURLTitle);\r\n    }\r\n\r\n    getCancelURLTitle(def) {\r\n        return this.getProperty('cancelURLTitle', def);\r\n    }\r\n\r\n    getShopURL(def) {\r\n        return this.getProperty('shopURL', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\nimport BaseEntity from './BaseEntity';\r\n\r\nexport default class ProductDiscount extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                totalPrice: 'float',\r\n                currency: 'string',\r\n                amountFix: 'float',\r\n                amountPercent: 'int',\r\n            },\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines(['totalPrice', 'currency', 'amountFix', 'amountPercent']);\r\n    }\r\n\r\n    setTotalPrice(totalPrice) {\r\n        return this.setProperty('totalPrice', totalPrice);\r\n    }\r\n\r\n    getTotalPrice(def) {\r\n        return this.getProperty('totalPrice', def);\r\n    }\r\n\r\n    setCurrency(currency) {\r\n        return this.setProperty('currency', currency);\r\n    }\r\n\r\n    getCurrency(def) {\r\n        return this.getProperty('currency', def);\r\n    }\r\n\r\n    setAmountFix(amountFix) {\r\n        return this.setProperty('amountFix', amountFix).removeProperty('amountPercent');\r\n    }\r\n\r\n    getAmountFix(def) {\r\n        return this.getProperty('amountFix', def);\r\n    }\r\n\r\n    setAmountPercent(amountPercent) {\r\n        return this.setProperty('amountPercent', amountPercent).removeProperty('amountFix');\r\n    }\r\n\r\n    getAmountPercent(def) {\r\n        return this.getProperty('amountPercent', def);\r\n    }\r\n\r\n    toString() {\r\n        const totalPrice = this.getTotalPrice();\r\n        const currency = this.getCurrency();\r\n        let amount = 0;\r\n\r\n        if (this.getAmountFix(null)) amount = this.getAmountFix();\r\n        if (this.getAmountPercent(null)) amount = `${this.getAmountPercent()}%`;\r\n\r\n        return `${totalPrice};${currency};${amount}`;\r\n    }\r\n}\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\nimport ProductDiscount from './ProductDiscount';\r\n\r\n/**\r\n * The discounts map\r\n * @type {{}}\r\n * @private\r\n */\r\nconst discountsMap = new WeakMap();\r\n\r\n/**\r\n * An identifier that show if discounts was touched\r\n * @type {{}}\r\n * @private\r\n */\r\nconst discountsTouched = new WeakMap();\r\n\r\n/**\r\n * NetLicensing  Product entity.\r\n *\r\n * Properties visible via NetLicensing  API:\r\n *\r\n * Unique number that identifies the product. Vendor can assign this number when creating a product or\r\n * let NetLicensing  generate one. Read-only after creation of the first licensee for the product.\r\n * @property string number\r\n *\r\n * If set to false, the product is disabled. No new licensees can be registered for the product,\r\n * existing licensees can not obtain new licenses.\r\n * @property boolean active\r\n *\r\n * Product name. Together with the version identifies the product for the end customer.\r\n * @property string name\r\n *\r\n * Product version. Convenience parameter, additional to the product name.\r\n * @property float version\r\n *\r\n * If set to 'true', non-existing licensees will be created at first validation attempt.\r\n * @property boolean licenseeAutoCreate\r\n *\r\n * Licensee secret mode for product.Supported types: \"DISABLED\", \"PREDEFINED\", \"CLIENT\"\r\n * @property boolean licenseeSecretMode\r\n *\r\n * Product description. Optional.\r\n * @property string description\r\n *\r\n * Licensing information. Optional.\r\n * @property string licensingInfo\r\n *\r\n * @property boolean inUse\r\n *\r\n * Arbitrary additional user properties of string type may be associated with each product. The name of user property\r\n * must not be equal to any of the fixed property names listed above and must be none of id, deleted.\r\n *\r\n * @constructor\r\n */\r\nexport default class Product extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                name: 'string',\r\n                version: 'string',\r\n                description: 'string',\r\n                licensingInfo: 'string',\r\n                licenseeAutoCreate: 'boolean',\r\n                licenseeSecretMode: 'string',\r\n                inUse: 'boolean',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['inUse'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines([\r\n            'number',\r\n            'active',\r\n            'name',\r\n            'version',\r\n            'description',\r\n            'licensingInfo',\r\n            'licenseeAutoCreate',\r\n            'licenseeSecretMode',\r\n            'inUse',\r\n        ]);\r\n\r\n        discountsMap.set(this, []);\r\n        discountsTouched.set(this, false);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setVersion(version) {\r\n        return this.setProperty('version', version);\r\n    }\r\n\r\n    getVersion(def) {\r\n        return this.getProperty('version', def);\r\n    }\r\n\r\n    setLicenseeAutoCreate(licenseeAutoCreate) {\r\n        return this.setProperty('licenseeAutoCreate', licenseeAutoCreate);\r\n    }\r\n\r\n    getLicenseeAutoCreate(def) {\r\n        return this.getProperty('licenseeAutoCreate', def);\r\n    }\r\n\r\n    setLicenseeSecretMode(licenseeSecretMode) {\r\n        return this.setProperty('licenseeSecretMode', licenseeSecretMode);\r\n    }\r\n\r\n    getLicenseeSecretMode(def) {\r\n        return this.getProperty('licenseeSecretMode', def);\r\n    }\r\n\r\n    setDescription(description) {\r\n        return this.setProperty('description', description);\r\n    }\r\n\r\n    getDescription(def) {\r\n        return this.getProperty('description', def);\r\n    }\r\n\r\n    setLicensingInfo(licensingInfo) {\r\n        return this.setProperty('licensingInfo', licensingInfo);\r\n    }\r\n\r\n    getLicensingInfo(def) {\r\n        return this.getProperty('licensingInfo', def);\r\n    }\r\n\r\n    getInUse(def) {\r\n        return this.getProperty('inUse', def);\r\n    }\r\n\r\n    /**\r\n     * Add discount to product\r\n     *\r\n     * @param discount NetLicensing.ProductDiscount\r\n     * @returns {NetLicensing.Product}\r\n     */\r\n    addDiscount(discount) {\r\n        if (!(discount instanceof ProductDiscount)) {\r\n            throw new TypeError('discount must be an instance of ProductDiscount');\r\n        }\r\n\r\n        const discounts = discountsMap.get(this);\r\n        discounts.push(discount);\r\n        discountsMap.set(this, discounts);\r\n        discountsTouched.set(this, true);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set discounts to product\r\n     * @param discounts\r\n     */\r\n    setProductDiscounts(discounts) {\r\n        discountsMap.set(this, []);\r\n        discountsTouched.set(this, true);\r\n\r\n        if (!discounts) return this;\r\n\r\n        if (Array.isArray(discounts)) {\r\n            discounts.forEach((discount) => {\r\n                this.addDiscount(discount);\r\n            });\r\n\r\n            return this;\r\n        }\r\n\r\n        this.addDiscount(discounts);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get array of objects discounts\r\n     * @returns {Array}\r\n     */\r\n    getProductDiscounts() {\r\n        return Object.assign([], discountsMap.get(this));\r\n    }\r\n\r\n    setListDiscount(properties) {\r\n        if (!properties) return;\r\n\r\n        const discount = new ProductDiscount();\r\n        properties.forEach((property) => {\r\n            discount.setProperty(property.name, property.value);\r\n        });\r\n        this.addDiscount(discount);\r\n    }\r\n\r\n    asPropertiesMap() {\r\n        const propertiesMap = super.asPropertiesMap();\r\n\r\n        if (discountsMap.get(this).length) {\r\n            propertiesMap.discount = discountsMap.get(this).map(discount => discount.toString());\r\n        }\r\n\r\n        if (!propertiesMap.discount && discountsTouched.get(this)) {\r\n            propertiesMap.discount = '';\r\n        }\r\n\r\n        return propertiesMap;\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * Product module entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing API:\r\n *\r\n * Unique number (across all products of a vendor) that identifies the product module. Vendor can assign\r\n * this number when creating a product module or let NetLicensing generate one. Read-only after creation of the first\r\n * licensee for the product.\r\n * @property string number\r\n *\r\n * If set to false, the product module is disabled. Licensees can not obtain any new licenses for this\r\n * product module.\r\n * @property boolean active\r\n *\r\n * Product module name that is visible to the end customers in NetLicensing Shop.\r\n * @property string name\r\n *\r\n * Licensing model applied to this product module. Defines what license templates can be\r\n * configured for the product module and how licenses for this product module are processed during validation.\r\n * @property string licensingModel\r\n *\r\n * Maximum checkout validity (days). Mandatory for 'Floating' licensing model.\r\n * @property integer maxCheckoutValidity\r\n *\r\n * Remaining time volume for yellow level. Mandatory for 'Rental' licensing model.\r\n * @property integer yellowThreshold\r\n *\r\n * Remaining time volume for red level. Mandatory for 'Rental' licensing model.\r\n * @property integer redThreshold\r\n *\r\n * License template. Mandatory for 'Try & Buy' licensing model. Supported types: \"TIMEVOLUME\", \"FEATURE\".\r\n * @property string licenseTemplate\r\n *\r\n * @constructor\r\n */\r\nexport default class ProductModule extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                name: 'string',\r\n                licensingModel: 'string',\r\n                maxCheckoutValidity: 'int',\r\n                yellowThreshold: 'int',\r\n                redThreshold: 'int',\r\n                licenseTemplate: 'string',\r\n                inUse: 'boolean',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['inUse'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines([\r\n            'number',\r\n            'active',\r\n            'name',\r\n            'licensingModel',\r\n            'maxCheckoutValidity',\r\n            'yellowThreshold',\r\n            'redThreshold',\r\n            'licenseTemplate',\r\n            'inUse',\r\n        ]);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setLicensingModel(licensingModel) {\r\n        return this.setProperty('licensingModel', licensingModel);\r\n    }\r\n\r\n    getLicensingModel(def) {\r\n        return this.getProperty('licensingModel', def);\r\n    }\r\n\r\n    setMaxCheckoutValidity(maxCheckoutValidity) {\r\n        return this.setProperty('maxCheckoutValidity', maxCheckoutValidity);\r\n    }\r\n\r\n    getMaxCheckoutValidity(def) {\r\n        return this.getProperty('maxCheckoutValidity', def);\r\n    }\r\n\r\n    setYellowThreshold(yellowThreshold) {\r\n        return this.setProperty('yellowThreshold', yellowThreshold);\r\n    }\r\n\r\n    getYellowThreshold(def) {\r\n        return this.getProperty('yellowThreshold', def);\r\n    }\r\n\r\n    setRedThreshold(redThreshold) {\r\n        return this.setProperty('redThreshold', redThreshold);\r\n    }\r\n\r\n    getRedThreshold(def) {\r\n        return this.getProperty('redThreshold', def);\r\n    }\r\n\r\n    setLicenseTemplate(licenseTemplate) {\r\n        return this.setProperty('licenseTemplate', licenseTemplate);\r\n    }\r\n\r\n    getLicenseTemplate(def) {\r\n        return this.getProperty('licenseTemplate', def);\r\n    }\r\n\r\n    getInUse(def) {\r\n        return this.getProperty('inUse', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * PaymentMethod entity used internally by NetLicensing.\r\n *\r\n * @property string number\r\n * @property boolean active\r\n *\r\n * @constructor\r\n */\r\nexport default class PaymentMethod extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                'paypal.subject': 'string',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['inUse'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines(['number', 'active', 'paypal.subject']);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setPaypalSubject(paypalSubject) {\r\n        return this.setProperty('paypal.subject', paypalSubject);\r\n    }\r\n\r\n    getPaypalSubject(def) {\r\n        return this.getProperty('paypal.subject', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * License template entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing  API:\r\n *\r\n * Unique number (across all products of a vendor) that identifies the license template. Vendor can\r\n * assign this number when creating a license template or let NetLicensing  generate one.\r\n * Read-only after creation of the first license from this license template.\r\n * @property string number\r\n *\r\n * If set to false, the license template is disabled. Licensee can not obtain any new licenses off this\r\n * license template.\r\n * @property boolean active\r\n *\r\n * Name for the licensed item.\r\n * @property string name\r\n *\r\n * Type of licenses created from this license template. Supported types: \"FEATURE\", \"TIMEVOLUME\",\r\n * \"FLOATING\", \"QUANTITY\"\r\n * @property string licenseType\r\n *\r\n * Price for the license. If >0, it must always be accompanied by the currency specification.\r\n * @property double price\r\n *\r\n * Specifies currency for the license price. Check data types to discover which currencies are\r\n * supported.\r\n * @property string currency\r\n *\r\n * If set to true, every new licensee automatically gets one license out of this license template on\r\n * creation. Automatic licenses must have their price set to 0.\r\n * @property boolean automatic\r\n *\r\n * If set to true, this license template is not shown in NetLicensing  Shop as offered for purchase.\r\n * @property boolean hidden\r\n *\r\n * If set to true, licenses from this license template are not visible to the end customer, but\r\n * participate in validation.\r\n * @property boolean hideLicenses\r\n *\r\n * Mandatory for 'TIMEVOLUME' license type.\r\n * @property integer timeVolume\r\n *\r\n * Mandatory for 'FLOATING' license type.\r\n * @property integer maxSessions\r\n *\r\n * Mandatory for 'QUANTITY' license type.\r\n * @property integer quantity\r\n *\r\n * @constructor\r\n */\r\nexport default class LicenseTemplate extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                name: 'string',\r\n                licenseType: 'string',\r\n                price: 'double',\r\n                currency: 'string',\r\n                automatic: 'boolean',\r\n                hidden: 'boolean',\r\n                hideLicenses: 'boolean',\r\n                timeVolume: 'int',\r\n                maxSessions: 'int',\r\n                quantity: 'int',\r\n                inUse: 'boolean',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['inUse'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines([\r\n            'number',\r\n            'active',\r\n            'name',\r\n            'licenseType',\r\n            'price',\r\n            'currency',\r\n            'automatic',\r\n            'hidden',\r\n            'hideLicenses',\r\n            'timeVolume',\r\n            'maxSessions',\r\n            'quantity',\r\n            'inUse',\r\n        ]);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setLicenseType(licenseType) {\r\n        return this.setProperty('licenseType', licenseType);\r\n    }\r\n\r\n    getLicenseType(def) {\r\n        return this.getProperty('licenseType', def);\r\n    }\r\n\r\n    setPrice(price) {\r\n        return this.setProperty('price', price);\r\n    }\r\n\r\n    getPrice(def) {\r\n        return this.getProperty('price', def);\r\n    }\r\n\r\n    setCurrency(currency) {\r\n        return this.setProperty('currency', currency);\r\n    }\r\n\r\n    getCurrency(def) {\r\n        return this.getProperty('currency', def);\r\n    }\r\n\r\n    setAutomatic(automatic) {\r\n        return this.setProperty('automatic', automatic);\r\n    }\r\n\r\n    getAutomatic(def) {\r\n        return this.getProperty('automatic', def);\r\n    }\r\n\r\n    setHidden(hidden) {\r\n        return this.setProperty('hidden', hidden);\r\n    }\r\n\r\n    getHidden(def) {\r\n        return this.getProperty('hidden', def);\r\n    }\r\n\r\n    setHideLicenses(hideLicenses) {\r\n        return this.setProperty('hideLicenses', hideLicenses);\r\n    }\r\n\r\n    getHideLicenses(def) {\r\n        return this.getProperty('hideLicenses', def);\r\n    }\r\n\r\n    setTimeVolume(timeVolume) {\r\n        return this.setProperty('timeVolume', timeVolume);\r\n    }\r\n\r\n    getTimeVolume(def) {\r\n        return this.getProperty('timeVolume', def);\r\n    }\r\n\r\n    setMaxSessions(maxSessions) {\r\n        return this.setProperty('maxSessions', maxSessions);\r\n    }\r\n\r\n    getMaxSessions(def) {\r\n        return this.getProperty('maxSessions', def);\r\n    }\r\n\r\n    setQuantity(quantity) {\r\n        return this.setProperty('quantity', quantity);\r\n    }\r\n\r\n    getQuantity(def) {\r\n        return this.getProperty('quantity', def);\r\n    }\r\n\r\n    getInUse(def) {\r\n        return this.getProperty('inUse', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * License entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing API:\r\n *\r\n * Unique number (across all products/licensees of a vendor) that identifies the license. Vendor can\r\n * assign this number when creating a license or let NetLicensing generate one. Read-only after corresponding creation\r\n * transaction status is set to closed.\r\n * @property string number\r\n *\r\n * Name for the licensed item. Set from license template on creation, if not specified explicitly.\r\n * @property string name\r\n *\r\n * If set to false, the license is disabled. License can be re-enabled, but as long as it is disabled,\r\n * the license is excluded from the validation process.\r\n * @property boolean active\r\n *\r\n * price for the license. If >0, it must always be accompanied by the currency specification. Read-only,\r\n * set from license template on creation.\r\n * @property float price\r\n *\r\n * specifies currency for the license price. Check data types to discover which currencies are\r\n * supported. Read-only, set from license template on creation.\r\n * @property string currency\r\n *\r\n * If set to true, this license is not shown in NetLicensing Shop as purchased license. Set from license\r\n * template on creation, if not specified explicitly.\r\n * @property boolean $hidden\r\n *\r\n * @property string startDate\r\n *\r\n * Arbitrary additional user properties of string type may be associated with each license. The name of user property\r\n * must not be equal to any of the fixed property names listed above and must be none of id, deleted, licenseeNumber,\r\n * licenseTemplateNumber.\r\n */\r\nexport default class License extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                name: 'string',\r\n                price: 'float',\r\n                hidden: 'boolean',\r\n                parentfeature: 'string',\r\n                timeVolume: 'int',\r\n                startDate: 'date',\r\n                inUse: 'boolean',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['inUse', 'currency', 'price'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines([\r\n            'number',\r\n            'active',\r\n            'name',\r\n            'hidden',\r\n            'parentfeature',\r\n            'timeVolume',\r\n            'startDate',\r\n            'inUse',\r\n            'currency',\r\n            'price',\r\n        ]);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setHidden(hidden) {\r\n        return this.setProperty('hidden', hidden);\r\n    }\r\n\r\n    getHidden(def) {\r\n        return this.getProperty('hidden', def);\r\n    }\r\n\r\n    setParentfeature(parentfeature) {\r\n        return this.setProperty('parentfeature', parentfeature);\r\n    }\r\n\r\n    getParentfeature(def) {\r\n        return this.getProperty('parentfeature', def);\r\n    }\r\n\r\n    setTimeVolume(timeVolume) {\r\n        return this.setProperty('timeVolume', timeVolume);\r\n    }\r\n\r\n    getTimeVolume(def) {\r\n        return this.getProperty('timeVolume', def);\r\n    }\r\n\r\n    setStartDate(startDate) {\r\n        return this.setProperty('startDate', startDate);\r\n    }\r\n\r\n    getStartDate(def) {\r\n        return this.getProperty('startDate', def);\r\n    }\r\n\r\n    getInUse(def) {\r\n        return this.getProperty('inUse', def);\r\n    }\r\n\r\n    getPrice(def) {\r\n        return this.getProperty('price', def);\r\n    }\r\n\r\n    getCurrency(def) {\r\n        return this.getProperty('currency', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport CheckUtils from '../util/CheckUtils';\r\n\r\n/**\r\n * Validation result map\r\n * @type {WeakMap<Object, any>}\r\n */\r\nconst vr = new WeakMap();\r\n\r\nexport default class ValidationResults {\r\n    constructor() {\r\n        vr.set(this, { validators: {} });\r\n    }\r\n\r\n    getValidators() {\r\n        return Object.assign({}, vr.get(this).validators);\r\n    }\r\n\r\n    setProductModuleValidation(productModuleNumber, productModuleValidation) {\r\n        if (!CheckUtils.isValid(productModuleNumber) || typeof productModuleNumber === 'object') {\r\n            throw new TypeError(`Bad productModuleNumber:${productModuleNumber}`);\r\n        }\r\n\r\n        vr.get(this).validators[productModuleNumber] = productModuleValidation;\r\n\r\n        return this;\r\n    }\r\n\r\n    getProductModuleValidation(productModuleNumber) {\r\n        if (!CheckUtils.isValid(productModuleNumber) || typeof productModuleNumber === 'object') {\r\n            throw new TypeError(`Bad productModuleNumber:${productModuleNumber}`);\r\n        }\r\n\r\n        return vr.get(this).validators[productModuleNumber];\r\n    }\r\n\r\n    setTtl(ttl) {\r\n        if (!CheckUtils.isValid(ttl) || typeof ttl === 'object') {\r\n            throw new TypeError(`Bad ttl:${ttl}`);\r\n        }\r\n        vr.get(this).ttl = new Date(String(ttl));\r\n\r\n        return this;\r\n    }\r\n\r\n    getTtl() {\r\n        return (vr.get(this).ttl) ? new Date(vr.get(this).ttl) : undefined;\r\n    }\r\n\r\n    toString() {\r\n        let data = 'ValidationResult [';\r\n\r\n        const validators = this.getValidators();\r\n        const has = Object.prototype.hasOwnProperty;\r\n\r\n        Object.keys(validators).forEach((productModuleNumber) => {\r\n            data += `ProductModule<${productModuleNumber}>`;\r\n            if (has.call(validators, productModuleNumber)) {\r\n                data += JSON.stringify(validators[productModuleNumber]);\r\n            }\r\n        });\r\n\r\n        data += ']';\r\n\r\n        return data;\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\n/**\r\n * Validation parameters map\r\n *\r\n * @type {WeakMap<Object, any>}\r\n */\r\nconst vpMap = new WeakMap();\r\n\r\nexport default class ValidationParameters {\r\n    constructor() {\r\n        vpMap.set(this, { parameters: {} });\r\n    }\r\n\r\n    /**\r\n     * Sets the target product\r\n     *\r\n     * optional productNumber, must be provided in case licensee auto-create is enabled\r\n     * @param productNumber\r\n     * @returns {ValidationParameters}\r\n     */\r\n    setProductNumber(productNumber) {\r\n        vpMap.get(this).productNumber = productNumber;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get the target product\r\n     * @returns {*}\r\n     */\r\n    getProductNumber() {\r\n        return vpMap.get(this).productNumber;\r\n    }\r\n\r\n    /**\r\n     * Sets the name for the new licensee\r\n     *\r\n     * optional human-readable licensee name in case licensee will be auto-created. This parameter must not\r\n     * be the name, but can be used to store any other useful string information with new licensees, up to\r\n     * 1000 characters.\r\n     * @param licenseeName\r\n     * @returns {NetLicensing.ValidationParameters}\r\n     */\r\n    setLicenseeName(licenseeName) {\r\n        vpMap.get(this).licenseeName = licenseeName;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get the licensee name\r\n     * @returns {*}\r\n     */\r\n    getLicenseeName() {\r\n        return vpMap.get(this).licenseeName;\r\n    }\r\n\r\n    /**\r\n     * Sets the licensee secret\r\n     *\r\n     * licensee secret stored on the client side. Refer to Licensee Secret documentation for details.\r\n     * @param licenseeSecret\r\n     * @returns {ValidationParameters}\r\n     */\r\n    setLicenseeSecret(licenseeSecret) {\r\n        vpMap.get(this).licenseeSecret = licenseeSecret;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get the licensee secret\r\n     * @returns {*}\r\n     */\r\n    getLicenseeSecret() {\r\n        return vpMap.get(this).licenseeSecret;\r\n    }\r\n\r\n    /**\r\n     * Get validation parameters\r\n     * @returns {*}\r\n     */\r\n    getParameters() {\r\n        return Object.assign({}, vpMap.get(this).parameters);\r\n    }\r\n\r\n    getProductModuleValidationParameters(productModuleNumber) {\r\n        return Object.assign({}, vpMap.get(this).parameters[productModuleNumber]);\r\n    }\r\n\r\n    setProductModuleValidationParameters(productModuleNumber, productModuleParameters) {\r\n        const { parameters } = vpMap.get(this);\r\n\r\n        if (parameters[productModuleNumber] === undefined || !Object.keys(parameters[productModuleNumber]).length) {\r\n            parameters[productModuleNumber] = {};\r\n        }\r\n\r\n        parameters[productModuleNumber] = Object.assign(parameters[productModuleNumber], productModuleParameters);\r\n\r\n        return this;\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * Licensee entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing  API:\r\n *\r\n * Unique number (across all products of a vendor) that identifies the licensee. Vendor can assign this\r\n * number when creating a licensee or let NetLicensing  generate one. Read-only after creation of the first license for\r\n * the licensee.\r\n * @property string number\r\n *\r\n * Licensee name.\r\n * @property string name\r\n *\r\n * If set to false, the licensee is disabled. Licensee can not obtain new licenses, and validation is\r\n * disabled (tbd).\r\n * @property boolean active\r\n *\r\n * Licensee Secret for licensee\r\n * @property string licenseeSecret\r\n *\r\n * Mark licensee for transfer.\r\n * @property boolean markedForTransfer\r\n *\r\n * Arbitrary additional user properties of string type may be associated with each licensee. The name of user property\r\n * must not be equal to any of the fixed property names listed above and must be none of id, deleted, productNumber\r\n *\r\n * @constructor\r\n */\r\nexport default class Licensee extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                name: 'string',\r\n                licenseeSecret: 'string',\r\n                markedForTransfer: 'boolean',\r\n                inUse: 'boolean',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['inUse'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines(['number', 'active', 'name', 'licenseeSecret', 'markedForTransfer', 'inUse']);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setLicenseeSecret(licenseeSecret) {\r\n        return this.setProperty('licenseeSecret', licenseeSecret);\r\n    }\r\n\r\n    getLicenseeSecret(def) {\r\n        return this.getProperty('licenseeSecret', def);\r\n    }\r\n\r\n    setMarkedForTransfer(markedForTransfer) {\r\n        return this.setProperty('markedForTransfer', markedForTransfer);\r\n    }\r\n\r\n    getMarkedForTransfer(def) {\r\n        return this.getProperty('markedForTransfer', def);\r\n    }\r\n\r\n    getInUse(def) {\r\n        return this.getProperty('inUse', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\n// Cast an attribute to a native JS type.\r\nexport default (key, value) => {\r\n    switch (key.trim().toLowerCase()) {\r\n        case 'str':\r\n        case 'string':\r\n            return String(value);\r\n        case 'int':\r\n        case 'integer':\r\n            return parseInt(value, 10);\r\n        case 'float':\r\n        case 'double':\r\n            return parseFloat(value);\r\n        case 'bool':\r\n        case 'boolean':\r\n            switch (value) {\r\n                case 'true':\r\n                case 'TRUE':\r\n                    return true;\r\n                case 'false':\r\n                case 'FALSE':\r\n                    return false;\r\n                default:\r\n                    return Boolean(value);\r\n            }\r\n        case 'date':\r\n            return (value === 'now') ? 'now' : new Date(String(value));\r\n        default:\r\n            return value;\r\n    }\r\n};\r\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport Country from '../entities/Country';\r\n\r\n/**\r\n * JS representation of the Utility Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NetLicensing PUB/Utility+Services\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Returns all license types. See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Utility+Services#UtilityServices-LicenseTypeslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * array of available license types or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    listLicenseTypes(context) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .list(context, `${Constants.Utility.ENDPOINT_PATH}/licenseTypes`)\r\n            .then(items => items.map(item => item.property[0].value));\r\n    },\r\n\r\n    /**\r\n     * Returns all license models. See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Utility+Services#UtilityServices-LicensingModelslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * array of available license models or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    listLicensingModels(context) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .list(context, `${Constants.Utility.ENDPOINT_PATH}/licensingModels`)\r\n            .then(items => items.map(item => item.property[0].value));\r\n    },\r\n\r\n    /**\r\n     * Returns all countries.\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter\r\n     *\r\n     * collection of available countries or null/empty list if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    listCountries(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = filter;\r\n        }\r\n\r\n        return Service\r\n            .list(context, `${Constants.Utility.ENDPOINT_PATH}/countries`, queryParams, Country);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport Transaction from '../entities/Transaction';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\nimport CheckUtils from '../util/CheckUtils';\r\n\r\n/**\r\n * JS representation of the Transaction Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NetLicensing PUB/Transaction+Services\r\n *\r\n * Transaction is created each time change to  LicenseService licenses happens. For instance licenses are\r\n * obtained by a licensee, licenses disabled by vendor, licenses deleted, etc. Transaction is created no matter what\r\n * source has initiated the change to licenses: it can be either a direct purchase of licenses by a licensee via\r\n * NetLicensing Shop, or licenses can be given to a licensee by a vendor. Licenses can also be assigned implicitly by\r\n * NetLicensing if it is defined so by a license model (e.g. evaluation license may be given automatically). All these\r\n * events are reflected in transactions. Of all the transaction handling routines only read-only routines are exposed to\r\n * the public API, as transactions are only allowed to be created and modified by NetLicensing internally.\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new transaction object with given properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Transaction+Services#TransactionServices-Createtransaction\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * non-null properties will be taken for the new object, null properties will either stay null, or will\r\n     * be set to a default value, depending on property.\r\n     * @param transaction NetLicensing.Transaction\r\n     *\r\n     * return the newly created transaction object in promise\r\n     * @returns {Promise}\r\n     */\r\n    create(context, transaction) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(transaction instanceof Transaction)) {\r\n            throw new TypeError('transaction must be an instance of Transaction');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .post(context, Constants.Transaction.ENDPOINT_PATH, transaction.asPropertiesMap(), Transaction);\r\n    },\r\n\r\n    /**\r\n     * Gets transaction by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Transaction+Services#TransactionServices-Gettransaction\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the transaction number\r\n     * @param number string\r\n     *\r\n     * return the transaction in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .get(context, `${Constants.Transaction.ENDPOINT_PATH}/${number}`, {}, Transaction);\r\n    },\r\n\r\n    /**\r\n     * Returns all transactions of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Transaction+Services#TransactionServices-Transactionslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string\r\n     *\r\n     * array of transaction entities or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = filter;\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.Transaction.ENDPOINT_PATH, queryParams, Transaction);\r\n    },\r\n\r\n    /**\r\n     * Updates transaction properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Transaction+Services#TransactionServices-Updatetransaction\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * transaction number\r\n     * @param number string\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param transaction NetLicensing.Transaction\r\n     *\r\n     * return updated transaction in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, transaction) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of NetLicensing.Context');\r\n        }\r\n\r\n        if (!(transaction instanceof Transaction)) {\r\n            throw new TypeError('transaction must be an instance of NetLicensing.Transaction');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const path = `${Constants.Transaction.ENDPOINT_PATH}/${number}`;\r\n\r\n        return Service\r\n            .post(context, path, transaction.asPropertiesMap(), Transaction);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport Token from '../entities/Token';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\nimport CheckUtils from '../util/CheckUtils';\r\n\r\n/**\r\n * JS representation of the Token Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NetLicensing PUB/Token+Services\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new token.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Token+Services#TokenServices-Createtoken\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param token NetLicensing.Token\r\n     *\r\n     * return created token in promise\r\n     * @returns {Promise}\r\n     */\r\n    create(context, token) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(token instanceof Token)) {\r\n            throw new TypeError('token must be an instance of Token');\r\n        }\r\n\r\n        return Service\r\n            .post(context, Constants.Token.ENDPOINT_PATH, token.asPropertiesMap(), Token);\r\n    },\r\n\r\n    /**\r\n     * Gets token by its number..See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/conluence/display/NetLicensing PUB/Token+Services#TokenServices-Gettoken\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the token number\r\n     * @param number\r\n     *\r\n     * return the token in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of NetLicensing.Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        return Service\r\n            .get(context, `${Constants.Token.ENDPOINT_PATH}/${number}`, {}, Token);\r\n    },\r\n\r\n    /**\r\n     * Returns tokens of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Token+Services#TokenServices-Tokenslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * array of token entities or empty array if nothing found.\r\n     * @return array\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = filter;\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.Token.ENDPOINT_PATH, queryParams, Token);\r\n    },\r\n\r\n    /**\r\n     * Delete token by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Token+Services#TokenServices-Deletetoken\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     *  the token number\r\n     * @param number string\r\n     *\r\n     * return boolean state of delete in promise\r\n     * @returns {Promise}\r\n     */\r\n    delete(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of NetLicensing.Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        return Service\r\n            .delete(context, `${Constants.Token.ENDPOINT_PATH}/${number}`);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Service from './Service';\r\nimport Context from '../vo/Context';\r\nimport Product from '../entities/Product';\r\nimport Constants from '../Constants';\r\nimport CheckUtils from '../util/CheckUtils';\r\n\r\n/**\r\n * JS representation of the Product Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new product with given properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services#ProductServices-Createproduct\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * non-null properties will be taken for the new object, null properties will either stay null, or will\r\n     * be set to a default value, depending on property.\r\n     * @param product NetLicensing.Product\r\n     *\r\n     * return the newly created product object in promise\r\n     * @returns {Promise}\r\n     */\r\n\r\n    create(context, product) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(product instanceof Product)) {\r\n            throw new TypeError('product must be an instance of Product');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .post(context, Constants.Product.ENDPOINT_PATH, product.asPropertiesMap(), Product);\r\n    },\r\n\r\n    /**\r\n     * Gets product by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services#ProductServices-Getproduct\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the product number\r\n     * @param number string\r\n     *\r\n     * return the product object in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .get(context, `${Constants.Product.ENDPOINT_PATH}/${number}`, {}, Product);\r\n    },\r\n\r\n    /**\r\n     * Returns products of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services#ProductServices-Productslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * array of product entities or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = filter;\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.Product.ENDPOINT_PATH, queryParams, Product);\r\n    },\r\n\r\n    /**\r\n     * Updates product properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services#ProductServices-Updateproduct\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * product number\r\n     * @param number string\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param product NetLicensing.Product\r\n     *\r\n     * updated product in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, product) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(product instanceof Product)) {\r\n            throw new TypeError('product must be an instance of Product');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .post(context, `${Constants.Product.ENDPOINT_PATH}/${number}`, product.asPropertiesMap(), Product);\r\n    },\r\n\r\n    /**\r\n     * Deletes product.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services#ProductServices-Deleteproduct\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * product number\r\n     * @param number string\r\n     *\r\n     * if true, any entities that depend on the one being deleted will be deleted too\r\n     * @param forceCascade boolean\r\n     *\r\n     * return boolean state of delete in promise\r\n     * @returns {Promise}\r\n     */\r\n    delete(context, number, forceCascade) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        const queryParams = { forceCascade: Boolean(forceCascade) };\r\n\r\n        return Service\r\n            .delete(context, `${Constants.Product.ENDPOINT_PATH}/${number}`, queryParams);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport ProductModule from '../entities/ProductModule';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\n\r\n/**\r\n * JS representation of the ProductModule Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Module+Services\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new product module object with given properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Module+Services#ProductModuleServices-Createproductmodule\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * parent product to which the new product module is to be added\r\n     * @param productNumber string\r\n     *\r\n     * non-null properties will be taken for the new object, null properties will either stay null, or will\r\n     * be set to a default value, depending on property.\r\n     * @param productModule NetLicensing.ProductModule\r\n     *\r\n     * the newly created product module object in promise\r\n     * @returns {Promise}\r\n     */\r\n    create(context, productNumber, productModule) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(productModule instanceof ProductModule)) {\r\n            throw new TypeError('product must be an instance of ProductModule');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(productNumber, 'productNumber');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        productModule.setProperty('productNumber', productNumber);\r\n\r\n        return Service\r\n            .post(context, Constants.ProductModule.ENDPOINT_PATH, productModule.asPropertiesMap(), ProductModule);\r\n    },\r\n\r\n    /**\r\n     * Gets product module by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Module+Services#ProductModuleServices-Getproductmodule\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the product module number\r\n     * @param number string\r\n     *\r\n     * return the product module object in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .get(context, `${Constants.ProductModule.ENDPOINT_PATH}/${number}`, {}, ProductModule);\r\n    },\r\n\r\n    /**\r\n     * Returns products of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services#ProductServices-Productslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * array of product modules entities or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = filter;\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.ProductModule.ENDPOINT_PATH, queryParams, ProductModule);\r\n    },\r\n\r\n    /**\r\n     * Updates product module properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Module+Services#ProductModuleServices-Updateproductmodule\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * product module number\r\n     * @param number string\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param productModule NetLicensing.ProductModule\r\n     *\r\n     * updated product module in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, productModule) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(productModule instanceof ProductModule)) {\r\n            throw new TypeError('product must be an instance of ProductModule');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const path = `${Constants.ProductModule.ENDPOINT_PATH}/${number}`;\r\n\r\n        return Service\r\n            .post(context, path, productModule.asPropertiesMap(), ProductModule);\r\n    },\r\n\r\n    /**\r\n     * Deletes product module.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Module+Services#ProductModuleServices-Deleteproductmodule\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * product module number\r\n     * @param number string\r\n     *\r\n     * if true, any entities that depend on the one being deleted will be deleted too\r\n     * @param forceCascade boolean\r\n     *\r\n     * return boolean state of delete in promise\r\n     * @returns {Promise}\r\n     */\r\n    delete(context, number, forceCascade) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        const queryParams = { forceCascade: Boolean(forceCascade) };\r\n\r\n        return Service\r\n            .delete(context, `${Constants.ProductModule.ENDPOINT_PATH}/${number}`, queryParams);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport PaymentMethod from '../entities/PaymentMethod';\r\nimport Constants from '../Constants';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport Service from './Service';\r\n\r\nexport default {\r\n    /**\r\n     * Gets payment method by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Payment+Method+Services#PaymentMethodServices-Getpaymentmethod\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the payment method number\r\n     * @param number string\r\n     *\r\n     * return the payment method in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .get(context, `${Constants.PaymentMethod.ENDPOINT_PATH}/${number}`, {}, PaymentMethod);\r\n    },\r\n\r\n    /**\r\n     * Returns payment methods of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Payment+Method+Services#PaymentMethodServices-Paymentmethodslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * array of payment method entities or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = filter;\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.PaymentMethod.ENDPOINT_PATH, queryParams, PaymentMethod);\r\n    },\r\n\r\n    /**\r\n     * Updates payment method properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Payment+Method+Services#PaymentMethodServices-Updatepaymentmethod\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the payment method number\r\n     * @param number string\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param paymentMethod NetLicensing.PaymentMethod\r\n     *\r\n     * return updated payment method in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, paymentMethod) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(paymentMethod instanceof PaymentMethod)) {\r\n            throw new TypeError('paymentMethod must be an instance of PaymentMethod');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const path = `${Constants.PaymentMethod.ENDPOINT_PATH}/${number}`;\r\n\r\n        return Service\r\n            .post(context, path, paymentMethod.asPropertiesMap(), PaymentMethod);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport LicenseTemplate from '../entities/LicenseTemplate';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\n\r\n/**\r\n * JS representation of the ProductModule Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NLICPUB/License+Template+Services\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new license template object with given properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Template+Services#LicenseTemplateServices-Createlicensetemplate\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * parent product module to which the new license template is to be added\r\n     * @param productModuleNumber\r\n     *\r\n     * non-null properties will be taken for the new object, null properties will either stay null, or will\r\n     * be set to a default value, depending on property.\r\n     * @param licenseTemplate NetLicensing.LicenseTemplate\r\n     *\r\n     * the newly created license template object in promise\r\n     * @returns {Promise}\r\n     */\r\n    create(context, productModuleNumber, licenseTemplate) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(licenseTemplate instanceof LicenseTemplate)) {\r\n            throw new TypeError('licenseTemplate must be an instance of LicenseTemplate');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(productModuleNumber, 'productModuleNumber');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        licenseTemplate.setProperty('productModuleNumber', productModuleNumber);\r\n\r\n        return Service\r\n            .post(context, Constants.LicenseTemplate.ENDPOINT_PATH, licenseTemplate.asPropertiesMap(), LicenseTemplate);\r\n    },\r\n\r\n    /**\r\n     * Gets license template by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Template+Services#LicenseTemplateServices-Getlicensetemplate\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the license template number\r\n     * @param number string\r\n     *\r\n     * return the license template object in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .get(context, `${Constants.LicenseTemplate.ENDPOINT_PATH}/${number}`, {}, LicenseTemplate);\r\n    },\r\n\r\n    /**\r\n     * Returns all license templates of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Template+Services#LicenseTemplateServices-Licensetemplateslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * array of license templates (of all products/modules) or null/empty list if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = filter;\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.LicenseTemplate.ENDPOINT_PATH, queryParams, LicenseTemplate);\r\n    },\r\n\r\n    /**\r\n     * Updates license template properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Template+Services#LicenseTemplateServices-Updatelicensetemplate\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * license template number\r\n     * @param number string\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param licenseTemplate NetLicensing.LicenseTemplate\r\n     *\r\n     * updated license template in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, licenseTemplate) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(licenseTemplate instanceof LicenseTemplate)) {\r\n            throw new TypeError('licenseTemplate must be an instance of LicenseTemplate');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const path = `${Constants.LicenseTemplate.ENDPOINT_PATH}/${number}`;\r\n\r\n        return Service\r\n            .post(context, path, licenseTemplate.asPropertiesMap(), LicenseTemplate);\r\n    },\r\n\r\n    /**\r\n     * Deletes license template.See NetLicensingAPI JavaDoc for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Template+Services#LicenseTemplateServices-Deletelicensetemplate\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * license template number\r\n     * @param number string\r\n     *\r\n     * if true, any entities that depend on the one being deleted will be deleted too\r\n     * @param forceCascade boolean\r\n     *\r\n     * return boolean state of delete in promise\r\n     * @returns {Promise}\r\n     */\r\n    delete(context, number, forceCascade) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        const queryParams = { forceCascade: Boolean(forceCascade) };\r\n\r\n        return Service\r\n            .delete(context, `${Constants.LicenseTemplate.ENDPOINT_PATH}/${number}`, queryParams);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport License from '../entities/License';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\n\r\n/**\r\n * JS representation of the License Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NLICPUB/License+Services\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new license object with given properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Services#LicenseServices-Createlicense\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * parent licensee to which the new license is to be added\r\n     * @param licenseeNumber string\r\n     *\r\n     *  license template that the license is created from\r\n     * @param licenseTemplateNumber string\r\n     *\r\n     * For privileged logins specifies transaction for the license creation. For regular logins new\r\n     * transaction always created implicitly, and the operation will be in a separate transaction.\r\n     * Transaction is generated with the provided transactionNumber, or, if transactionNumber is null, with\r\n     * auto-generated number.\r\n     * @param transactionNumber null|string\r\n     *\r\n     * non-null properties will be taken for the new object, null properties will either stay null, or will\r\n     * be set to a default value, depending on property.\r\n     * @param license NetLicensing.License\r\n     *\r\n     * return the newly created license object in promise\r\n     * @returns {Promise}\r\n     */\r\n    create(context, licenseeNumber, licenseTemplateNumber, transactionNumber, license) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(license instanceof License)) {\r\n            throw new TypeError('license must be an instance of License');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(licenseeNumber, 'licenseeNumber');\r\n        CheckUtils.paramNotEmpty(licenseTemplateNumber, 'licenseTemplateNumber');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        license.setProperty('licenseeNumber', licenseeNumber);\r\n        license.setProperty('licenseTemplateNumber', licenseTemplateNumber);\r\n\r\n        if (transactionNumber) license.setProperty('transactionNumber', transactionNumber);\r\n\r\n        return Service\r\n            .post(context, Constants.License.ENDPOINT_PATH, license.asPropertiesMap(), License);\r\n    },\r\n\r\n\r\n    /**\r\n     * Gets license by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Services#LicenseServices-Getlicense\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the license number\r\n     * @param number string\r\n     *\r\n     * return the license in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .get(context, `${Constants.License.ENDPOINT_PATH}/${number}`, {}, License);\r\n    },\r\n\r\n    /**\r\n     * Returns licenses of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Services#LicenseServices-Licenseslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * return array of licenses (of all products) or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = filter;\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.License.ENDPOINT_PATH, queryParams, License);\r\n    },\r\n\r\n    /**\r\n     * Updates license properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Services#LicenseServices-Updatelicense\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * license number\r\n     * @param number string\r\n     *\r\n     * transaction for the license update. Created implicitly if transactionNumber is null. In this case the\r\n     * operation will be in a separate transaction.\r\n     * @param transactionNumber string|null\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param license NetLicensing.License\r\n     *\r\n     * return updated license in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, transactionNumber, license) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(license instanceof License)) {\r\n            throw new TypeError('license must be an instance of License');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        if (transactionNumber) license.setProperty('transactionNumber', transactionNumber);\r\n\r\n        return Service\r\n            .post(context, `${Constants.License.ENDPOINT_PATH}/${number}`, license.asPropertiesMap(), License);\r\n    },\r\n\r\n    /**\r\n     * Deletes license.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Services#LicenseServices-Deletelicense\r\n     *\r\n     * When any license is deleted, corresponding transaction is created automatically.\r\n     *\r\n     *  determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * license number\r\n     * @param number string\r\n     *\r\n     * if true, any entities that depend on the one being deleted will be deleted too\r\n     * @param forceCascade boolean\r\n     *\r\n     * return boolean state of delete in promise\r\n     * @returns {Promise}\r\n     */\r\n    delete(context, number, forceCascade) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        const queryParams = { forceCascade: Boolean(forceCascade) };\r\n\r\n        return Service\r\n            .delete(context, `${Constants.License.ENDPOINT_PATH}/${number}`, queryParams);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport Licensee from '../entities/Licensee';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\nimport ValidationParameters from '../vo/ValidationParameters';\r\nimport ValidationResults from '../vo/ValidationResults';\r\n\r\n/**\r\n * JS representation of the Licensee Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new licensee object with given properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Createlicensee\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * parent product to which the new licensee is to be added\r\n     * @param productNumber string\r\n     *\r\n     * non-null properties will be taken for the new object, null properties will either stay null, or will\r\n     * be set to a default value, depending on property.\r\n     * @param licensee NetLicensing.Licensee\r\n     *\r\n     * return the newly created licensee object in promise\r\n     * @returns {Promise}\r\n     */\r\n    create(context, productNumber, licensee) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(licensee instanceof Licensee)) {\r\n            throw new TypeError('licensee must be an instance of Licensee');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(productNumber, 'productNumber');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        licensee.setProperty('productNumber', productNumber);\r\n\r\n        return Service\r\n            .post(context, Constants.Licensee.ENDPOINT_PATH, licensee.asPropertiesMap(), Licensee);\r\n    },\r\n\r\n    /**\r\n     * Gets licensee by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Getlicensee\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the licensee number\r\n     * @param number string\r\n     *\r\n     * return the licensee in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        return Service\r\n            .get(context, `${Constants.Licensee.ENDPOINT_PATH}/${number}`, {}, Licensee);\r\n    },\r\n\r\n    /**\r\n     * Returns all licensees of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Licenseeslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * array of licensees (of all products) or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = filter;\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.Licensee.ENDPOINT_PATH, queryParams, Licensee);\r\n    },\r\n\r\n    /**\r\n     * Updates licensee properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Updatelicensee\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * licensee number\r\n     * @param number string\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param licensee NetLicensing.Licensee\r\n     *\r\n     * return updated licensee in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, licensee) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(licensee instanceof Licensee)) {\r\n            throw new TypeError('licensee must be an instance of Licensee');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        return Service\r\n            .post(context, `${Constants.Licensee.ENDPOINT_PATH}/${number}`, licensee.asPropertiesMap(), Licensee);\r\n    },\r\n\r\n    /**\r\n     * Deletes licensee.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Deletelicensee\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * licensee number\r\n     * @param number string\r\n     *\r\n     * if true, any entities that depend on the one being deleted will be deleted too\r\n     * @param forceCascade boolean\r\n     *\r\n     * return boolean state of delete in promise\r\n     * @returns {Promise}\r\n     */\r\n    delete(context, number, forceCascade) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        const queryParams = { forceCascade: Boolean(forceCascade) };\r\n\r\n        return Service\r\n            .delete(context, `${Constants.Licensee.ENDPOINT_PATH}/${number}`, queryParams);\r\n    },\r\n\r\n    /**\r\n     * Validates active licenses of the licensee. See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Validatelicensee\r\n     *\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * licensee number\r\n     * @param number string\r\n     *\r\n     * optional validation parameters. See ValidationParameters and licensing model documentation for\r\n     * details.\r\n     * @param validationParameters NetLicensing.ValidationParameters.\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    validate(context, number, validationParameters) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(validationParameters instanceof ValidationParameters)) {\r\n            throw new TypeError('validationParameters must be an instance of ValidationParameters');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        const queryParams = {};\r\n\r\n        if (validationParameters.getProductNumber()) {\r\n            queryParams.productNumber = validationParameters.getProductNumber();\r\n        }\r\n\r\n        if (validationParameters.getLicenseeName()) {\r\n            queryParams.licenseeName = validationParameters.getLicenseeName();\r\n        }\r\n\r\n        if (validationParameters.getLicenseeSecret()) {\r\n            queryParams.licenseeSecret = validationParameters.getLicenseeSecret();\r\n        }\r\n\r\n        let pmIndex = 0;\r\n        const parameters = validationParameters.getParameters();\r\n\r\n        const has = Object.prototype.hasOwnProperty;\r\n\r\n        Object.keys(parameters).forEach((productModuleName) => {\r\n            queryParams[`productModuleNumber${pmIndex}`] = productModuleName;\r\n            if (!has.call(parameters, productModuleName)) return;\r\n\r\n            const parameter = parameters[productModuleName];\r\n\r\n            Object.keys(parameter).forEach((key) => {\r\n                if (has.call(parameter, key)) {\r\n                    queryParams[key + pmIndex] = parameter[key];\r\n                }\r\n            });\r\n            pmIndex += 1;\r\n        });\r\n\r\n        const path = `${Constants.Licensee.ENDPOINT_PATH}/${number}/${Constants.Licensee.ENDPOINT_PATH_VALIDATE}`;\r\n\r\n        return Service\r\n            .post(context, path, queryParams)\r\n            .then((item) => {\r\n                const data = {};\r\n                const validationResults = new ValidationResults();\r\n\r\n                item.property.forEach((property) => {\r\n                    data[property.name] = JSON.parse(property.value);\r\n                });\r\n\r\n                validationResults\r\n                    .setProductModuleValidation(data.productModuleNumber, data)\r\n                    .setTtl(Service.getLastHttpRequestInfo().data.ttl);\r\n\r\n                return validationResults;\r\n            });\r\n    },\r\n\r\n\r\n    /**\r\n     * Transfer licenses between licensees.\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Transferlicensee\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the number of the licensee receiving licenses\r\n     * @param number string\r\n     *\r\n     * the number of the licensee delivering licenses\r\n     * @param sourceLicenseeNumber string\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    transfer(context, number, sourceLicenseeNumber) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n        CheckUtils.paramNotEmpty(sourceLicenseeNumber, 'sourceLicenseeNumber');\r\n\r\n        const queryParams = { sourceLicenseeNumber };\r\n\r\n        const path = `${Constants.Licensee.ENDPOINT_PATH}/${number}/${Constants.Licensee.ENDPOINT_PATH_TRANSFER}`;\r\n\r\n        return Service\r\n            .post(context, path, queryParams);\r\n    },\r\n};\r\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n","'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","module.exports = require('./lib/axios');","// VO\r\nimport Context from './vo/Context';\r\n\r\n// Services\r\nimport Service from './services/Service';\r\nimport LicenseeService from './services/LicenseeService';\r\nimport LicenseService from './services/LicenseService';\r\nimport LicenseTemplateService from './services/LicenseTemplateService';\r\nimport PaymentMethodService from './services/PaymentMethodService';\r\nimport ProductModuleService from './services/ProductModuleService';\r\nimport ProductService from './services/ProductService';\r\nimport TokenService from './services/TokenService';\r\nimport TransactionService from './services/TransactionService';\r\nimport UtilityService from './services/UtilityService';\r\n\r\n// Entities\r\nimport Country from './entities/Country';\r\nimport License from './entities/License';\r\nimport Licensee from './entities/Licensee';\r\nimport LicenseTemplate from './entities/LicenseTemplate';\r\nimport PaymentMethod from './entities/PaymentMethod';\r\nimport Product from './entities/Product';\r\nimport ProductDiscount from './entities/ProductDiscount';\r\nimport ProductModule from './entities/ProductModule';\r\nimport Token from './entities/Token';\r\nimport Transaction from './entities/Transaction';\r\nimport ValidationParameters from './vo/ValidationParameters';\r\nimport ValidationResults from './vo/ValidationResults';\r\n\r\n// Utils\r\nimport CastsUtils from './util/CastsUtils';\r\nimport CheckUtils from './util/CheckUtils';\r\n\r\n\r\n// Create the default instance to be exported\r\nconst NetLicensing = {\r\n    // Expose VO\r\n    Context,\r\n    ValidationParameters,\r\n    ValidationResults,\r\n\r\n    // Expose Services\r\n    Service,\r\n    LicenseeService,\r\n    LicenseService,\r\n    LicenseTemplateService,\r\n    PaymentMethodService,\r\n    ProductModuleService,\r\n    ProductService,\r\n    TokenService,\r\n    TransactionService,\r\n    UtilityService,\r\n\r\n    // Expose Entities\r\n    Country,\r\n    License,\r\n    Licensee,\r\n    LicenseTemplate,\r\n    PaymentMethod,\r\n    Product,\r\n    ProductDiscount,\r\n    ProductModule,\r\n    Token,\r\n    Transaction,\r\n\r\n    // Expose Utils\r\n    CastsUtils,\r\n    CheckUtils,\r\n};\r\n\r\nmodule.exports = NetLicensing;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = NetLicensing;\r\n"],"sourceRoot":""}