{"version":3,"sources":["webpack://NetLicensing/webpack/universalModuleDefinition","webpack://NetLicensing/webpack/bootstrap","webpack://NetLicensing/./src/util/CheckUtils.js","webpack://NetLicensing/./node_modules/axios/lib/utils.js","webpack://NetLicensing/./src/Constants.js","webpack://NetLicensing/./src/entities/BaseEntity.js","webpack://NetLicensing/./src/vo/Context.js","webpack://NetLicensing/./src/util/FilterUtils.js","webpack://NetLicensing/./src/services/Service.js","webpack://NetLicensing/./src/entities/License.js","webpack://NetLicensing/./src/entities/Transaction.js","webpack://NetLicensing/./node_modules/axios/lib/defaults.js","webpack://NetLicensing/./src/entities/Country.js","webpack://NetLicensing/./src/entities/LicenseTransactionJoin.js","webpack://NetLicensing/./src/entities/Token.js","webpack://NetLicensing/./src/entities/ProductDiscount.js","webpack://NetLicensing/./src/entities/Product.js","webpack://NetLicensing/./src/entities/ProductModule.js","webpack://NetLicensing/./src/entities/PaymentMethod.js","webpack://NetLicensing/./src/entities/LicenseTemplate.js","webpack://NetLicensing/./src/vo/ValidationResults.js","webpack://NetLicensing/./src/vo/ValidationParameters.js","webpack://NetLicensing/./src/entities/Licensee.js","webpack://NetLicensing/./src/errors/NlicError.js","webpack://NetLicensing/./src/util/CastsUtils.js","webpack://NetLicensing/./node_modules/axios/lib/cancel/Cancel.js","webpack://NetLicensing/./node_modules/axios/lib/cancel/isCancel.js","webpack://NetLicensing/./node_modules/axios/lib/core/createError.js","webpack://NetLicensing/./node_modules/axios/lib/adapters/xhr.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/bind.js","webpack://NetLicensing/./src/services/UtilityService.js","webpack://NetLicensing/./src/services/TransactionService.js","webpack://NetLicensing/./src/services/TokenService.js","webpack://NetLicensing/./src/services/ProductService.js","webpack://NetLicensing/./src/services/ProductModuleService.js","webpack://NetLicensing/./src/services/PaymentMethodService.js","webpack://NetLicensing/./src/services/LicenseTemplateService.js","webpack://NetLicensing/./src/services/LicenseService.js","webpack://NetLicensing/./src/services/LicenseeService.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/spread.js","webpack://NetLicensing/./node_modules/axios/lib/cancel/CancelToken.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/combineURLs.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://NetLicensing/./node_modules/axios/lib/core/transformData.js","webpack://NetLicensing/./node_modules/axios/lib/core/dispatchRequest.js","webpack://NetLicensing/./node_modules/axios/lib/core/InterceptorManager.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/cookies.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/btoa.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/buildURL.js","webpack://NetLicensing/./node_modules/axios/lib/core/enhanceError.js","webpack://NetLicensing/./node_modules/axios/lib/core/settle.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://NetLicensing/./node_modules/process/browser.js","webpack://NetLicensing/./node_modules/axios/lib/core/Axios.js","webpack://NetLicensing/./node_modules/is-buffer/index.js","webpack://NetLicensing/./node_modules/axios/lib/axios.js","webpack://NetLicensing/./node_modules/axios/index.js","webpack://NetLicensing/./src/netlicensing-client.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","isValid","valid","undefined","Number","isFinite","isNaN","paramNotNull","parameter","parameterName","this","TypeError","paramNotEmpty","bind","isBuffer","toString","isArray","val","isObject","isFunction","forEach","obj","fn","length","key","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","document","merge","result","assignValue","arguments","extend","a","b","thisArg","trim","str","replace","BASIC_AUTHENTICATION","APIKEY_IDENTIFICATION","LicensingModel","VALID","TryAndBuy","NAME","Rental","RED_THRESHOLD","YELLOW_THRESHOLD","Subscription","Floating","MultiFeature","PayPerUse","PricingTable","Quota","LicenseTemplate","ENDPOINT_PATH","LicenseType","FEATURE","TIMEVOLUME","FLOATING","QUANTITY","Product","LicenseeSecretMode","DISABLED","PREDEFINED","CLIENT","Token","Type","DEFAULT","SHOP","APIKEY","Transaction","Status","CANCELLED","CLOSED","PENDING","Licensee","ENDPOINT_PATH_VALIDATE","ENDPOINT_PATH_TRANSFER","License","PaymentMethod","ProductModule","Utility","ROLE_APIKEY_LICENSEE","ROLE_APIKEY_ANALYTICS","ROLE_APIKEY_OPERATION","ROLE_APIKEY_MAINTENANCE","ROLE_APIKEY_ADMIN","propertiesMap","WeakMap","definedMap","castsMap","readOnlyMap","BaseEntity","_ref","properties","casts","readOnly","_classCallCheck","set","setProperties","hasProperty","isPropertyReadOnly","_CheckUtils2","default","_typeof","castedValue","cast","setProperty","_this","removeProperties","has","keys","def","assign","removeDefine","_this2","removeProperty","indexOf","_CastsUtils2","Boolean","hasDefine","self","descriptors","getProperty","onlyGetter","_this3","_this4","getProperties","customProperties","valuesMap","defaultsMap","Context","values","baseUrl","securityMode","_Constants2","setValues","setValue","getValue","username","password","apiKey","vendorNumber","Error","copedValue","Array","removeValues","removeValue","FILTER_DELIMITER","FILTER_PAIR_DELIMITER","encode","filter","query","push","encodeURIComponent","join","decode","split","v","_v$split","_v$split2","_slicedToArray","httpXHR","Service","context","urlTemplate","queryParams","resultType","request","then","response","data","getEntity","getItem","catch","e","isNotFound","getLastHttpRequestInfo","Promise","resolve","map","item","status","method","template","String","params","toLowerCase","getBaseUrl","isValidUrl","restUrl","url","responseType","headers","transformRequest","toQueryString","getSecurityMode","getUsername","getPassword","auth","getApiKey","Authorization","btoa","_axios2","error","reason","getInfo","_NlicError2","reject","lists","list","entity","_ref2","setListMethod","charAt","toUpperCase","substr","console","warn","type","infos","info","items","id","RegExp","test","prefix","k","Date","toISOString","_BaseEntity2","_possibleConstructorReturn","__proto__","getPrototypeOf","number","active","price","hidden","parentfeature","timeVolume","startDate","inUse","defines","source","grandTotal","discount","currency","dateCreated","dateClosed","paymentMethod","licenseTransactionJoins","licenseTransactionJoin","_LicenseTransactionJoin2","setLicense","_License2","setTransaction","utils","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","adapter","defaults","XMLHttpRequest","process","JSON","stringify","transformResponse","parse","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","common","Accept","Country","code","vatPercent","isEu","vat","LicenseTransactionJoin","transaction","license","expirationTime","tokenType","licenseeNumber","successURL","successURLTitle","cancelURL","cancelURLTitle","shopURL","role","ProductDiscount","totalPrice","amountFix","amountPercent","getTotalPrice","getCurrency","amount","getAmountFix","getAmountPercent","discountsMap","discountsTouched","version","description","licensingInfo","licenseeAutoCreate","licenseeSecretMode","discounts","addDiscount","_ProductDiscount2","licensingModel","maxCheckoutValidity","yellowThreshold","redThreshold","licenseTemplate","paypal.subject","paypalSubject","licenseType","automatic","hideLicenses","timeVolumePeriod","maxSessions","quantity","_CheckUtils","vr","ValidationResults","validators","productModuleNumber","productModuleValidation","ttl","getValidators","vpMap","ValidationParameters","parameters","productNumber","licenseeName","licenseeSecret","productModuleParameters","markedForTransfer","NlicError","_len","args","_key","apply","concat","captureStackTrace","parseInt","parseFloat","Cancel","message","__CANCEL__","enhanceError","config","settle","buildURL","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","loadEvent","xDomain","XDomainRequest","onprogress","ontimeout","open","paramsSerializer","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseText","statusText","onerror","cookies","xsrfValue","withCredentials","read","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","listLicenseTypes","setSecurityMode","_Service2","listLicensingModels","listCountries","_FilterUtils2","_Country2","create","post","asPropertiesMap","_Transaction2","update","path","token","_Token2","delete","_Product2","forceCascade","productModule","_ProductModule2","_PaymentMethod2","_LicenseTemplate2","licenseTemplateNumber","transactionNumber","licensee","_Licensee2","validate","validationParameters","getProductNumber","getLicenseeName","getLicenseeSecret","pmIndex","getParameters","productModuleName","validationResults","_ValidationResults2","setProductModuleValidation","setTtl","transfer","sourceLicenseeNumber","callback","arr","CancelToken","executor","resolvePromise","throwIfRequested","baseURL","relativeURL","fns","transformData","isCancel","isAbsoluteURL","combineURLs","throwIfCancellationRequested","InterceptorManager","handlers","use","fulfilled","rejected","eject","h","write","expires","domain","secure","cookie","toGMTString","match","decodeURIComponent","remove","now","chars","E","input","block","charCode","output","idx","charCodeAt","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","location","requestURL","parsed","ignoreDuplicateOf","line","serializedParams","parts","normalizedName","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","dispatchRequest","Axios","instanceConfig","interceptors","chain","interceptor","unshift","shift","constructor","readFloatLE","slice","isSlowBuffer","_isBuffer","createInstance","defaultConfig","instance","axios","all","promises","spread","NetLicensing","Constants","LicenseeService","LicenseService","LicenseTemplateService","PaymentMethodService","ProductModuleService","ProductService","TokenService","TransactionService","UtilityService","CastsUtils","CheckUtils","FilterUtils"],"mappings":"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","file":"netlicensing-client.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"NetLicensing\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NetLicensing\"] = factory();\n\telse\n\t\troot[\"NetLicensing\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 57);\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nexport default {\r\n    isValid(value) {\r\n        let valid = (value !== undefined && typeof value !== 'function');\r\n        if (typeof value === 'number') valid = Number.isFinite(value) && !Number.isNaN(value);\r\n        return valid;\r\n    },\r\n\r\n    paramNotNull(parameter, parameterName) {\r\n        if (!this.isValid(parameter)) throw new TypeError(`Parameter ${parameterName} has bad value ${parameter}`);\r\n        if (parameter === null) throw new TypeError(`Parameter ${parameterName} cannot be null`);\r\n    },\r\n\r\n    paramNotEmpty(parameter, parameterName) {\r\n        if (!this.isValid(parameter)) throw new TypeError(`Parameter ${parameterName} has bad value ${parameter}`);\r\n        if (!parameter) throw new TypeError(`Parameter ${parameterName} cannot be null or empty string`);\r\n    },\r\n};\r\n","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nexport default {\r\n    BASIC_AUTHENTICATION: 'BASIC_AUTH',\r\n    APIKEY_IDENTIFICATION: 'APIKEY',\r\n\r\n    LicensingModel: {\r\n        VALID: 'valid',\r\n        TryAndBuy: {\r\n            NAME: 'TryAndBuy',\r\n        },\r\n        Rental: {\r\n            NAME: 'Rental',\r\n            RED_THRESHOLD: 'redThreshold',\r\n            YELLOW_THRESHOLD: 'yellowThreshold',\r\n        },\r\n        Subscription: {\r\n            NAME: 'Subscription',\r\n        },\r\n        Floating: {\r\n            NAME: 'Floating',\r\n        },\r\n        MultiFeature: {\r\n            NAME: 'MultiFeature',\r\n        },\r\n        PayPerUse: {\r\n            NAME: 'PayPerUse',\r\n        },\r\n        PricingTable: {\r\n            NAME: 'PricingTable',\r\n        },\r\n        Quota: {\r\n            NAME: 'Quota',\r\n        },\r\n    },\r\n\r\n    LicenseTemplate: {\r\n        ENDPOINT_PATH: 'licensetemplate',\r\n        LicenseType: {\r\n            FEATURE: 'FEATURE',\r\n            TIMEVOLUME: 'TIMEVOLUME',\r\n            FLOATING: 'FLOATING',\r\n            QUANTITY: 'QUANTITY',\r\n        },\r\n    },\r\n\r\n    Product: {\r\n        ENDPOINT_PATH: 'product',\r\n        LicenseeSecretMode: {\r\n            DISABLED: 'DISABLED',\r\n            PREDEFINED: 'PREDEFINED',\r\n            CLIENT: 'CLIENT',\r\n        },\r\n    },\r\n\r\n    Token: {\r\n        ENDPOINT_PATH: 'token',\r\n        Type: {\r\n            DEFAULT: 'DEFAULT',\r\n            SHOP: 'SHOP',\r\n            APIKEY: 'APIKEY',\r\n        },\r\n    },\r\n\r\n    Transaction: {\r\n        ENDPOINT_PATH: 'transaction',\r\n        Status: {\r\n            CANCELLED: 'CANCELLED',\r\n            CLOSED: 'CLOSED',\r\n            PENDING: 'PENDING',\r\n        },\r\n    },\r\n\r\n    Licensee: {\r\n        ENDPOINT_PATH: 'licensee',\r\n        ENDPOINT_PATH_VALIDATE: 'validate',\r\n        ENDPOINT_PATH_TRANSFER: 'transfer',\r\n    },\r\n\r\n    License: {\r\n        ENDPOINT_PATH: 'license',\r\n    },\r\n\r\n    PaymentMethod: {\r\n        ENDPOINT_PATH: 'paymentmethod',\r\n    },\r\n\r\n    ProductModule: {\r\n        ENDPOINT_PATH: 'productmodule',\r\n    },\r\n\r\n    Utility: {\r\n        ENDPOINT_PATH: 'utility',\r\n    },\r\n\r\n    APIKEY: {\r\n        ROLE_APIKEY_LICENSEE: 'ROLE_APIKEY_LICENSEE',\r\n        ROLE_APIKEY_ANALYTICS: 'ROLE_APIKEY_ANALYTICS',\r\n        ROLE_APIKEY_OPERATION: 'ROLE_APIKEY_OPERATION',\r\n        ROLE_APIKEY_MAINTENANCE: 'ROLE_APIKEY_MAINTENANCE',\r\n        ROLE_APIKEY_ADMIN: 'ROLE_APIKEY_ADMIN',\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport CastsUtils from '../util/CastsUtils';\r\n\r\n/**\r\n * The entity properties.\r\n * @type {{}}\r\n * @private\r\n */\r\nconst propertiesMap = new WeakMap();\r\n\r\n/**\r\n * List of properties that was defined\r\n * @type {{}}\r\n * @private\r\n */\r\n\r\nconst definedMap = new WeakMap();\r\n\r\n/**\r\n * List of properties that need be casts\r\n * @type {{}}\r\n * @private\r\n */\r\nconst castsMap = new WeakMap();\r\n\r\n/**\r\n * List of properties that has read-only access\r\n * @type {{}}\r\n * @private\r\n */\r\nconst readOnlyMap = new WeakMap();\r\n\r\nexport default class BaseEntity {\r\n    constructor({ properties, casts, readOnly }) {\r\n        propertiesMap.set(this, {});\r\n        definedMap.set(this, {});\r\n        castsMap.set(this, casts || []);\r\n        readOnlyMap.set(this, readOnly || []);\r\n\r\n        if (properties) {\r\n            this.setProperties(properties);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set a given property on the entity.\r\n     * @param property\r\n     * @param value\r\n     * @returns {BaseEntity}\r\n     */\r\n    setProperty(property, value) {\r\n        // if property has read-only access and was initialized at least once\r\n        if (this.hasProperty(property) && this.isPropertyReadOnly(property)) {\r\n            throw new TypeError(`Property ${property} has read-only access`);\r\n        }\r\n\r\n        // if property name has bad native type\r\n        if (!CheckUtils.isValid(property) || typeof property === 'object') {\r\n            throw new TypeError(`Bad property name:${property}`);\r\n        }\r\n\r\n        // if property value has bad native type\r\n        if (!CheckUtils.isValid(value)) {\r\n            throw new TypeError(`Property ${property} has bad value ${value}`);\r\n        }\r\n\r\n        const castedValue = this.cast(property, value);\r\n\r\n        // check if property value after cast has bad native type\r\n        if (!CheckUtils.isValid(value)) {\r\n            throw new TypeError(`Property ${property} has bad cast value ${castedValue}`);\r\n        }\r\n\r\n        // define to property\r\n        this.define(property);\r\n\r\n        // save property to propertiesMap\r\n        const properties = propertiesMap.get(this);\r\n        properties[property] = castedValue;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Alias for setProperty\r\n     * @param property\r\n     * @param value\r\n     * @returns {BaseEntity}\r\n     */\r\n    addProperty(property, value) {\r\n        return this.setProperty(property, value);\r\n    }\r\n\r\n    /**\r\n     * Set the entity properties.\r\n     * @param properties\r\n     * @returns {BaseEntity}\r\n     */\r\n    setProperties(properties) {\r\n        this.removeProperties();\r\n\r\n        const has = Object.prototype.hasOwnProperty;\r\n\r\n        Object.keys(properties).forEach((key) => {\r\n            if (has.call(properties, key)) {\r\n                this.setProperty(key, properties[key]);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Check if we has property\r\n     * @param property\r\n     * @protected\r\n     */\r\n    hasProperty(property) {\r\n        return Object.prototype.hasOwnProperty.call(propertiesMap.get(this), property);\r\n    }\r\n\r\n    /**\r\n     * Get an property from the entity.\r\n     * @param property\r\n     * @param def\r\n     * @returns {*}\r\n     */\r\n    getProperty(property, def) {\r\n        return Object.prototype.hasOwnProperty.call(propertiesMap.get(this), property)\r\n            ? propertiesMap.get(this)[property]\r\n            : def;\r\n    }\r\n\r\n    /**\r\n     * Get all of the current properties on the entity.\r\n     */\r\n    getProperties() {\r\n        return Object.assign({}, propertiesMap.get(this));\r\n    }\r\n\r\n    /**\r\n     * Remove property\r\n     * @param property\r\n     * @returns {BaseEntity}\r\n     */\r\n    removeProperty(property) {\r\n        const properties = propertiesMap.get(this);\r\n        delete properties[property];\r\n        this.removeDefine(property);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove properties\r\n     * @param properties\r\n     */\r\n    removeProperties(properties) {\r\n        const propertiesForRemove = properties || Object.keys(propertiesMap.get(this));\r\n\r\n        propertiesForRemove.forEach((property) => {\r\n            this.removeProperty(property);\r\n        });\r\n    }\r\n\r\n    isPropertyReadOnly(property) {\r\n        return readOnlyMap.get(this).indexOf(property) >= 0;\r\n    }\r\n\r\n    cast(property, value) {\r\n        if (!castsMap.get(this)[property]) return value;\r\n\r\n        return CastsUtils(castsMap.get(this)[property], value);\r\n    }\r\n\r\n    /**\r\n     * Check if property has defined\r\n     * @param property\r\n     * @protected\r\n     */\r\n    hasDefine(property) {\r\n        return Boolean(definedMap.get(this)[property]);\r\n    }\r\n\r\n    /**\r\n     * Define property getter and setter\r\n     * @param property\r\n     * @protected\r\n     */\r\n    define(property) {\r\n        if (this.hasDefine(property)) return;\r\n\r\n        if (!CheckUtils.isValid(property) || typeof property === 'object') {\r\n            throw new TypeError(`Bad property name:${property}`);\r\n        }\r\n\r\n        const self = this;\r\n\r\n        // delete property\r\n        delete this[property];\r\n\r\n        const descriptors = {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get() {\r\n                return self.getProperty(property);\r\n            },\r\n        };\r\n\r\n        if (!this.isPropertyReadOnly(property)) {\r\n            descriptors.set = value => self.setProperty(property, value);\r\n        }\r\n\r\n        const defined = definedMap.get(this);\r\n        defined[property] = true;\r\n\r\n        Object.defineProperty(this, property, descriptors);\r\n    }\r\n\r\n    /**\r\n     * Remove property getter and setter\r\n     * @param property\r\n     * @protected\r\n     */\r\n    removeDefine(property) {\r\n        if (!this.hasDefine(property)) return;\r\n\r\n        const defined = definedMap.get(this);\r\n        delete defined[property];\r\n\r\n        delete this[property];\r\n    }\r\n\r\n    /**\r\n     * Define properties getter and setter\r\n     * @param properties\r\n     * @param onlyGetter\r\n     * @protected\r\n     */\r\n    defines(properties, onlyGetter) {\r\n        properties.forEach((property) => {\r\n            this.define(property, onlyGetter);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get properties map\r\n     */\r\n    asPropertiesMap() {\r\n        const properties = this.getProperties();\r\n        const customProperties = {};\r\n\r\n        const has = Object.prototype.hasOwnProperty;\r\n\r\n        Object.keys(this).forEach((key) => {\r\n            if (!has.call(this, key)) return;\r\n            if (!CheckUtils.isValid(this[key])) return;\r\n\r\n            customProperties[key] = this[key];\r\n        });\r\n\r\n        return Object.assign({}, customProperties, properties);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\nimport Constants from '../Constants';\r\nimport CheckUtils from '../util/CheckUtils';\r\n\r\n/**\r\n * The context values.\r\n * @type {{}}\r\n * @private\r\n */\r\nconst valuesMap = new WeakMap();\r\n\r\n/**\r\n * List of values that was defined\r\n * @type {{}}\r\n * @private\r\n */\r\nconst definedMap = new WeakMap();\r\n\r\n/**\r\n * Context defaults\r\n * @type {{baseUrl: string, securityMode}}\r\n * @private\r\n */\r\nconst defaultsMap = new WeakMap();\r\n\r\nexport default class Context {\r\n    constructor(values) {\r\n        defaultsMap.set(this, {\r\n            baseUrl: 'https://go.netlicensing.io/core/v2/rest',\r\n            securityMode: Constants.BASIC_AUTHENTICATION,\r\n        });\r\n\r\n        valuesMap.set(this, {});\r\n\r\n        definedMap.set(this, {});\r\n\r\n        this.setValues(Object.assign({}, defaultsMap.get(this), values));\r\n    }\r\n\r\n    setBaseUrl(baseUrl) {\r\n        return this.setValue('baseUrl', baseUrl);\r\n    }\r\n\r\n    getBaseUrl(def) {\r\n        return this.getValue('baseUrl', def);\r\n    }\r\n\r\n    setUsername(username) {\r\n        return this.setValue('username', username);\r\n    }\r\n\r\n    getUsername(def) {\r\n        return this.getValue('username', def);\r\n    }\r\n\r\n    setPassword(password) {\r\n        return this.setValue('password', password);\r\n    }\r\n\r\n    getPassword(def) {\r\n        return this.getValue('password', def);\r\n    }\r\n\r\n    setApiKey(apiKey) {\r\n        return this.setValue('apiKey', apiKey);\r\n    }\r\n\r\n    getApiKey(def) {\r\n        return this.getValue('apiKey', def);\r\n    }\r\n\r\n    setSecurityMode(securityMode) {\r\n        return this.setValue('securityMode', securityMode);\r\n    }\r\n\r\n    getSecurityMode(def) {\r\n        return this.getValue('securityMode', def);\r\n    }\r\n\r\n    setVendorNumber(vendorNumber) {\r\n        return this.setValue('vendorNumber', vendorNumber);\r\n    }\r\n\r\n    getVendorNumber(def) {\r\n        return this.getValue('vendorNumber', def);\r\n    }\r\n\r\n    /**\r\n     * Set a given values on the context.\r\n     * @param key\r\n     * @param value\r\n     * @returns {Context}\r\n     */\r\n    setValue(key, value) {\r\n        // check values\r\n        if (!CheckUtils.isValid(key) || typeof key === 'object') throw new Error(`Bad value key:${key}`);\r\n        if (!CheckUtils.isValid(value)) throw new Error(`Value ${key} has wrong value${value}`);\r\n\r\n        // define keys\r\n        this.define(key);\r\n\r\n        let copedValue = value;\r\n\r\n        if (typeof value === 'object') {\r\n            copedValue = (Array.isArray(value)) ? Object.assign([], value) : Object.assign({}, value);\r\n        }\r\n\r\n        const values = valuesMap.get(this);\r\n        values[key] = copedValue;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the array of context values.\r\n     * @param values\r\n     * @returns {Context}\r\n     */\r\n    setValues(values) {\r\n        this.removeValues();\r\n\r\n        const has = Object.prototype.hasOwnProperty;\r\n\r\n        Object.keys(values).forEach((key) => {\r\n            if (has.call(values, key)) {\r\n                this.setValue(key, values[key]);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get an value from the context.\r\n     * @param key\r\n     * @param def\r\n     * @returns {*}\r\n     */\r\n    getValue(key, def) {\r\n        return valuesMap.get(this)[key] || def;\r\n    }\r\n\r\n    /**\r\n     * Get all of the current value on the context.\r\n     */\r\n    getValues() {\r\n        return Object.assign({}, valuesMap.get(this));\r\n    }\r\n\r\n    /**\r\n     * Remove value\r\n     * @param key\r\n     * @returns {Context}\r\n     */\r\n    removeValue(key) {\r\n        const values = valuesMap.get(this);\r\n        delete values[key];\r\n\r\n        this.removeDefine(key);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove values\r\n     * @param keys\r\n     */\r\n    removeValues(keys) {\r\n        const keysAr = keys || Object.keys(valuesMap.get(this));\r\n        keysAr.forEach(key => this.removeValue(key));\r\n    }\r\n\r\n    /**\r\n     * Define value getter and setter\r\n     * @param key\r\n     * @param onlyGetter\r\n     * @private\r\n     */\r\n    define(key, onlyGetter) {\r\n        if (this.hasDefine(key)) return;\r\n\r\n        if (!CheckUtils.isValid(key) || typeof property === 'object') {\r\n            throw new TypeError(`Bad value name:${key}`);\r\n        }\r\n\r\n        const self = this;\r\n\r\n        // delete property\r\n        delete this[key];\r\n\r\n        const descriptors = {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get() {\r\n                return self.getValue(key);\r\n            },\r\n        };\r\n\r\n        if (!onlyGetter) {\r\n            descriptors.set = value => self.setValue(key, value);\r\n        }\r\n\r\n        const defined = definedMap.get(this);\r\n        defined[key] = true;\r\n\r\n        Object.defineProperty(this, key, descriptors);\r\n    }\r\n\r\n    /**\r\n     * Check if value has defined\r\n     * @param key\r\n     * @private\r\n     */\r\n    hasDefine(key) {\r\n        return Boolean(definedMap.get(this)[key]);\r\n    }\r\n\r\n    /**\r\n     * Remove value getter and setter\r\n     * @param key\r\n     * @private\r\n     */\r\n    removeDefine(key) {\r\n        if (!this.hasDefine(key)) return;\r\n\r\n        const defined = definedMap.get(this);\r\n        delete defined[key];\r\n\r\n        delete this[key];\r\n    }\r\n}\r\n","export default {\r\n    FILTER_DELIMITER: ';',\r\n    FILTER_PAIR_DELIMITER: '=',\r\n    encode(filter = {}) {\r\n        const query = [];\r\n        const has = Object.prototype.hasOwnProperty;\r\n        Object.keys(filter).forEach((key) => {\r\n            if (has.call(filter, key)) {\r\n                query.push(`${encodeURIComponent(key)}${this.FILTER_PAIR_DELIMITER}${encodeURIComponent(filter[key])}`);\r\n            }\r\n        });\r\n        return query.join(this.FILTER_DELIMITER);\r\n    },\r\n    decode(query = '') {\r\n        const filter = {};\r\n        query.split(this.FILTER_DELIMITER).forEach((v) => {\r\n            const [name, value] = v.split(this.FILTER_PAIR_DELIMITER);\r\n            filter[name] = value;\r\n        });\r\n        return filter;\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\nimport axios from 'axios';\r\nimport Context from '../vo/Context';\r\nimport Constants from '../Constants';\r\nimport BaseEntity from '../entities/BaseEntity';\r\nimport NlicError from '../errors/NlicError';\r\n\r\nlet httpXHR = {};\r\n\r\nexport default class Service {\r\n    static getLastHttpRequestInfo() {\r\n        return httpXHR;\r\n    }\r\n\r\n    /**\r\n     * Helper method for performing GET request to N\r\n     etLicensing API services. Finds and returns first suitable item with\r\n     * type resultType from the response.\r\n     *\r\n     * Context for the NetLicensing API call\r\n     * @param context\r\n     *\r\n     * the REST URL template\r\n     * @param urlTemplate\r\n     *\r\n     * The REST query parameters values. May be null if there are no parameters.\r\n     * @param queryParams\r\n     *\r\n     * the type of the result\r\n     * @param resultType\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    static get(context, urlTemplate, queryParams, resultType) {\r\n        return Service\r\n            .request(context, 'get', urlTemplate, queryParams)\r\n            .then(response => ((response.data)\r\n                ? Service.getEntity(resultType, Service.getItem(response, [])[0])\r\n                : null))\r\n            .catch((e) => {\r\n                if (Service.isNotFound(Service.getLastHttpRequestInfo().response)) {\r\n                    return Promise.resolve(null);\r\n                }\r\n                throw e;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Helper method for performing GET request to NetLicensing API service that returns page of items with type\r\n     * resultType.\r\n     *\r\n     * context for the NetLicensing API call\r\n     * @param context\r\n     *\r\n     * the REST URL template\r\n     * @param urlTemplate\r\n     *\r\n     * The REST query parameters values. May be null if there are no parameters.\r\n     * @param queryParams\r\n     *\r\n     * the type of the result\r\n     * @param resultType\r\n     *\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    static list(context, urlTemplate, queryParams, resultType) {\r\n        return Service\r\n            .request(context, 'get', urlTemplate, queryParams)\r\n            .then(response => ((response.data)\r\n                ? Service.getItem(response, []).map(item => Service.getEntity(resultType, item))\r\n                : []));\r\n    }\r\n\r\n    /**\r\n     * Helper method for performing POST request to NetLicensing API services. Finds and returns first suitable item\r\n     * with type resultType from the response.\r\n     *\r\n     * context for the NetLicensing API call\r\n     * @param context\r\n     *\r\n     * the REST URL template\r\n     * @param urlTemplate\r\n     *\r\n     * The REST query parameters values. May be null if there are no parameters.\r\n     * @param queryParams\r\n     *\r\n     * he type of the result\r\n     * @param resultType\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    static post(context, urlTemplate, queryParams, resultType) {\r\n        return Service\r\n            .request(context, 'post', urlTemplate, queryParams)\r\n            .then(response => ((response.data) ? Service.getEntity(resultType, Service.getItem(response)[0]) : null));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param context\r\n     * @param urlTemplate\r\n     * @param queryParams\r\n     * @returns {Promise}\r\n     */\r\n    static delete(context, urlTemplate, queryParams) {\r\n        return Service\r\n            .request(context, 'delete', urlTemplate, queryParams)\r\n            .then(response => (response.status === 204));\r\n    }\r\n\r\n    /**\r\n     * Send request to NetLicensing  RestApi\r\n     * @param context\r\n     * @param method\r\n     * @param urlTemplate\r\n     * @param queryParams\r\n     * @returns {Promise}\r\n     */\r\n    static request(context, method, urlTemplate, queryParams) {\r\n        if (!(context instanceof Context)) throw new TypeError('context must be an instance of NetLicensing.Context');\r\n\r\n        const template = String(urlTemplate);\r\n        const params = queryParams || {};\r\n\r\n        if (!template) throw new TypeError('Url template must be specified');\r\n\r\n        // validate http method\r\n        if (['get', 'post', 'delete'].indexOf(method.toLowerCase()) < 0) {\r\n            throw new Error(`Invalid request type:${method}, allowed requests types: GET, POST, DELETE.`);\r\n        }\r\n\r\n        // validate context\r\n        if (!context.getBaseUrl(null)) {\r\n            throw new Error('Base url must be specified');\r\n        }\r\n\r\n        if (!Service.isValidUrl(String(context.getBaseUrl()))) {\r\n            throw new Error(`Base url \"${context.getBaseUrl()}\" is not a valid URL`);\r\n        }\r\n\r\n        let restUrl = `${context.getBaseUrl()}/${urlTemplate}`;\r\n\r\n        restUrl = restUrl.replace(/([^:]\\/)\\/+/g, '$1');\r\n\r\n        // validate baseUrl +  urlTemplate\r\n        if (!Service.isValidUrl(String(restUrl))) {\r\n            throw new Error(`Rest url \"${restUrl}\" is not a valid URL`);\r\n        }\r\n\r\n        const request = {\r\n            url: restUrl,\r\n            method: method.toLowerCase(),\r\n            responseType: 'json',\r\n            headers: {},\r\n            transformRequest: [(data, headers) => {\r\n                if (headers['Content-Type'] === 'application/x-www-form-urlencoded') {\r\n                    return Service.toQueryString(data);\r\n                }\r\n                return data;\r\n            }],\r\n        };\r\n\r\n        if (['put', 'post', 'patch'].indexOf(request.method) >= 0) {\r\n            if (request.method === 'post') {\r\n                request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\r\n            }\r\n            request.data = params;\r\n        } else {\r\n            request.params = params;\r\n        }\r\n\r\n        switch (context.getSecurityMode()) {\r\n            // Basic Auth\r\n            case Constants.BASIC_AUTHENTICATION:\r\n                if (!context.getUsername()) throw new Error('Missing parameter \"username\"');\r\n                if (!context.getPassword()) throw new Error('Missing parameter \"password\"');\r\n\r\n                request.auth = {\r\n                    username: context.getUsername(),\r\n                    password: context.getPassword(),\r\n                };\r\n                break;\r\n            // ApiKey Auth\r\n            case Constants.APIKEY_IDENTIFICATION:\r\n                if (!context.getApiKey()) throw new Error('Missing parameter \"apiKey\"');\r\n\r\n                request.headers.Authorization = `Basic ${btoa(`apiKey:${context.getApiKey()}`)}`;\r\n                break;\r\n            default:\r\n                throw new Error('Unknown security mode');\r\n        }\r\n\r\n        return axios(request)\r\n            .then((response) => {\r\n                httpXHR = response;\r\n                return response;\r\n            })\r\n            .catch((error) => {\r\n                httpXHR = error;\r\n\r\n                if (error.response) {\r\n                    // The request was made and the server responded with a status code\r\n                    // that falls out of the range of 2xx\r\n                    const info = Service.getInfo(error.response, [])[0];\r\n                    const reason = info.value || 'Unknown';\r\n\r\n                    throw new NlicError(`Unsupported response status code ${error.response.status}: ${reason}`);\r\n                }\r\n\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Create Entity from item\r\n     * @param resultType\r\n     * @param item\r\n     * @returns {*}\r\n     */\r\n    static getEntity(resultType, item) {\r\n        const properties = item.property || null;\r\n        const lists = item.list || null;\r\n\r\n        if (!resultType) return item;\r\n\r\n        // eslint-disable-next-line new-cap\r\n        const entity = new resultType();\r\n\r\n        if (!(entity instanceof BaseEntity)) {\r\n            throw new Error(`Invalid entity ${resultType}, entity must be instanceof BaseEntity`);\r\n        }\r\n\r\n        properties.forEach(({ name, value }) => {\r\n            entity.setProperty(name, value);\r\n        });\r\n\r\n        if (lists) {\r\n            lists.forEach(({ name, property }) => {\r\n                const setListMethod = `setList${name.charAt(0).toUpperCase()}${name.substr(1, name.length - 1)}`;\r\n                const setListsMethod = 'setLists';\r\n\r\n                if (typeof entity[setListMethod] !== 'function' && typeof entity[setListsMethod] !== 'function') {\r\n                    // eslint-disable-next-line no-console\r\n                    console.warn(`Methods: ${setListMethod},${setListsMethod} not found in ${item.type} \r\n                    for list property ${name}`);\r\n                    return;\r\n                }\r\n\r\n                if (typeof entity[setListMethod] === 'function') {\r\n                    entity[setListMethod](property);\r\n                    return;\r\n                }\r\n\r\n                if (typeof entity[setListsMethod] === 'function') {\r\n                    entity[setListsMethod](name, property);\r\n                }\r\n            });\r\n        }\r\n\r\n        return entity;\r\n    }\r\n\r\n    static getInfo(response, def) {\r\n        try {\r\n            return response.data.infos.info || def;\r\n        } catch (e) {\r\n            return def;\r\n        }\r\n    }\r\n\r\n    static getItem(response, def) {\r\n        try {\r\n            return response.data.items.item || def;\r\n        } catch (e) {\r\n            return def;\r\n        }\r\n    }\r\n\r\n    static isNotFound(response) {\r\n        const info = Service.getInfo(response, [])[0];\r\n        return (info && info.id === 'NotFoundException');\r\n    }\r\n\r\n    static isValidUrl(url) {\r\n        const pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.?)+[a-z]{2,}|' + // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n\r\n        return pattern.test(url);\r\n    }\r\n\r\n    static toQueryString(data, prefix) {\r\n        const query = [];\r\n\r\n        const has = Object.prototype.hasOwnProperty;\r\n\r\n        Object.keys(data).forEach((key) => {\r\n            if (has.call(data, key)) {\r\n                const k = prefix ? `${prefix}[${key}]` : key;\r\n                let v = data[key];\r\n                v = (v instanceof Date) ? v.toISOString() : v;\r\n                query.push((v !== null && typeof v === 'object') ?\r\n                    Service.toQueryString(v, k) :\r\n                    `${encodeURIComponent(k)}=${encodeURIComponent(v)}`);\r\n            }\r\n        });\r\n\r\n        return query.join('&').replace(/%5B[0-9]+%5D=/g, '=');\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * License entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing API:\r\n *\r\n * Unique number (across all products/licensees of a vendor) that identifies the license. Vendor can\r\n * assign this number when creating a license or let NetLicensing generate one. Read-only after corresponding creation\r\n * transaction status is set to closed.\r\n * @property string number\r\n *\r\n * Name for the licensed item. Set from license template on creation, if not specified explicitly.\r\n * @property string name\r\n *\r\n * If set to false, the license is disabled. License can be re-enabled, but as long as it is disabled,\r\n * the license is excluded from the validation process.\r\n * @property boolean active\r\n *\r\n * price for the license. If >0, it must always be accompanied by the currency specification. Read-only,\r\n * set from license template on creation.\r\n * @property float price\r\n *\r\n * specifies currency for the license price. Check data types to discover which currencies are\r\n * supported. Read-only, set from license template on creation.\r\n * @property string currency\r\n *\r\n * If set to true, this license is not shown in NetLicensing Shop as purchased license. Set from license\r\n * template on creation, if not specified explicitly.\r\n * @property boolean $hidden\r\n *\r\n * @property string startDate\r\n *\r\n * Arbitrary additional user properties of string type may be associated with each license. The name of user property\r\n * must not be equal to any of the fixed property names listed above and must be none of id, deleted, licenseeNumber,\r\n * licenseTemplateNumber.\r\n */\r\nexport default class License extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                name: 'string',\r\n                price: 'float',\r\n                hidden: 'boolean',\r\n                parentfeature: 'string',\r\n                timeVolume: 'int',\r\n                startDate: 'date',\r\n                inUse: 'boolean',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['inUse', 'currency', 'price'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines([\r\n            'number',\r\n            'active',\r\n            'name',\r\n            'hidden',\r\n            'parentfeature',\r\n            'timeVolume',\r\n            'startDate',\r\n            'inUse',\r\n            'currency',\r\n            'price',\r\n        ]);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setHidden(hidden) {\r\n        return this.setProperty('hidden', hidden);\r\n    }\r\n\r\n    getHidden(def) {\r\n        return this.getProperty('hidden', def);\r\n    }\r\n\r\n    setParentfeature(parentfeature) {\r\n        return this.setProperty('parentfeature', parentfeature);\r\n    }\r\n\r\n    getParentfeature(def) {\r\n        return this.getProperty('parentfeature', def);\r\n    }\r\n\r\n    setTimeVolume(timeVolume) {\r\n        return this.setProperty('timeVolume', timeVolume);\r\n    }\r\n\r\n    getTimeVolume(def) {\r\n        return this.getProperty('timeVolume', def);\r\n    }\r\n\r\n    setStartDate(startDate) {\r\n        return this.setProperty('startDate', startDate);\r\n    }\r\n\r\n    getStartDate(def) {\r\n        return this.getProperty('startDate', def);\r\n    }\r\n\r\n    getInUse(def) {\r\n        return this.getProperty('inUse', def);\r\n    }\r\n\r\n    getPrice(def) {\r\n        return this.getProperty('price', def);\r\n    }\r\n\r\n    getCurrency(def) {\r\n        return this.getProperty('currency', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\nimport LicenseTransactionJoin from './LicenseTransactionJoin';\r\nimport License from './License';\r\n\r\n/**\r\n * Transaction entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing API:\r\n *\r\n * Unique number (across all products of a vendor) that identifies the transaction. This number is\r\n * always generated by NetLicensing.\r\n * @property string number\r\n *\r\n * always true for transactions\r\n * @property boolean active\r\n *\r\n * Status of transaction. \"CANCELLED\", \"CLOSED\", \"PENDING\".\r\n * @property string status\r\n *\r\n * \"SHOP\". AUTO transaction for internal use only.\r\n * @property string source\r\n *\r\n * grand total for SHOP transaction (see source).\r\n * @property float grandTotal\r\n *\r\n * discount for SHOP transaction (see source).\r\n * @property float discount\r\n *\r\n * specifies currency for money fields (grandTotal and discount). Check data types to discover which\r\n * @property string currency\r\n *\r\n * Date created. Optional.\r\n * @property string dateCreated\r\n *\r\n * Date closed. Optional.\r\n * @property string dateClosed\r\n *\r\n * @constructor\r\n */\r\nexport default class Transaction extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                name: 'string',\r\n                status: 'string',\r\n                source: 'string',\r\n                grandTotal: 'float',\r\n                discount: 'float',\r\n                currency: 'string',\r\n                dateCreated: 'date',\r\n                dateClosed: 'date',\r\n                active: 'boolean',\r\n                paymentMethod: 'string',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['active'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines([\r\n            'number',\r\n            'name',\r\n            'status',\r\n            'source',\r\n            'grandTotal',\r\n            'discount',\r\n            'currency',\r\n            'dateCreated',\r\n            'dateClosed',\r\n            'paymentMethod',\r\n            'licenseTransactionJoins',\r\n        ]);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setStatus(status) {\r\n        return this.setProperty('status', status);\r\n    }\r\n\r\n    getStatus(def) {\r\n        return this.getProperty('status', def);\r\n    }\r\n\r\n    setSource(source) {\r\n        return this.setProperty('source', source);\r\n    }\r\n\r\n    getSource(def) {\r\n        return this.getProperty('source', def);\r\n    }\r\n\r\n    setGrandTotal(grandTotal) {\r\n        return this.setProperty('grandTotal', grandTotal);\r\n    }\r\n\r\n    getGrandTotal(def) {\r\n        return this.getProperty('grandTotal', def);\r\n    }\r\n\r\n    setDiscount(discount) {\r\n        return this.setProperty('discount', discount);\r\n    }\r\n\r\n    getDiscount(def) {\r\n        return this.getProperty('discount', def);\r\n    }\r\n\r\n    setCurrency(currency) {\r\n        return this.setProperty('currency', currency);\r\n    }\r\n\r\n    getCurrency(def) {\r\n        return this.getProperty('currency', def);\r\n    }\r\n\r\n    setDateCreated(dateCreated) {\r\n        return this.setProperty('dateCreated', dateCreated);\r\n    }\r\n\r\n    getDateCreated(def) {\r\n        return this.getProperty('dateCreated', def);\r\n    }\r\n\r\n    setDateClosed(dateClosed) {\r\n        return this.setProperty('dateClosed', dateClosed);\r\n    }\r\n\r\n    getDateClosed(def) {\r\n        return this.getProperty('dateClosed', def);\r\n    }\r\n\r\n    setPaymentMethod(paymentMethod) {\r\n        return this.setProperty('paymentMethod', paymentMethod);\r\n    }\r\n\r\n    getPaymentMethod(def) {\r\n        return this.getProperty('paymentMethod', def);\r\n    }\r\n\r\n    setActive() {\r\n        return this.setProperty('active', true);\r\n    }\r\n\r\n    getLicenseTransactionJoins(def) {\r\n        return this.getProperty('licenseTransactionJoins', def);\r\n    }\r\n\r\n    setLicenseTransactionJoins(licenseTransactionJoins) {\r\n        return this.setProperty('licenseTransactionJoins', licenseTransactionJoins);\r\n    }\r\n\r\n    setListLicenseTransactionJoin(properties) {\r\n        if (!properties) return;\r\n\r\n        const licenseTransactionJoins = this.getProperty('licenseTransactionJoins', []);\r\n        const licenseTransactionJoin = new LicenseTransactionJoin();\r\n\r\n        properties.forEach((property) => {\r\n            if (property.name === 'licenseNumber') {\r\n                licenseTransactionJoin.setLicense(new License({ number: property.value }));\r\n            }\r\n\r\n            if (property.name === 'transactionNumber') {\r\n                licenseTransactionJoin.setTransaction(new Transaction({ number: property.value }));\r\n            }\r\n        });\r\n\r\n        licenseTransactionJoins.push(licenseTransactionJoin);\r\n        this.setProperty('licenseTransactionJoins', licenseTransactionJoins);\r\n    }\r\n}\r\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * Country entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing  API:\r\n *\r\n * @property code - Unique code of country.\r\n *\r\n * @property name - Unique name of country\r\n *\r\n * @property vatPercent - Country vat.\r\n *\r\n * @property isEu - is country in EU.\r\n */\r\nexport default class Country extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                code: 'string',\r\n                name: 'string',\r\n                vatPercent: 'int',\r\n                isEu: 'boolean',\r\n            },\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines(['code', 'name', 'vatPercent', 'isEu']);\r\n    }\r\n\r\n    setCode(code) {\r\n        return this.setProperty('code', code);\r\n    }\r\n\r\n    getCode(def) {\r\n        return this.getProperty('code', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setVatPercent(vat) {\r\n        return this.setProperty('vatPercent', vat);\r\n    }\r\n\r\n    getVatPercent(def) {\r\n        return this.getProperty('vatPercent', def);\r\n    }\r\n\r\n    setIsEu(isEu) {\r\n        return this.setProperty('isEu', isEu);\r\n    }\r\n\r\n    getIsEu(def) {\r\n        return this.getProperty('isEu', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\nimport Transaction from './Transaction';\r\nimport License from './License';\r\n\r\n// const\r\n\r\nexport default class LicenseTransactionJoin {\r\n    constructor(transaction, license) {\r\n        this.transaction = transaction;\r\n        this.license = license;\r\n    }\r\n\r\n    setTransaction(transaction) {\r\n        if (!(transaction instanceof Transaction)) {\r\n            throw new TypeError('context must be an instance of Transaction');\r\n        }\r\n\r\n        this.transaction = transaction;\r\n        return this;\r\n    }\r\n\r\n    getTransaction(def) {\r\n        return this.transaction || def;\r\n    }\r\n\r\n    setLicense(license) {\r\n        if (!(license instanceof License)) {\r\n            throw new TypeError('context must be an instance of License');\r\n        }\r\n        this.license = license;\r\n        return this;\r\n    }\r\n\r\n    getLicense(def) {\r\n        return this.license || def;\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * Product module entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing API:\r\n *\r\n * Unique number\r\n * @property string number\r\n *\r\n * If set to false, the token is disabled.\r\n * @property boolean active\r\n *\r\n * Expiration Time\r\n * @property string expirationTime\r\n *\r\n * @property string vendorNumber\r\n *\r\n * Token type to be generated.\r\n * DEFAULT - default one-time token (will be expired after first request)\r\n * SHOP - shop token is used to redirect customer to the netlicensingShop(licenseeNumber is mandatory)\r\n * APIKEY - APIKey-token\r\n * @property string tokenType\r\n *\r\n * @property string licenseeNumber\r\n *\r\n * @constructor\r\n */\r\nexport default class Token extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                expirationTime: 'date',\r\n                vendorNumber: 'string',\r\n                tokenType: 'string',\r\n                licenseeNumber: 'string',\r\n                successURL: 'string',\r\n                successURLTitle: 'string',\r\n                cancelURL: 'string',\r\n                cancelURLTitle: 'string',\r\n                shopURL: 'string',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['number', 'shopURL'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines([\r\n            'number',\r\n            'active',\r\n            'expirationTime',\r\n            'vendorNumber',\r\n            'tokenType',\r\n            'licenseeNumber',\r\n            'successURL',\r\n            'successURLTitle',\r\n            'cancelURL',\r\n            'cancelURLTitle',\r\n            'shopURL',\r\n        ]);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setExpirationTime(expirationTime) {\r\n        return this.setProperty('expirationTime', expirationTime);\r\n    }\r\n\r\n    getExpirationTime(def) {\r\n        return this.getProperty('expirationTime', def);\r\n    }\r\n\r\n    setVendorNumber(vendorNumber) {\r\n        return this.setProperty('vendorNumber', vendorNumber);\r\n    }\r\n\r\n    getVendorNumber(def) {\r\n        return this.getProperty('vendorNumber', def);\r\n    }\r\n\r\n    setTokenType(tokenType) {\r\n        return this.setProperty('tokenType', tokenType);\r\n    }\r\n\r\n    getTokenType(def) {\r\n        return this.getProperty('tokenType', def);\r\n    }\r\n\r\n    setLicenseeNumber(licenseeNumber) {\r\n        return this.setProperty('licenseeNumber', licenseeNumber);\r\n    }\r\n\r\n    getLicenseeNumber(def) {\r\n        return this.getProperty('licenseeNumber', def);\r\n    }\r\n\r\n    setSuccessURL(successURL) {\r\n        return this.setProperty('successURL', successURL);\r\n    }\r\n\r\n    getSuccessURL(def) {\r\n        return this.getProperty('successURL', def);\r\n    }\r\n\r\n    setSuccessURLTitle(successURLTitle) {\r\n        return this.setProperty('successURLTitle', successURLTitle);\r\n    }\r\n\r\n    getSuccessURLTitle(def) {\r\n        return this.getProperty('successURLTitle', def);\r\n    }\r\n\r\n    setCancelURL(cancelURL) {\r\n        return this.setProperty('cancelURL', cancelURL);\r\n    }\r\n\r\n    getCancelURL(def) {\r\n        return this.getProperty('cancelURL', def);\r\n    }\r\n\r\n    setCancelURLTitle(cancelURLTitle) {\r\n        return this.setProperty('cancelURLTitle', cancelURLTitle);\r\n    }\r\n\r\n    getCancelURLTitle(def) {\r\n        return this.getProperty('cancelURLTitle', def);\r\n    }\r\n\r\n    getShopURL(def) {\r\n        return this.getProperty('shopURL', def);\r\n    }\r\n\r\n    setRole(role) {\r\n        return this.setProperty('role', role);\r\n    }\r\n\r\n    getRole(def) {\r\n        return this.getProperty('role', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\nimport BaseEntity from './BaseEntity';\r\n\r\nexport default class ProductDiscount extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                totalPrice: 'float',\r\n                currency: 'string',\r\n                amountFix: 'float',\r\n                amountPercent: 'int',\r\n            },\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines(['totalPrice', 'currency', 'amountFix', 'amountPercent']);\r\n    }\r\n\r\n    setTotalPrice(totalPrice) {\r\n        return this.setProperty('totalPrice', totalPrice);\r\n    }\r\n\r\n    getTotalPrice(def) {\r\n        return this.getProperty('totalPrice', def);\r\n    }\r\n\r\n    setCurrency(currency) {\r\n        return this.setProperty('currency', currency);\r\n    }\r\n\r\n    getCurrency(def) {\r\n        return this.getProperty('currency', def);\r\n    }\r\n\r\n    setAmountFix(amountFix) {\r\n        return this.setProperty('amountFix', amountFix).removeProperty('amountPercent');\r\n    }\r\n\r\n    getAmountFix(def) {\r\n        return this.getProperty('amountFix', def);\r\n    }\r\n\r\n    setAmountPercent(amountPercent) {\r\n        return this.setProperty('amountPercent', amountPercent).removeProperty('amountFix');\r\n    }\r\n\r\n    getAmountPercent(def) {\r\n        return this.getProperty('amountPercent', def);\r\n    }\r\n\r\n    toString() {\r\n        const totalPrice = this.getTotalPrice();\r\n        const currency = this.getCurrency();\r\n        let amount = 0;\r\n\r\n        if (this.getAmountFix(null)) amount = this.getAmountFix();\r\n        if (this.getAmountPercent(null)) amount = `${this.getAmountPercent()}%`;\r\n\r\n        return `${totalPrice};${currency};${amount}`;\r\n    }\r\n}\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\nimport ProductDiscount from './ProductDiscount';\r\n\r\n/**\r\n * The discounts map\r\n * @type {{}}\r\n * @private\r\n */\r\nconst discountsMap = new WeakMap();\r\n\r\n/**\r\n * An identifier that show if discounts was touched\r\n * @type {{}}\r\n * @private\r\n */\r\nconst discountsTouched = new WeakMap();\r\n\r\n/**\r\n * NetLicensing  Product entity.\r\n *\r\n * Properties visible via NetLicensing  API:\r\n *\r\n * Unique number that identifies the product. Vendor can assign this number when creating a product or\r\n * let NetLicensing  generate one. Read-only after creation of the first licensee for the product.\r\n * @property string number\r\n *\r\n * If set to false, the product is disabled. No new licensees can be registered for the product,\r\n * existing licensees can not obtain new licenses.\r\n * @property boolean active\r\n *\r\n * Product name. Together with the version identifies the product for the end customer.\r\n * @property string name\r\n *\r\n * Product version. Convenience parameter, additional to the product name.\r\n * @property float version\r\n *\r\n * If set to 'true', non-existing licensees will be created at first validation attempt.\r\n * @property boolean licenseeAutoCreate\r\n *\r\n * Licensee secret mode for product.Supported types: \"DISABLED\", \"PREDEFINED\", \"CLIENT\"\r\n * @property boolean licenseeSecretMode\r\n *\r\n * Product description. Optional.\r\n * @property string description\r\n *\r\n * Licensing information. Optional.\r\n * @property string licensingInfo\r\n *\r\n * @property boolean inUse\r\n *\r\n * Arbitrary additional user properties of string type may be associated with each product. The name of user property\r\n * must not be equal to any of the fixed property names listed above and must be none of id, deleted.\r\n *\r\n * @constructor\r\n */\r\nexport default class Product extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                name: 'string',\r\n                version: 'string',\r\n                description: 'string',\r\n                licensingInfo: 'string',\r\n                licenseeAutoCreate: 'boolean',\r\n                licenseeSecretMode: 'string',\r\n                inUse: 'boolean',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['inUse'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines([\r\n            'number',\r\n            'active',\r\n            'name',\r\n            'version',\r\n            'description',\r\n            'licensingInfo',\r\n            'licenseeAutoCreate',\r\n            'licenseeSecretMode',\r\n            'inUse',\r\n        ]);\r\n\r\n        discountsMap.set(this, []);\r\n        discountsTouched.set(this, false);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setVersion(version) {\r\n        return this.setProperty('version', version);\r\n    }\r\n\r\n    getVersion(def) {\r\n        return this.getProperty('version', def);\r\n    }\r\n\r\n    setLicenseeAutoCreate(licenseeAutoCreate) {\r\n        return this.setProperty('licenseeAutoCreate', licenseeAutoCreate);\r\n    }\r\n\r\n    getLicenseeAutoCreate(def) {\r\n        return this.getProperty('licenseeAutoCreate', def);\r\n    }\r\n\r\n    setLicenseeSecretMode(licenseeSecretMode) {\r\n        return this.setProperty('licenseeSecretMode', licenseeSecretMode);\r\n    }\r\n\r\n    getLicenseeSecretMode(def) {\r\n        return this.getProperty('licenseeSecretMode', def);\r\n    }\r\n\r\n    setDescription(description) {\r\n        return this.setProperty('description', description);\r\n    }\r\n\r\n    getDescription(def) {\r\n        return this.getProperty('description', def);\r\n    }\r\n\r\n    setLicensingInfo(licensingInfo) {\r\n        return this.setProperty('licensingInfo', licensingInfo);\r\n    }\r\n\r\n    getLicensingInfo(def) {\r\n        return this.getProperty('licensingInfo', def);\r\n    }\r\n\r\n    getInUse(def) {\r\n        return this.getProperty('inUse', def);\r\n    }\r\n\r\n    /**\r\n     * Add discount to product\r\n     *\r\n     * @param discount NetLicensing.ProductDiscount\r\n     * @returns {NetLicensing.Product}\r\n     */\r\n    addDiscount(discount) {\r\n        if (!(discount instanceof ProductDiscount)) {\r\n            throw new TypeError('discount must be an instance of ProductDiscount');\r\n        }\r\n\r\n        const discounts = discountsMap.get(this);\r\n        discounts.push(discount);\r\n        discountsMap.set(this, discounts);\r\n        discountsTouched.set(this, true);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set discounts to product\r\n     * @param discounts\r\n     */\r\n    setProductDiscounts(discounts) {\r\n        discountsMap.set(this, []);\r\n        discountsTouched.set(this, true);\r\n\r\n        if (!discounts) return this;\r\n\r\n        if (Array.isArray(discounts)) {\r\n            discounts.forEach((discount) => {\r\n                this.addDiscount(discount);\r\n            });\r\n\r\n            return this;\r\n        }\r\n\r\n        this.addDiscount(discounts);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get array of objects discounts\r\n     * @returns {Array}\r\n     */\r\n    getProductDiscounts() {\r\n        return Object.assign([], discountsMap.get(this));\r\n    }\r\n\r\n    setListDiscount(properties) {\r\n        if (!properties) return;\r\n\r\n        const discount = new ProductDiscount();\r\n        properties.forEach((property) => {\r\n            discount.setProperty(property.name, property.value);\r\n        });\r\n        this.addDiscount(discount);\r\n    }\r\n\r\n    asPropertiesMap() {\r\n        const propertiesMap = super.asPropertiesMap();\r\n\r\n        if (discountsMap.get(this).length) {\r\n            propertiesMap.discount = discountsMap.get(this).map(discount => discount.toString());\r\n        }\r\n\r\n        if (!propertiesMap.discount && discountsTouched.get(this)) {\r\n            propertiesMap.discount = '';\r\n        }\r\n\r\n        return propertiesMap;\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * Product module entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing API:\r\n *\r\n * Unique number (across all products of a vendor) that identifies the product module. Vendor can assign\r\n * this number when creating a product module or let NetLicensing generate one. Read-only after creation of the first\r\n * licensee for the product.\r\n * @property string number\r\n *\r\n * If set to false, the product module is disabled. Licensees can not obtain any new licenses for this\r\n * product module.\r\n * @property boolean active\r\n *\r\n * Product module name that is visible to the end customers in NetLicensing Shop.\r\n * @property string name\r\n *\r\n * Licensing model applied to this product module. Defines what license templates can be\r\n * configured for the product module and how licenses for this product module are processed during validation.\r\n * @property string licensingModel\r\n *\r\n * Maximum checkout validity (days). Mandatory for 'Floating' licensing model.\r\n * @property integer maxCheckoutValidity\r\n *\r\n * Remaining time volume for yellow level. Mandatory for 'Rental' licensing model.\r\n * @property integer yellowThreshold\r\n *\r\n * Remaining time volume for red level. Mandatory for 'Rental' licensing model.\r\n * @property integer redThreshold\r\n *\r\n * License template. Mandatory for 'Try & Buy' licensing model. Supported types: \"TIMEVOLUME\", \"FEATURE\".\r\n * @property string licenseTemplate\r\n *\r\n * @constructor\r\n */\r\nexport default class ProductModule extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                name: 'string',\r\n                licensingModel: 'string',\r\n                maxCheckoutValidity: 'int',\r\n                yellowThreshold: 'int',\r\n                redThreshold: 'int',\r\n                licenseTemplate: 'string',\r\n                inUse: 'boolean',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['inUse'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines([\r\n            'number',\r\n            'active',\r\n            'name',\r\n            'licensingModel',\r\n            'maxCheckoutValidity',\r\n            'yellowThreshold',\r\n            'redThreshold',\r\n            'licenseTemplate',\r\n            'inUse',\r\n        ]);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setLicensingModel(licensingModel) {\r\n        return this.setProperty('licensingModel', licensingModel);\r\n    }\r\n\r\n    getLicensingModel(def) {\r\n        return this.getProperty('licensingModel', def);\r\n    }\r\n\r\n    setMaxCheckoutValidity(maxCheckoutValidity) {\r\n        return this.setProperty('maxCheckoutValidity', maxCheckoutValidity);\r\n    }\r\n\r\n    getMaxCheckoutValidity(def) {\r\n        return this.getProperty('maxCheckoutValidity', def);\r\n    }\r\n\r\n    setYellowThreshold(yellowThreshold) {\r\n        return this.setProperty('yellowThreshold', yellowThreshold);\r\n    }\r\n\r\n    getYellowThreshold(def) {\r\n        return this.getProperty('yellowThreshold', def);\r\n    }\r\n\r\n    setRedThreshold(redThreshold) {\r\n        return this.setProperty('redThreshold', redThreshold);\r\n    }\r\n\r\n    getRedThreshold(def) {\r\n        return this.getProperty('redThreshold', def);\r\n    }\r\n\r\n    setLicenseTemplate(licenseTemplate) {\r\n        return this.setProperty('licenseTemplate', licenseTemplate);\r\n    }\r\n\r\n    getLicenseTemplate(def) {\r\n        return this.getProperty('licenseTemplate', def);\r\n    }\r\n\r\n    getInUse(def) {\r\n        return this.getProperty('inUse', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * PaymentMethod entity used internally by NetLicensing.\r\n *\r\n * @property string number\r\n * @property boolean active\r\n *\r\n * @constructor\r\n */\r\nexport default class PaymentMethod extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                'paypal.subject': 'string',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['inUse'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines(['number', 'active', 'paypal.subject']);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setPaypalSubject(paypalSubject) {\r\n        return this.setProperty('paypal.subject', paypalSubject);\r\n    }\r\n\r\n    getPaypalSubject(def) {\r\n        return this.getProperty('paypal.subject', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * License template entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing  API:\r\n *\r\n * Unique number (across all products of a vendor) that identifies the license template. Vendor can\r\n * assign this number when creating a license template or let NetLicensing  generate one.\r\n * Read-only after creation of the first license from this license template.\r\n * @property string number\r\n *\r\n * If set to false, the license template is disabled. Licensee can not obtain any new licenses off this\r\n * license template.\r\n * @property boolean active\r\n *\r\n * Name for the licensed item.\r\n * @property string name\r\n *\r\n * Type of licenses created from this license template. Supported types: \"FEATURE\", \"TIMEVOLUME\",\r\n * \"FLOATING\", \"QUANTITY\"\r\n * @property string licenseType\r\n *\r\n * Price for the license. If >0, it must always be accompanied by the currency specification.\r\n * @property double price\r\n *\r\n * Specifies currency for the license price. Check data types to discover which currencies are\r\n * supported.\r\n * @property string currency\r\n *\r\n * If set to true, every new licensee automatically gets one license out of this license template on\r\n * creation. Automatic licenses must have their price set to 0.\r\n * @property boolean automatic\r\n *\r\n * If set to true, this license template is not shown in NetLicensing  Shop as offered for purchase.\r\n * @property boolean hidden\r\n *\r\n * If set to true, licenses from this license template are not visible to the end customer, but\r\n * participate in validation.\r\n * @property boolean hideLicenses\r\n *\r\n * Mandatory for 'TIMEVOLUME' license type.\r\n * @property integer timeVolume\r\n *\r\n * Time volume period for 'TIMEVOLUME' license type. Supported types: \"DAY\", \"WEEK\", \"MONTH\", \"YEAR\"\r\n * @property integer timeVolumePeriod\r\n *\r\n * Mandatory for 'FLOATING' license type.\r\n * @property integer maxSessions\r\n *\r\n * Mandatory for 'QUANTITY' license type.\r\n * @property integer quantity\r\n *\r\n * @constructor\r\n */\r\nexport default class LicenseTemplate extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                name: 'string',\r\n                licenseType: 'string',\r\n                price: 'double',\r\n                currency: 'string',\r\n                automatic: 'boolean',\r\n                hidden: 'boolean',\r\n                hideLicenses: 'boolean',\r\n                timeVolume: 'int',\r\n                timeVolumePeriod: 'string',\r\n                maxSessions: 'int',\r\n                quantity: 'int',\r\n                inUse: 'boolean',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['inUse'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines([\r\n            'number',\r\n            'active',\r\n            'name',\r\n            'licenseType',\r\n            'price',\r\n            'currency',\r\n            'automatic',\r\n            'hidden',\r\n            'hideLicenses',\r\n            'timeVolume',\r\n            'timeVolumePeriod',\r\n            'maxSessions',\r\n            'quantity',\r\n            'inUse',\r\n        ]);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setLicenseType(licenseType) {\r\n        return this.setProperty('licenseType', licenseType);\r\n    }\r\n\r\n    getLicenseType(def) {\r\n        return this.getProperty('licenseType', def);\r\n    }\r\n\r\n    setPrice(price) {\r\n        return this.setProperty('price', price);\r\n    }\r\n\r\n    getPrice(def) {\r\n        return this.getProperty('price', def);\r\n    }\r\n\r\n    setCurrency(currency) {\r\n        return this.setProperty('currency', currency);\r\n    }\r\n\r\n    getCurrency(def) {\r\n        return this.getProperty('currency', def);\r\n    }\r\n\r\n    setAutomatic(automatic) {\r\n        return this.setProperty('automatic', automatic);\r\n    }\r\n\r\n    getAutomatic(def) {\r\n        return this.getProperty('automatic', def);\r\n    }\r\n\r\n    setHidden(hidden) {\r\n        return this.setProperty('hidden', hidden);\r\n    }\r\n\r\n    getHidden(def) {\r\n        return this.getProperty('hidden', def);\r\n    }\r\n\r\n    setHideLicenses(hideLicenses) {\r\n        return this.setProperty('hideLicenses', hideLicenses);\r\n    }\r\n\r\n    getHideLicenses(def) {\r\n        return this.getProperty('hideLicenses', def);\r\n    }\r\n\r\n    setTimeVolume(timeVolume) {\r\n        return this.setProperty('timeVolume', timeVolume);\r\n    }\r\n\r\n    getTimeVolume(def) {\r\n        return this.getProperty('timeVolume', def);\r\n    }\r\n\r\n    setTimeVolumePeriod(timeVolumePeriod) {\r\n        return this.setProperty('timeVolumePeriod', timeVolumePeriod);\r\n    }\r\n\r\n    getTimeVolumePeriod(def) {\r\n        return this.getProperty('timeVolumePeriod', def);\r\n    }\r\n\r\n    setMaxSessions(maxSessions) {\r\n        return this.setProperty('maxSessions', maxSessions);\r\n    }\r\n\r\n    getMaxSessions(def) {\r\n        return this.getProperty('maxSessions', def);\r\n    }\r\n\r\n    setQuantity(quantity) {\r\n        return this.setProperty('quantity', quantity);\r\n    }\r\n\r\n    getQuantity(def) {\r\n        return this.getProperty('quantity', def);\r\n    }\r\n\r\n    getInUse(def) {\r\n        return this.getProperty('inUse', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport CheckUtils from '../util/CheckUtils';\r\n\r\n/**\r\n * Validation result map\r\n * @type {WeakMap<Object, any>}\r\n */\r\nconst vr = new WeakMap();\r\n\r\nexport default class ValidationResults {\r\n    constructor() {\r\n        vr.set(this, { validators: {} });\r\n    }\r\n\r\n    getValidators() {\r\n        return Object.assign({}, vr.get(this).validators);\r\n    }\r\n\r\n    setProductModuleValidation(productModuleNumber, productModuleValidation) {\r\n        if (!CheckUtils.isValid(productModuleNumber) || typeof productModuleNumber === 'object') {\r\n            throw new TypeError(`Bad productModuleNumber:${productModuleNumber}`);\r\n        }\r\n\r\n        vr.get(this).validators[productModuleNumber] = productModuleValidation;\r\n\r\n        return this;\r\n    }\r\n\r\n    getProductModuleValidation(productModuleNumber) {\r\n        if (!CheckUtils.isValid(productModuleNumber) || typeof productModuleNumber === 'object') {\r\n            throw new TypeError(`Bad productModuleNumber:${productModuleNumber}`);\r\n        }\r\n\r\n        return vr.get(this).validators[productModuleNumber];\r\n    }\r\n\r\n    setTtl(ttl) {\r\n        if (!CheckUtils.isValid(ttl) || typeof ttl === 'object') {\r\n            throw new TypeError(`Bad ttl:${ttl}`);\r\n        }\r\n        vr.get(this).ttl = new Date(String(ttl));\r\n\r\n        return this;\r\n    }\r\n\r\n    getTtl() {\r\n        return (vr.get(this).ttl) ? new Date(vr.get(this).ttl) : undefined;\r\n    }\r\n\r\n    toString() {\r\n        let data = 'ValidationResult [';\r\n\r\n        const validators = this.getValidators();\r\n        const has = Object.prototype.hasOwnProperty;\r\n\r\n        Object.keys(validators).forEach((productModuleNumber) => {\r\n            data += `ProductModule<${productModuleNumber}>`;\r\n            if (has.call(validators, productModuleNumber)) {\r\n                data += JSON.stringify(validators[productModuleNumber]);\r\n            }\r\n        });\r\n\r\n        data += ']';\r\n\r\n        return data;\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\n/**\r\n * Validation parameters map\r\n *\r\n * @type {WeakMap<Object, any>}\r\n */\r\nconst vpMap = new WeakMap();\r\n\r\nexport default class ValidationParameters {\r\n    constructor() {\r\n        vpMap.set(this, { parameters: {} });\r\n    }\r\n\r\n    /**\r\n     * Sets the target product\r\n     *\r\n     * optional productNumber, must be provided in case licensee auto-create is enabled\r\n     * @param productNumber\r\n     * @returns {ValidationParameters}\r\n     */\r\n    setProductNumber(productNumber) {\r\n        vpMap.get(this).productNumber = productNumber;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get the target product\r\n     * @returns {*}\r\n     */\r\n    getProductNumber() {\r\n        return vpMap.get(this).productNumber;\r\n    }\r\n\r\n    /**\r\n     * Sets the name for the new licensee\r\n     *\r\n     * optional human-readable licensee name in case licensee will be auto-created. This parameter must not\r\n     * be the name, but can be used to store any other useful string information with new licensees, up to\r\n     * 1000 characters.\r\n     * @param licenseeName\r\n     * @returns {NetLicensing.ValidationParameters}\r\n     */\r\n    setLicenseeName(licenseeName) {\r\n        vpMap.get(this).licenseeName = licenseeName;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get the licensee name\r\n     * @returns {*}\r\n     */\r\n    getLicenseeName() {\r\n        return vpMap.get(this).licenseeName;\r\n    }\r\n\r\n    /**\r\n     * Sets the licensee secret\r\n     *\r\n     * licensee secret stored on the client side. Refer to Licensee Secret documentation for details.\r\n     * @param licenseeSecret\r\n     * @returns {ValidationParameters}\r\n     */\r\n    setLicenseeSecret(licenseeSecret) {\r\n        vpMap.get(this).licenseeSecret = licenseeSecret;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get the licensee secret\r\n     * @returns {*}\r\n     */\r\n    getLicenseeSecret() {\r\n        return vpMap.get(this).licenseeSecret;\r\n    }\r\n\r\n    /**\r\n     * Get validation parameters\r\n     * @returns {*}\r\n     */\r\n    getParameters() {\r\n        return Object.assign({}, vpMap.get(this).parameters);\r\n    }\r\n\r\n    getProductModuleValidationParameters(productModuleNumber) {\r\n        return Object.assign({}, vpMap.get(this).parameters[productModuleNumber]);\r\n    }\r\n\r\n    setProductModuleValidationParameters(productModuleNumber, productModuleParameters) {\r\n        const { parameters } = vpMap.get(this);\r\n\r\n        if (parameters[productModuleNumber] === undefined || !Object.keys(parameters[productModuleNumber]).length) {\r\n            parameters[productModuleNumber] = {};\r\n        }\r\n\r\n        parameters[productModuleNumber] = Object.assign(parameters[productModuleNumber], productModuleParameters);\r\n\r\n        return this;\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * Licensee entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing  API:\r\n *\r\n * Unique number (across all products of a vendor) that identifies the licensee. Vendor can assign this\r\n * number when creating a licensee or let NetLicensing  generate one. Read-only after creation of the first license for\r\n * the licensee.\r\n * @property string number\r\n *\r\n * Licensee name.\r\n * @property string name\r\n *\r\n * If set to false, the licensee is disabled. Licensee can not obtain new licenses, and validation is\r\n * disabled (tbd).\r\n * @property boolean active\r\n *\r\n * Licensee Secret for licensee\r\n * @property string licenseeSecret\r\n *\r\n * Mark licensee for transfer.\r\n * @property boolean markedForTransfer\r\n *\r\n * Arbitrary additional user properties of string type may be associated with each licensee. The name of user property\r\n * must not be equal to any of the fixed property names listed above and must be none of id, deleted, productNumber\r\n *\r\n * @constructor\r\n */\r\nexport default class Licensee extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                name: 'string',\r\n                licenseeSecret: 'string',\r\n                markedForTransfer: 'boolean',\r\n                inUse: 'boolean',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['inUse'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines(['number', 'active', 'name', 'licenseeSecret', 'markedForTransfer', 'inUse']);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setLicenseeSecret(licenseeSecret) {\r\n        return this.setProperty('licenseeSecret', licenseeSecret);\r\n    }\r\n\r\n    getLicenseeSecret(def) {\r\n        return this.getProperty('licenseeSecret', def);\r\n    }\r\n\r\n    setMarkedForTransfer(markedForTransfer) {\r\n        return this.setProperty('markedForTransfer', markedForTransfer);\r\n    }\r\n\r\n    getMarkedForTransfer(def) {\r\n        return this.getProperty('markedForTransfer', def);\r\n    }\r\n\r\n    getInUse(def) {\r\n        return this.getProperty('inUse', def);\r\n    }\r\n}\r\n","export default class NlicError extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        Error.captureStackTrace(this, NlicError);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\n// Cast an attribute to a native JS type.\r\nexport default (key, value) => {\r\n    switch (key.trim().toLowerCase()) {\r\n        case 'str':\r\n        case 'string':\r\n            return String(value);\r\n        case 'int':\r\n        case 'integer':\r\n            return parseInt(value, 10);\r\n        case 'float':\r\n        case 'double':\r\n            return parseFloat(value);\r\n        case 'bool':\r\n        case 'boolean':\r\n            switch (value) {\r\n                case 'true':\r\n                case 'TRUE':\r\n                    return true;\r\n                case 'false':\r\n                case 'FALSE':\r\n                    return false;\r\n                default:\r\n                    return Boolean(value);\r\n            }\r\n        case 'date':\r\n            return (value === 'now') ? 'now' : new Date(String(value));\r\n        default:\r\n            return value;\r\n    }\r\n};\r\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport Country from '../entities/Country';\r\nimport FilterUtils from '../util/FilterUtils';\r\n\r\n/**\r\n * JS representation of the Utility Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NetLicensing PUB/Utility+Services\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Returns all license types. See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Utility+Services#UtilityServices-LicenseTypeslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * array of available license types or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    listLicenseTypes(context) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .list(context, `${Constants.Utility.ENDPOINT_PATH}/licenseTypes`)\r\n            .then(items => items.map(item => item.property[0].value));\r\n    },\r\n\r\n    /**\r\n     * Returns all license models. See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Utility+Services#UtilityServices-LicensingModelslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * array of available license models or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    listLicensingModels(context) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .list(context, `${Constants.Utility.ENDPOINT_PATH}/licensingModels`)\r\n            .then(items => items.map(item => item.property[0].value));\r\n    },\r\n\r\n    /**\r\n     * Returns all countries.\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter\r\n     *\r\n     * collection of available countries or null/empty list if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    listCountries(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = typeof filter === 'string' ? filter : FilterUtils.encode(filter);\r\n        }\r\n\r\n        return Service\r\n            .list(context, `${Constants.Utility.ENDPOINT_PATH}/countries`, queryParams, Country);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport Transaction from '../entities/Transaction';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport FilterUtils from '../util/FilterUtils';\r\n\r\n/**\r\n * JS representation of the Transaction Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NetLicensing PUB/Transaction+Services\r\n *\r\n * Transaction is created each time change to  LicenseService licenses happens. For instance licenses are\r\n * obtained by a licensee, licenses disabled by vendor, licenses deleted, etc. Transaction is created no matter what\r\n * source has initiated the change to licenses: it can be either a direct purchase of licenses by a licensee via\r\n * NetLicensing Shop, or licenses can be given to a licensee by a vendor. Licenses can also be assigned implicitly by\r\n * NetLicensing if it is defined so by a license model (e.g. evaluation license may be given automatically). All these\r\n * events are reflected in transactions. Of all the transaction handling routines only read-only routines are exposed to\r\n * the public API, as transactions are only allowed to be created and modified by NetLicensing internally.\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new transaction object with given properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Transaction+Services#TransactionServices-Createtransaction\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * non-null properties will be taken for the new object, null properties will either stay null, or will\r\n     * be set to a default value, depending on property.\r\n     * @param transaction NetLicensing.Transaction\r\n     *\r\n     * return the newly created transaction object in promise\r\n     * @returns {Promise}\r\n     */\r\n    create(context, transaction) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(transaction instanceof Transaction)) {\r\n            throw new TypeError('transaction must be an instance of Transaction');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .post(context, Constants.Transaction.ENDPOINT_PATH, transaction.asPropertiesMap(), Transaction);\r\n    },\r\n\r\n    /**\r\n     * Gets transaction by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Transaction+Services#TransactionServices-Gettransaction\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the transaction number\r\n     * @param number string\r\n     *\r\n     * return the transaction in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .get(context, `${Constants.Transaction.ENDPOINT_PATH}/${number}`, {}, Transaction);\r\n    },\r\n\r\n    /**\r\n     * Returns all transactions of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Transaction+Services#TransactionServices-Transactionslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string\r\n     *\r\n     * array of transaction entities or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = typeof filter === 'string' ? filter : FilterUtils.encode(filter);\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.Transaction.ENDPOINT_PATH, queryParams, Transaction);\r\n    },\r\n\r\n    /**\r\n     * Updates transaction properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Transaction+Services#TransactionServices-Updatetransaction\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * transaction number\r\n     * @param number string\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param transaction NetLicensing.Transaction\r\n     *\r\n     * return updated transaction in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, transaction) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of NetLicensing.Context');\r\n        }\r\n\r\n        if (!(transaction instanceof Transaction)) {\r\n            throw new TypeError('transaction must be an instance of NetLicensing.Transaction');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const path = `${Constants.Transaction.ENDPOINT_PATH}/${number}`;\r\n\r\n        return Service\r\n            .post(context, path, transaction.asPropertiesMap(), Transaction);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport Token from '../entities/Token';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport FilterUtils from '../util/FilterUtils';\r\n\r\n/**\r\n * JS representation of the Token Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NetLicensing PUB/Token+Services\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new token.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Token+Services#TokenServices-Createtoken\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param token NetLicensing.Token\r\n     *\r\n     * return created token in promise\r\n     * @returns {Promise}\r\n     */\r\n    create(context, token) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(token instanceof Token)) {\r\n            throw new TypeError('token must be an instance of Token');\r\n        }\r\n\r\n        return Service\r\n            .post(context, Constants.Token.ENDPOINT_PATH, token.asPropertiesMap(), Token);\r\n    },\r\n\r\n    /**\r\n     * Gets token by its number..See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/conluence/display/NetLicensing PUB/Token+Services#TokenServices-Gettoken\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the token number\r\n     * @param number\r\n     *\r\n     * return the token in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of NetLicensing.Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        return Service\r\n            .get(context, `${Constants.Token.ENDPOINT_PATH}/${number}`, {}, Token);\r\n    },\r\n\r\n    /**\r\n     * Returns tokens of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Token+Services#TokenServices-Tokenslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * array of token entities or empty array if nothing found.\r\n     * @return array\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = typeof filter === 'string' ? filter : FilterUtils.encode(filter);\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.Token.ENDPOINT_PATH, queryParams, Token);\r\n    },\r\n\r\n    /**\r\n     * Delete token by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Token+Services#TokenServices-Deletetoken\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     *  the token number\r\n     * @param number string\r\n     *\r\n     * return boolean state of delete in promise\r\n     * @returns {Promise}\r\n     */\r\n    delete(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of NetLicensing.Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        return Service\r\n            .delete(context, `${Constants.Token.ENDPOINT_PATH}/${number}`);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Service from './Service';\r\nimport Context from '../vo/Context';\r\nimport Product from '../entities/Product';\r\nimport Constants from '../Constants';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport FilterUtils from '../util/FilterUtils';\r\n\r\n/**\r\n * JS representation of the Product Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new product with given properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services#ProductServices-Createproduct\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * non-null properties will be taken for the new object, null properties will either stay null, or will\r\n     * be set to a default value, depending on property.\r\n     * @param product NetLicensing.Product\r\n     *\r\n     * return the newly created product object in promise\r\n     * @returns {Promise}\r\n     */\r\n\r\n    create(context, product) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(product instanceof Product)) {\r\n            throw new TypeError('product must be an instance of Product');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .post(context, Constants.Product.ENDPOINT_PATH, product.asPropertiesMap(), Product);\r\n    },\r\n\r\n    /**\r\n     * Gets product by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services#ProductServices-Getproduct\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the product number\r\n     * @param number string\r\n     *\r\n     * return the product object in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .get(context, `${Constants.Product.ENDPOINT_PATH}/${number}`, {}, Product);\r\n    },\r\n\r\n    /**\r\n     * Returns products of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services#ProductServices-Productslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * array of product entities or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = typeof filter === 'string' ? filter : FilterUtils.encode(filter);\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.Product.ENDPOINT_PATH, queryParams, Product);\r\n    },\r\n\r\n    /**\r\n     * Updates product properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services#ProductServices-Updateproduct\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * product number\r\n     * @param number string\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param product NetLicensing.Product\r\n     *\r\n     * updated product in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, product) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(product instanceof Product)) {\r\n            throw new TypeError('product must be an instance of Product');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .post(context, `${Constants.Product.ENDPOINT_PATH}/${number}`, product.asPropertiesMap(), Product);\r\n    },\r\n\r\n    /**\r\n     * Deletes product.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services#ProductServices-Deleteproduct\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * product number\r\n     * @param number string\r\n     *\r\n     * if true, any entities that depend on the one being deleted will be deleted too\r\n     * @param forceCascade boolean\r\n     *\r\n     * return boolean state of delete in promise\r\n     * @returns {Promise}\r\n     */\r\n    delete(context, number, forceCascade) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        const queryParams = { forceCascade: Boolean(forceCascade) };\r\n\r\n        return Service\r\n            .delete(context, `${Constants.Product.ENDPOINT_PATH}/${number}`, queryParams);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport ProductModule from '../entities/ProductModule';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\nimport FilterUtils from '../util/FilterUtils';\r\n\r\n/**\r\n * JS representation of the ProductModule Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Module+Services\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new product module object with given properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Module+Services#ProductModuleServices-Createproductmodule\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * parent product to which the new product module is to be added\r\n     * @param productNumber string\r\n     *\r\n     * non-null properties will be taken for the new object, null properties will either stay null, or will\r\n     * be set to a default value, depending on property.\r\n     * @param productModule NetLicensing.ProductModule\r\n     *\r\n     * the newly created product module object in promise\r\n     * @returns {Promise}\r\n     */\r\n    create(context, productNumber, productModule) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(productModule instanceof ProductModule)) {\r\n            throw new TypeError('product must be an instance of ProductModule');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(productNumber, 'productNumber');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        productModule.setProperty('productNumber', productNumber);\r\n\r\n        return Service\r\n            .post(context, Constants.ProductModule.ENDPOINT_PATH, productModule.asPropertiesMap(), ProductModule);\r\n    },\r\n\r\n    /**\r\n     * Gets product module by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Module+Services#ProductModuleServices-Getproductmodule\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the product module number\r\n     * @param number string\r\n     *\r\n     * return the product module object in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .get(context, `${Constants.ProductModule.ENDPOINT_PATH}/${number}`, {}, ProductModule);\r\n    },\r\n\r\n    /**\r\n     * Returns products of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services#ProductServices-Productslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * array of product modules entities or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = typeof filter === 'string' ? filter : FilterUtils.encode(filter);\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.ProductModule.ENDPOINT_PATH, queryParams, ProductModule);\r\n    },\r\n\r\n    /**\r\n     * Updates product module properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Module+Services#ProductModuleServices-Updateproductmodule\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * product module number\r\n     * @param number string\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param productModule NetLicensing.ProductModule\r\n     *\r\n     * updated product module in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, productModule) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(productModule instanceof ProductModule)) {\r\n            throw new TypeError('product must be an instance of ProductModule');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const path = `${Constants.ProductModule.ENDPOINT_PATH}/${number}`;\r\n\r\n        return Service\r\n            .post(context, path, productModule.asPropertiesMap(), ProductModule);\r\n    },\r\n\r\n    /**\r\n     * Deletes product module.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Module+Services#ProductModuleServices-Deleteproductmodule\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * product module number\r\n     * @param number string\r\n     *\r\n     * if true, any entities that depend on the one being deleted will be deleted too\r\n     * @param forceCascade boolean\r\n     *\r\n     * return boolean state of delete in promise\r\n     * @returns {Promise}\r\n     */\r\n    delete(context, number, forceCascade) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        const queryParams = { forceCascade: Boolean(forceCascade) };\r\n\r\n        return Service\r\n            .delete(context, `${Constants.ProductModule.ENDPOINT_PATH}/${number}`, queryParams);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport PaymentMethod from '../entities/PaymentMethod';\r\nimport Constants from '../Constants';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport Service from './Service';\r\nimport FilterUtils from '../util/FilterUtils';\r\n\r\nexport default {\r\n    /**\r\n     * Gets payment method by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Payment+Method+Services#PaymentMethodServices-Getpaymentmethod\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the payment method number\r\n     * @param number string\r\n     *\r\n     * return the payment method in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .get(context, `${Constants.PaymentMethod.ENDPOINT_PATH}/${number}`, {}, PaymentMethod);\r\n    },\r\n\r\n    /**\r\n     * Returns payment methods of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Payment+Method+Services#PaymentMethodServices-Paymentmethodslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * array of payment method entities or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = typeof filter === 'string' ? filter : FilterUtils.encode(filter);\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.PaymentMethod.ENDPOINT_PATH, queryParams, PaymentMethod);\r\n    },\r\n\r\n    /**\r\n     * Updates payment method properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Payment+Method+Services#PaymentMethodServices-Updatepaymentmethod\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the payment method number\r\n     * @param number string\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param paymentMethod NetLicensing.PaymentMethod\r\n     *\r\n     * return updated payment method in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, paymentMethod) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(paymentMethod instanceof PaymentMethod)) {\r\n            throw new TypeError('paymentMethod must be an instance of PaymentMethod');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const path = `${Constants.PaymentMethod.ENDPOINT_PATH}/${number}`;\r\n\r\n        return Service\r\n            .post(context, path, paymentMethod.asPropertiesMap(), PaymentMethod);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport LicenseTemplate from '../entities/LicenseTemplate';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\nimport FilterUtils from '../util/FilterUtils';\r\n\r\n/**\r\n * JS representation of the ProductModule Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NLICPUB/License+Template+Services\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new license template object with given properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Template+Services#LicenseTemplateServices-Createlicensetemplate\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * parent product module to which the new license template is to be added\r\n     * @param productModuleNumber\r\n     *\r\n     * non-null properties will be taken for the new object, null properties will either stay null, or will\r\n     * be set to a default value, depending on property.\r\n     * @param licenseTemplate NetLicensing.LicenseTemplate\r\n     *\r\n     * the newly created license template object in promise\r\n     * @returns {Promise}\r\n     */\r\n    create(context, productModuleNumber, licenseTemplate) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(licenseTemplate instanceof LicenseTemplate)) {\r\n            throw new TypeError('licenseTemplate must be an instance of LicenseTemplate');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(productModuleNumber, 'productModuleNumber');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        licenseTemplate.setProperty('productModuleNumber', productModuleNumber);\r\n\r\n        return Service\r\n            .post(context, Constants.LicenseTemplate.ENDPOINT_PATH, licenseTemplate.asPropertiesMap(), LicenseTemplate);\r\n    },\r\n\r\n    /**\r\n     * Gets license template by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Template+Services#LicenseTemplateServices-Getlicensetemplate\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the license template number\r\n     * @param number string\r\n     *\r\n     * return the license template object in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .get(context, `${Constants.LicenseTemplate.ENDPOINT_PATH}/${number}`, {}, LicenseTemplate);\r\n    },\r\n\r\n    /**\r\n     * Returns all license templates of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Template+Services#LicenseTemplateServices-Licensetemplateslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * array of license templates (of all products/modules) or null/empty list if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = typeof filter === 'string' ? filter : FilterUtils.encode(filter);\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.LicenseTemplate.ENDPOINT_PATH, queryParams, LicenseTemplate);\r\n    },\r\n\r\n    /**\r\n     * Updates license template properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Template+Services#LicenseTemplateServices-Updatelicensetemplate\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * license template number\r\n     * @param number string\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param licenseTemplate NetLicensing.LicenseTemplate\r\n     *\r\n     * updated license template in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, licenseTemplate) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(licenseTemplate instanceof LicenseTemplate)) {\r\n            throw new TypeError('licenseTemplate must be an instance of LicenseTemplate');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const path = `${Constants.LicenseTemplate.ENDPOINT_PATH}/${number}`;\r\n\r\n        return Service\r\n            .post(context, path, licenseTemplate.asPropertiesMap(), LicenseTemplate);\r\n    },\r\n\r\n    /**\r\n     * Deletes license template.See NetLicensingAPI JavaDoc for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Template+Services#LicenseTemplateServices-Deletelicensetemplate\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * license template number\r\n     * @param number string\r\n     *\r\n     * if true, any entities that depend on the one being deleted will be deleted too\r\n     * @param forceCascade boolean\r\n     *\r\n     * return boolean state of delete in promise\r\n     * @returns {Promise}\r\n     */\r\n    delete(context, number, forceCascade) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        const queryParams = { forceCascade: Boolean(forceCascade) };\r\n\r\n        return Service\r\n            .delete(context, `${Constants.LicenseTemplate.ENDPOINT_PATH}/${number}`, queryParams);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport License from '../entities/License';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\nimport FilterUtils from '../util/FilterUtils';\r\n\r\n/**\r\n * JS representation of the License Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NLICPUB/License+Services\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new license object with given properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Services#LicenseServices-Createlicense\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * parent licensee to which the new license is to be added\r\n     * @param licenseeNumber string\r\n     *\r\n     *  license template that the license is created from\r\n     * @param licenseTemplateNumber string\r\n     *\r\n     * For privileged logins specifies transaction for the license creation. For regular logins new\r\n     * transaction always created implicitly, and the operation will be in a separate transaction.\r\n     * Transaction is generated with the provided transactionNumber, or, if transactionNumber is null, with\r\n     * auto-generated number.\r\n     * @param transactionNumber null|string\r\n     *\r\n     * non-null properties will be taken for the new object, null properties will either stay null, or will\r\n     * be set to a default value, depending on property.\r\n     * @param license NetLicensing.License\r\n     *\r\n     * return the newly created license object in promise\r\n     * @returns {Promise}\r\n     */\r\n    create(context, licenseeNumber, licenseTemplateNumber, transactionNumber, license) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(license instanceof License)) {\r\n            throw new TypeError('license must be an instance of License');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(licenseeNumber, 'licenseeNumber');\r\n        CheckUtils.paramNotEmpty(licenseTemplateNumber, 'licenseTemplateNumber');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        license.setProperty('licenseeNumber', licenseeNumber);\r\n        license.setProperty('licenseTemplateNumber', licenseTemplateNumber);\r\n\r\n        if (transactionNumber) license.setProperty('transactionNumber', transactionNumber);\r\n\r\n        return Service\r\n            .post(context, Constants.License.ENDPOINT_PATH, license.asPropertiesMap(), License);\r\n    },\r\n\r\n\r\n    /**\r\n     * Gets license by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Services#LicenseServices-Getlicense\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the license number\r\n     * @param number string\r\n     *\r\n     * return the license in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .get(context, `${Constants.License.ENDPOINT_PATH}/${number}`, {}, License);\r\n    },\r\n\r\n    /**\r\n     * Returns licenses of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Services#LicenseServices-Licenseslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * return array of licenses (of all products) or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = typeof filter === 'string' ? filter : FilterUtils.encode(filter);\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.License.ENDPOINT_PATH, queryParams, License);\r\n    },\r\n\r\n    /**\r\n     * Updates license properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Services#LicenseServices-Updatelicense\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * license number\r\n     * @param number string\r\n     *\r\n     * transaction for the license update. Created implicitly if transactionNumber is null. In this case the\r\n     * operation will be in a separate transaction.\r\n     * @param transactionNumber string|null\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param license NetLicensing.License\r\n     *\r\n     * return updated license in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, transactionNumber, license) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(license instanceof License)) {\r\n            throw new TypeError('license must be an instance of License');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        if (transactionNumber) license.setProperty('transactionNumber', transactionNumber);\r\n\r\n        return Service\r\n            .post(context, `${Constants.License.ENDPOINT_PATH}/${number}`, license.asPropertiesMap(), License);\r\n    },\r\n\r\n    /**\r\n     * Deletes license.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Services#LicenseServices-Deletelicense\r\n     *\r\n     * When any license is deleted, corresponding transaction is created automatically.\r\n     *\r\n     *  determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * license number\r\n     * @param number string\r\n     *\r\n     * if true, any entities that depend on the one being deleted will be deleted too\r\n     * @param forceCascade boolean\r\n     *\r\n     * return boolean state of delete in promise\r\n     * @returns {Promise}\r\n     */\r\n    delete(context, number, forceCascade) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        const queryParams = { forceCascade: Boolean(forceCascade) };\r\n\r\n        return Service\r\n            .delete(context, `${Constants.License.ENDPOINT_PATH}/${number}`, queryParams);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport Licensee from '../entities/Licensee';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport FilterUtils from '../util/FilterUtils';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\nimport ValidationParameters from '../vo/ValidationParameters';\r\nimport ValidationResults from '../vo/ValidationResults';\r\n\r\n/**\r\n * JS representation of the Licensee Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new licensee object with given properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Createlicensee\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * parent product to which the new licensee is to be added\r\n     * @param productNumber string\r\n     *\r\n     * non-null properties will be taken for the new object, null properties will either stay null, or will\r\n     * be set to a default value, depending on property.\r\n     * @param licensee NetLicensing.Licensee\r\n     *\r\n     * return the newly created licensee object in promise\r\n     * @returns {Promise}\r\n     */\r\n    create(context, productNumber, licensee) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(licensee instanceof Licensee)) {\r\n            throw new TypeError('licensee must be an instance of Licensee');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(productNumber, 'productNumber');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        licensee.setProperty('productNumber', productNumber);\r\n\r\n        return Service\r\n            .post(context, Constants.Licensee.ENDPOINT_PATH, licensee.asPropertiesMap(), Licensee);\r\n    },\r\n\r\n    /**\r\n     * Gets licensee by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Getlicensee\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the licensee number\r\n     * @param number string\r\n     *\r\n     * return the licensee in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        return Service\r\n            .get(context, `${Constants.Licensee.ENDPOINT_PATH}/${number}`, {}, Licensee);\r\n    },\r\n\r\n    /**\r\n     * Returns all licensees of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Licenseeslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * array of licensees (of all products) or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = typeof filter === 'string' ? filter : FilterUtils.encode(filter);\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.Licensee.ENDPOINT_PATH, queryParams, Licensee);\r\n    },\r\n\r\n    /**\r\n     * Updates licensee properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Updatelicensee\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * licensee number\r\n     * @param number string\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param licensee NetLicensing.Licensee\r\n     *\r\n     * return updated licensee in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, licensee) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(licensee instanceof Licensee)) {\r\n            throw new TypeError('licensee must be an instance of Licensee');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        return Service\r\n            .post(context, `${Constants.Licensee.ENDPOINT_PATH}/${number}`, licensee.asPropertiesMap(), Licensee);\r\n    },\r\n\r\n    /**\r\n     * Deletes licensee.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Deletelicensee\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * licensee number\r\n     * @param number string\r\n     *\r\n     * if true, any entities that depend on the one being deleted will be deleted too\r\n     * @param forceCascade boolean\r\n     *\r\n     * return boolean state of delete in promise\r\n     * @returns {Promise}\r\n     */\r\n    delete(context, number, forceCascade) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        const queryParams = { forceCascade: Boolean(forceCascade) };\r\n\r\n        return Service\r\n            .delete(context, `${Constants.Licensee.ENDPOINT_PATH}/${number}`, queryParams);\r\n    },\r\n\r\n    /**\r\n     * Validates active licenses of the licensee. See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Validatelicensee\r\n     *\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * licensee number\r\n     * @param number string\r\n     *\r\n     * optional validation parameters. See ValidationParameters and licensing model documentation for\r\n     * details.\r\n     * @param validationParameters NetLicensing.ValidationParameters.\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    validate(context, number, validationParameters) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(validationParameters instanceof ValidationParameters)) {\r\n            throw new TypeError('validationParameters must be an instance of ValidationParameters');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        const queryParams = {};\r\n\r\n        if (validationParameters.getProductNumber()) {\r\n            queryParams.productNumber = validationParameters.getProductNumber();\r\n        }\r\n\r\n        if (validationParameters.getLicenseeName()) {\r\n            queryParams.licenseeName = validationParameters.getLicenseeName();\r\n        }\r\n\r\n        if (validationParameters.getLicenseeSecret()) {\r\n            queryParams.licenseeSecret = validationParameters.getLicenseeSecret();\r\n        }\r\n\r\n        let pmIndex = 0;\r\n        const parameters = validationParameters.getParameters();\r\n\r\n        const has = Object.prototype.hasOwnProperty;\r\n\r\n        Object.keys(parameters).forEach((productModuleName) => {\r\n            queryParams[`productModuleNumber${pmIndex}`] = productModuleName;\r\n            if (!has.call(parameters, productModuleName)) return;\r\n\r\n            const parameter = parameters[productModuleName];\r\n\r\n            Object.keys(parameter).forEach((key) => {\r\n                if (has.call(parameter, key)) {\r\n                    queryParams[key + pmIndex] = parameter[key];\r\n                }\r\n            });\r\n            pmIndex += 1;\r\n        });\r\n\r\n        const path = `${Constants.Licensee.ENDPOINT_PATH}/${number}/${Constants.Licensee.ENDPOINT_PATH_VALIDATE}`;\r\n\r\n        return Service\r\n            .post(context, path, queryParams)\r\n            .then((item) => {\r\n                const data = {};\r\n                const validationResults = new ValidationResults();\r\n\r\n                item.property.forEach((property) => {\r\n                    try {\r\n                        data[property.name] = JSON.parse(property.value);\r\n                    } catch (e) {\r\n                        data[property.name] = property.value;\r\n                    }\r\n                });\r\n\r\n                validationResults\r\n                    .setProductModuleValidation(data.productModuleNumber, data)\r\n                    .setTtl(Service.getLastHttpRequestInfo().data.ttl);\r\n\r\n                return validationResults;\r\n            });\r\n    },\r\n\r\n\r\n    /**\r\n     * Transfer licenses between licensees.\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Transferlicensee\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the number of the licensee receiving licenses\r\n     * @param number string\r\n     *\r\n     * the number of the licensee delivering licenses\r\n     * @param sourceLicenseeNumber string\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    transfer(context, number, sourceLicenseeNumber) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n        CheckUtils.paramNotEmpty(sourceLicenseeNumber, 'sourceLicenseeNumber');\r\n\r\n        const queryParams = { sourceLicenseeNumber };\r\n\r\n        const path = `${Constants.Licensee.ENDPOINT_PATH}/${number}/${Constants.Licensee.ENDPOINT_PATH_TRANSFER}`;\r\n\r\n        return Service\r\n            .post(context, path, queryParams);\r\n    },\r\n};\r\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n","'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","module.exports = require('./lib/axios');","// Constants\r\nimport Constants from './Constants';\r\n// VO\r\nimport Context from './vo/Context';\r\n\r\n// Services\r\nimport Service from './services/Service';\r\nimport LicenseeService from './services/LicenseeService';\r\nimport LicenseService from './services/LicenseService';\r\nimport LicenseTemplateService from './services/LicenseTemplateService';\r\nimport PaymentMethodService from './services/PaymentMethodService';\r\nimport ProductModuleService from './services/ProductModuleService';\r\nimport ProductService from './services/ProductService';\r\nimport TokenService from './services/TokenService';\r\nimport TransactionService from './services/TransactionService';\r\nimport UtilityService from './services/UtilityService';\r\n\r\n// Entities\r\nimport Country from './entities/Country';\r\nimport License from './entities/License';\r\nimport Licensee from './entities/Licensee';\r\nimport LicenseTemplate from './entities/LicenseTemplate';\r\nimport PaymentMethod from './entities/PaymentMethod';\r\nimport Product from './entities/Product';\r\nimport ProductDiscount from './entities/ProductDiscount';\r\nimport ProductModule from './entities/ProductModule';\r\nimport Token from './entities/Token';\r\nimport Transaction from './entities/Transaction';\r\nimport LicenseTransactionJoin from './entities/LicenseTransactionJoin';\r\nimport ValidationParameters from './vo/ValidationParameters';\r\nimport ValidationResults from './vo/ValidationResults';\r\n\r\n// Utils\r\nimport CastsUtils from './util/CastsUtils';\r\nimport CheckUtils from './util/CheckUtils';\r\nimport FilterUtils from './util/FilterUtils';\r\n\r\n// Errors\r\nimport NlicError from './errors/NlicError';\r\n\r\n// Create the default instance to be exported\r\nconst NetLicensing = {\r\n    // Constants\r\n    Constants,\r\n\r\n    // Expose VO\r\n    Context,\r\n    ValidationParameters,\r\n    ValidationResults,\r\n\r\n    // Expose Services\r\n    Service,\r\n    LicenseeService,\r\n    LicenseService,\r\n    LicenseTemplateService,\r\n    PaymentMethodService,\r\n    ProductModuleService,\r\n    ProductService,\r\n    TokenService,\r\n    TransactionService,\r\n    UtilityService,\r\n\r\n    // Expose Entities\r\n    Country,\r\n    License,\r\n    Licensee,\r\n    LicenseTemplate,\r\n    PaymentMethod,\r\n    Product,\r\n    ProductDiscount,\r\n    ProductModule,\r\n    Token,\r\n    Transaction,\r\n    LicenseTransactionJoin,\r\n\r\n    // Expose Utils\r\n    CastsUtils,\r\n    CheckUtils,\r\n    FilterUtils,\r\n\r\n    // Errors\r\n    NlicError,\r\n};\r\n\r\nmodule.exports = NetLicensing;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = NetLicensing;\r\n"],"sourceRoot":""}