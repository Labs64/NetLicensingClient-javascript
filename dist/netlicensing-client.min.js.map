{"version":3,"sources":["webpack://NetLicensing/webpack/universalModuleDefinition","webpack://NetLicensing/webpack/bootstrap","webpack://NetLicensing/./src/util/CheckUtils.js","webpack://NetLicensing/./node_modules/axios/lib/utils.js","webpack://NetLicensing/./src/Constants.js","webpack://NetLicensing/./src/entities/BaseEntity.js","webpack://NetLicensing/./src/vo/Context.js","webpack://NetLicensing/./src/util/FilterUtils.js","webpack://NetLicensing/./src/services/Service.js","webpack://NetLicensing/./src/entities/License.js","webpack://NetLicensing/./src/entities/Transaction.js","webpack://NetLicensing/./node_modules/axios/lib/defaults.js","webpack://NetLicensing/./src/entities/Country.js","webpack://NetLicensing/./src/entities/LicenseTransactionJoin.js","webpack://NetLicensing/./src/entities/Token.js","webpack://NetLicensing/./src/entities/ProductDiscount.js","webpack://NetLicensing/./src/entities/Product.js","webpack://NetLicensing/./src/entities/ProductModule.js","webpack://NetLicensing/./src/entities/PaymentMethod.js","webpack://NetLicensing/./src/entities/LicenseTemplate.js","webpack://NetLicensing/./src/vo/ValidationResults.js","webpack://NetLicensing/./src/vo/ValidationParameters.js","webpack://NetLicensing/./src/entities/Licensee.js","webpack://NetLicensing/./src/util/CastsUtils.js","webpack://NetLicensing/./node_modules/axios/lib/cancel/Cancel.js","webpack://NetLicensing/./node_modules/axios/lib/cancel/isCancel.js","webpack://NetLicensing/./node_modules/axios/lib/core/createError.js","webpack://NetLicensing/./node_modules/axios/lib/adapters/xhr.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/bind.js","webpack://NetLicensing/./src/services/UtilityService.js","webpack://NetLicensing/./src/services/TransactionService.js","webpack://NetLicensing/./src/services/TokenService.js","webpack://NetLicensing/./src/services/ProductService.js","webpack://NetLicensing/./src/services/ProductModuleService.js","webpack://NetLicensing/./src/services/PaymentMethodService.js","webpack://NetLicensing/./src/services/LicenseTemplateService.js","webpack://NetLicensing/./src/services/LicenseService.js","webpack://NetLicensing/./src/services/LicenseeService.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/spread.js","webpack://NetLicensing/./node_modules/axios/lib/cancel/CancelToken.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/combineURLs.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://NetLicensing/./node_modules/axios/lib/core/transformData.js","webpack://NetLicensing/./node_modules/axios/lib/core/dispatchRequest.js","webpack://NetLicensing/./node_modules/axios/lib/core/InterceptorManager.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/cookies.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/btoa.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/buildURL.js","webpack://NetLicensing/./node_modules/axios/lib/core/enhanceError.js","webpack://NetLicensing/./node_modules/axios/lib/core/settle.js","webpack://NetLicensing/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://NetLicensing/./node_modules/process/browser.js","webpack://NetLicensing/./node_modules/axios/lib/core/Axios.js","webpack://NetLicensing/./node_modules/is-buffer/index.js","webpack://NetLicensing/./node_modules/axios/lib/axios.js","webpack://NetLicensing/./node_modules/axios/index.js","webpack://NetLicensing/./src/netlicensing-client.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","isValid","valid","undefined","Number","isFinite","isNaN","paramNotNull","parameter","parameterName","this","TypeError","paramNotEmpty","bind","isBuffer","toString","isArray","val","isObject","isFunction","forEach","obj","fn","length","key","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","document","merge","result","assignValue","arguments","extend","a","b","thisArg","trim","str","replace","BASIC_AUTHENTICATION","APIKEY_IDENTIFICATION","LicensingModel","VALID","TryAndBuy","NAME","Rental","RED_THRESHOLD","YELLOW_THRESHOLD","Subscription","Floating","MultiFeature","PayPerUse","PricingTable","Quota","LicenseTemplate","ENDPOINT_PATH","LicenseType","FEATURE","TIMEVOLUME","FLOATING","QUANTITY","Product","LicenseeSecretMode","DISABLED","PREDEFINED","CLIENT","Token","Type","DEFAULT","SHOP","APIKEY","Transaction","Status","CANCELLED","CLOSED","PENDING","Licensee","ENDPOINT_PATH_VALIDATE","ENDPOINT_PATH_TRANSFER","License","PaymentMethod","ProductModule","Utility","propertiesMap","WeakMap","definedMap","castsMap","readOnlyMap","BaseEntity","_ref","properties","casts","readOnly","_classCallCheck","set","setProperties","hasProperty","isPropertyReadOnly","_CheckUtils2","default","_typeof","castedValue","cast","setProperty","_this","removeProperties","has","keys","def","assign","removeDefine","_this2","removeProperty","indexOf","_CastsUtils2","Boolean","hasDefine","self","descriptors","getProperty","onlyGetter","_this3","_this4","getProperties","customProperties","valuesMap","defaultsMap","Context","values","baseUrl","securityMode","_Constants2","setValues","setValue","getValue","username","password","apiKey","vendorNumber","Error","copedValue","Array","removeValues","removeValue","FILTER_DELIMITER","FILTER_PAIR_DELIMITER","encode","filter","query","push","encodeURIComponent","join","decode","split","v","_v$split","_v$split2","_slicedToArray","httpXHR","Service","context","urlTemplate","queryParams","resultType","request","then","response","data","getEntity","items","item","map","status","method","template","String","params","toLowerCase","getBaseUrl","isValidUrl","restUrl","url","responseType","headers","transformRequest","toQueryString","getSecurityMode","getUsername","getPassword","auth","getApiKey","Authorization","btoa","_axios2","catch","error","info","infos","id","Promise","resolve","reasonPhrase","reject","lists","list","entity","_ref2","setListMethod","charAt","toUpperCase","substr","console","warn","type","RegExp","test","prefix","k","Date","toISOString","_BaseEntity2","_possibleConstructorReturn","__proto__","getPrototypeOf","number","active","price","hidden","parentfeature","timeVolume","startDate","inUse","defines","source","grandTotal","discount","currency","dateCreated","dateClosed","paymentMethod","licenseTransactionJoins","licenseTransactionJoin","_LicenseTransactionJoin2","setLicense","_License2","setTransaction","utils","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","adapter","defaults","XMLHttpRequest","process","JSON","stringify","transformResponse","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","common","Accept","Country","code","vatPercent","isEu","vat","LicenseTransactionJoin","transaction","license","expirationTime","tokenType","licenseeNumber","successURL","successURLTitle","cancelURL","cancelURLTitle","shopURL","ProductDiscount","totalPrice","amountFix","amountPercent","getTotalPrice","getCurrency","amount","getAmountFix","getAmountPercent","discountsMap","discountsTouched","version","description","licensingInfo","licenseeAutoCreate","licenseeSecretMode","discounts","addDiscount","_ProductDiscount2","licensingModel","maxCheckoutValidity","yellowThreshold","redThreshold","licenseTemplate","paypal.subject","paypalSubject","licenseType","automatic","hideLicenses","maxSessions","quantity","_CheckUtils","vr","ValidationResults","validators","productModuleNumber","productModuleValidation","ttl","getValidators","vpMap","ValidationParameters","parameters","productNumber","licenseeName","licenseeSecret","productModuleParameters","markedForTransfer","parseInt","parseFloat","Cancel","message","__CANCEL__","enhanceError","config","settle","buildURL","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","loadEvent","xDomain","XDomainRequest","onprogress","ontimeout","open","paramsSerializer","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseText","statusText","onerror","cookies","xsrfValue","withCredentials","read","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","args","apply","listLicenseTypes","setSecurityMode","_Service2","listLicensingModels","listCountries","_FilterUtils2","_Country2","create","post","asPropertiesMap","_Transaction2","update","path","token","_Token2","delete","_Product2","forceCascade","productModule","_ProductModule2","_PaymentMethod2","_LicenseTemplate2","licenseTemplateNumber","transactionNumber","licensee","_Licensee2","validate","validationParameters","getProductNumber","getLicenseeName","getLicenseeSecret","pmIndex","getParameters","productModuleName","validationResults","_ValidationResults2","setProductModuleValidation","setTtl","getLastHttpRequestInfo","transfer","sourceLicenseeNumber","callback","arr","CancelToken","executor","resolvePromise","reason","throwIfRequested","baseURL","relativeURL","fns","transformData","isCancel","isAbsoluteURL","combineURLs","throwIfCancellationRequested","InterceptorManager","handlers","use","fulfilled","rejected","eject","h","write","expires","domain","secure","cookie","toGMTString","match","decodeURIComponent","remove","now","chars","E","input","block","charCode","output","idx","charCodeAt","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","location","requestURL","parsed","ignoreDuplicateOf","line","concat","serializedParams","parts","normalizedName","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","dispatchRequest","Axios","instanceConfig","interceptors","chain","interceptor","unshift","shift","constructor","readFloatLE","slice","isSlowBuffer","_isBuffer","createInstance","defaultConfig","instance","axios","all","promises","spread","NetLicensing","Constants","LicenseeService","LicenseService","LicenseTemplateService","PaymentMethodService","ProductModuleService","ProductService","TokenService","TransactionService","UtilityService","CastsUtils","CheckUtils","FilterUtils"],"mappings":"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","file":"netlicensing-client.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"NetLicensing\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NetLicensing\"] = factory();\n\telse\n\t\troot[\"NetLicensing\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 56);\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nexport default {\r\n    isValid(value) {\r\n        let valid = (value !== undefined && typeof value !== 'function');\r\n        if (typeof value === 'number') valid = Number.isFinite(value) && !Number.isNaN(value);\r\n        return valid;\r\n    },\r\n\r\n    paramNotNull(parameter, parameterName) {\r\n        if (!this.isValid(parameter)) throw new TypeError(`Parameter ${parameterName} has bad value ${parameter}`);\r\n        if (parameter === null) throw new TypeError(`Parameter ${parameterName} cannot be null`);\r\n    },\r\n\r\n    paramNotEmpty(parameter, parameterName) {\r\n        if (!this.isValid(parameter)) throw new TypeError(`Parameter ${parameterName} has bad value ${parameter}`);\r\n        if (!parameter) throw new TypeError(`Parameter ${parameterName} cannot be null or empty string`);\r\n    },\r\n};\r\n","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nexport default {\r\n    BASIC_AUTHENTICATION: 'BASIC_AUTH',\r\n    APIKEY_IDENTIFICATION: 'APIKEY',\r\n\r\n    LicensingModel: {\r\n        VALID: 'valid',\r\n        TryAndBuy: {\r\n            NAME: 'TryAndBuy',\r\n        },\r\n        Rental: {\r\n            NAME: 'Rental',\r\n            RED_THRESHOLD: 'redThreshold',\r\n            YELLOW_THRESHOLD: 'yellowThreshold',\r\n        },\r\n        Subscription: {\r\n            NAME: 'Subscription',\r\n        },\r\n        Floating: {\r\n            NAME: 'Floating',\r\n        },\r\n        MultiFeature: {\r\n            NAME: 'MultiFeature',\r\n        },\r\n        PayPerUse: {\r\n            NAME: 'PayPerUse',\r\n        },\r\n        PricingTable: {\r\n            NAME: 'PricingTable',\r\n        },\r\n        Quota: {\r\n            NAME: 'Quota',\r\n        },\r\n    },\r\n\r\n    LicenseTemplate: {\r\n        ENDPOINT_PATH: 'licensetemplate',\r\n        LicenseType: {\r\n            FEATURE: 'FEATURE',\r\n            TIMEVOLUME: 'TIMEVOLUME',\r\n            FLOATING: 'FLOATING',\r\n            QUANTITY: 'QUANTITY',\r\n        },\r\n    },\r\n\r\n    Product: {\r\n        ENDPOINT_PATH: 'product',\r\n        LicenseeSecretMode: {\r\n            DISABLED: 'DISABLED',\r\n            PREDEFINED: 'PREDEFINED',\r\n            CLIENT: 'CLIENT',\r\n        },\r\n    },\r\n\r\n    Token: {\r\n        ENDPOINT_PATH: 'token',\r\n        Type: {\r\n            DEFAULT: 'DEFAULT',\r\n            SHOP: 'SHOP',\r\n            APIKEY: 'APIKEY',\r\n        },\r\n    },\r\n\r\n    Transaction: {\r\n        ENDPOINT_PATH: 'transaction',\r\n        Status: {\r\n            CANCELLED: 'CANCELLED',\r\n            CLOSED: 'CLOSED',\r\n            PENDING: 'PENDING',\r\n        },\r\n    },\r\n\r\n    Licensee: {\r\n        ENDPOINT_PATH: 'licensee',\r\n        ENDPOINT_PATH_VALIDATE: 'validate',\r\n        ENDPOINT_PATH_TRANSFER: 'transfer',\r\n    },\r\n\r\n    License: {\r\n        ENDPOINT_PATH: 'license',\r\n    },\r\n\r\n    PaymentMethod: {\r\n        ENDPOINT_PATH: 'paymentmethod',\r\n    },\r\n\r\n    ProductModule: {\r\n        ENDPOINT_PATH: 'productmodule',\r\n    },\r\n\r\n    Utility: {\r\n        ENDPOINT_PATH: 'utility',\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport CastsUtils from '../util/CastsUtils';\r\n\r\n/**\r\n * The entity properties.\r\n * @type {{}}\r\n * @private\r\n */\r\nconst propertiesMap = new WeakMap();\r\n\r\n/**\r\n * List of properties that was defined\r\n * @type {{}}\r\n * @private\r\n */\r\n\r\nconst definedMap = new WeakMap();\r\n\r\n/**\r\n * List of properties that need be casts\r\n * @type {{}}\r\n * @private\r\n */\r\nconst castsMap = new WeakMap();\r\n\r\n/**\r\n * List of properties that has read-only access\r\n * @type {{}}\r\n * @private\r\n */\r\nconst readOnlyMap = new WeakMap();\r\n\r\nexport default class BaseEntity {\r\n    constructor({ properties, casts, readOnly }) {\r\n        propertiesMap.set(this, {});\r\n        definedMap.set(this, {});\r\n        castsMap.set(this, casts || []);\r\n        readOnlyMap.set(this, readOnly || []);\r\n\r\n        if (properties) {\r\n            this.setProperties(properties);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set a given property on the entity.\r\n     * @param property\r\n     * @param value\r\n     * @returns {BaseEntity}\r\n     */\r\n    setProperty(property, value) {\r\n        // if property has read-only access and was initialized at least once\r\n        if (this.hasProperty(property) && this.isPropertyReadOnly(property)) {\r\n            throw new TypeError(`Property ${property} has read-only access`);\r\n        }\r\n\r\n        // if property name has bad native type\r\n        if (!CheckUtils.isValid(property) || typeof property === 'object') {\r\n            throw new TypeError(`Bad property name:${property}`);\r\n        }\r\n\r\n        // if property value has bad native type\r\n        if (!CheckUtils.isValid(value)) {\r\n            throw new TypeError(`Property ${property} has bad value ${value}`);\r\n        }\r\n\r\n        const castedValue = this.cast(property, value);\r\n\r\n        // check if property value after cast has bad native type\r\n        if (!CheckUtils.isValid(value)) {\r\n            throw new TypeError(`Property ${property} has bad cast value ${castedValue}`);\r\n        }\r\n\r\n        // define to property\r\n        this.define(property);\r\n\r\n        // save property to propertiesMap\r\n        const properties = propertiesMap.get(this);\r\n        properties[property] = castedValue;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Alias for setProperty\r\n     * @param property\r\n     * @param value\r\n     * @returns {BaseEntity}\r\n     */\r\n    addProperty(property, value) {\r\n        return this.setProperty(property, value);\r\n    }\r\n\r\n    /**\r\n     * Set the entity properties.\r\n     * @param properties\r\n     * @returns {BaseEntity}\r\n     */\r\n    setProperties(properties) {\r\n        this.removeProperties();\r\n\r\n        const has = Object.prototype.hasOwnProperty;\r\n\r\n        Object.keys(properties).forEach((key) => {\r\n            if (has.call(properties, key)) {\r\n                this.setProperty(key, properties[key]);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Check if we has property\r\n     * @param property\r\n     * @protected\r\n     */\r\n    hasProperty(property) {\r\n        return Object.prototype.hasOwnProperty.call(propertiesMap.get(this), property);\r\n    }\r\n\r\n    /**\r\n     * Get an property from the entity.\r\n     * @param property\r\n     * @param def\r\n     * @returns {*}\r\n     */\r\n    getProperty(property, def) {\r\n        return Object.prototype.hasOwnProperty.call(propertiesMap.get(this), property)\r\n            ? propertiesMap.get(this)[property]\r\n            : def;\r\n    }\r\n\r\n    /**\r\n     * Get all of the current properties on the entity.\r\n     */\r\n    getProperties() {\r\n        return Object.assign({}, propertiesMap.get(this));\r\n    }\r\n\r\n    /**\r\n     * Remove property\r\n     * @param property\r\n     * @returns {BaseEntity}\r\n     */\r\n    removeProperty(property) {\r\n        const properties = propertiesMap.get(this);\r\n        delete properties[property];\r\n        this.removeDefine(property);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove properties\r\n     * @param properties\r\n     */\r\n    removeProperties(properties) {\r\n        const propertiesForRemove = properties || Object.keys(propertiesMap.get(this));\r\n\r\n        propertiesForRemove.forEach((property) => {\r\n            this.removeProperty(property);\r\n        });\r\n    }\r\n\r\n    isPropertyReadOnly(property) {\r\n        return readOnlyMap.get(this).indexOf(property) >= 0;\r\n    }\r\n\r\n    cast(property, value) {\r\n        if (!castsMap.get(this)[property]) return value;\r\n\r\n        return CastsUtils(castsMap.get(this)[property], value);\r\n    }\r\n\r\n    /**\r\n     * Check if property has defined\r\n     * @param property\r\n     * @protected\r\n     */\r\n    hasDefine(property) {\r\n        return Boolean(definedMap.get(this)[property]);\r\n    }\r\n\r\n    /**\r\n     * Define property getter and setter\r\n     * @param property\r\n     * @protected\r\n     */\r\n    define(property) {\r\n        if (this.hasDefine(property)) return;\r\n\r\n        if (!CheckUtils.isValid(property) || typeof property === 'object') {\r\n            throw new TypeError(`Bad property name:${property}`);\r\n        }\r\n\r\n        const self = this;\r\n\r\n        // delete property\r\n        delete this[property];\r\n\r\n        const descriptors = {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get() {\r\n                return self.getProperty(property);\r\n            },\r\n        };\r\n\r\n        if (!this.isPropertyReadOnly(property)) {\r\n            descriptors.set = value => self.setProperty(property, value);\r\n        }\r\n\r\n        const defined = definedMap.get(this);\r\n        defined[property] = true;\r\n\r\n        Object.defineProperty(this, property, descriptors);\r\n    }\r\n\r\n    /**\r\n     * Remove property getter and setter\r\n     * @param property\r\n     * @protected\r\n     */\r\n    removeDefine(property) {\r\n        if (!this.hasDefine(property)) return;\r\n\r\n        const defined = definedMap.get(this);\r\n        delete defined[property];\r\n\r\n        delete this[property];\r\n    }\r\n\r\n    /**\r\n     * Define properties getter and setter\r\n     * @param properties\r\n     * @param onlyGetter\r\n     * @protected\r\n     */\r\n    defines(properties, onlyGetter) {\r\n        properties.forEach((property) => {\r\n            this.define(property, onlyGetter);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get properties map\r\n     */\r\n    asPropertiesMap() {\r\n        const properties = this.getProperties();\r\n        const customProperties = {};\r\n\r\n        const has = Object.prototype.hasOwnProperty;\r\n\r\n        Object.keys(this).forEach((key) => {\r\n            if (!has.call(this, key)) return;\r\n            if (!CheckUtils.isValid(this[key])) return;\r\n\r\n            customProperties[key] = this[key];\r\n        });\r\n\r\n        return Object.assign({}, customProperties, properties);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\nimport Constants from '../Constants';\r\nimport CheckUtils from '../util/CheckUtils';\r\n\r\n/**\r\n * The context values.\r\n * @type {{}}\r\n * @private\r\n */\r\nconst valuesMap = new WeakMap();\r\n\r\n/**\r\n * List of values that was defined\r\n * @type {{}}\r\n * @private\r\n */\r\nconst definedMap = new WeakMap();\r\n\r\n/**\r\n * Context defaults\r\n * @type {{baseUrl: string, securityMode}}\r\n * @private\r\n */\r\nconst defaultsMap = new WeakMap();\r\n\r\nexport default class Context {\r\n    constructor(values) {\r\n        defaultsMap.set(this, {\r\n            baseUrl: 'https://go.netlicensing.io/core/v2/rest',\r\n            securityMode: Constants.BASIC_AUTHENTICATION,\r\n        });\r\n\r\n        valuesMap.set(this, {});\r\n\r\n        definedMap.set(this, {});\r\n\r\n        this.setValues(Object.assign({}, defaultsMap.get(this), values));\r\n    }\r\n\r\n    setBaseUrl(baseUrl) {\r\n        return this.setValue('baseUrl', baseUrl);\r\n    }\r\n\r\n    getBaseUrl(def) {\r\n        return this.getValue('baseUrl', def);\r\n    }\r\n\r\n    setUsername(username) {\r\n        return this.setValue('username', username);\r\n    }\r\n\r\n    getUsername(def) {\r\n        return this.getValue('username', def);\r\n    }\r\n\r\n    setPassword(password) {\r\n        return this.setValue('password', password);\r\n    }\r\n\r\n    getPassword(def) {\r\n        return this.getValue('password', def);\r\n    }\r\n\r\n    setApiKey(apiKey) {\r\n        return this.setValue('apiKey', apiKey);\r\n    }\r\n\r\n    getApiKey(def) {\r\n        return this.getValue('apiKey', def);\r\n    }\r\n\r\n    setSecurityMode(securityMode) {\r\n        return this.setValue('securityMode', securityMode);\r\n    }\r\n\r\n    getSecurityMode(def) {\r\n        return this.getValue('securityMode', def);\r\n    }\r\n\r\n    setVendorNumber(vendorNumber) {\r\n        return this.setValue('vendorNumber', vendorNumber);\r\n    }\r\n\r\n    getVendorNumber(def) {\r\n        return this.getValue('vendorNumber', def);\r\n    }\r\n\r\n    /**\r\n     * Set a given values on the context.\r\n     * @param key\r\n     * @param value\r\n     * @returns {Context}\r\n     */\r\n    setValue(key, value) {\r\n        // check values\r\n        if (!CheckUtils.isValid(key) || typeof key === 'object') throw new Error(`Bad value key:${key}`);\r\n        if (!CheckUtils.isValid(value)) throw new Error(`Value ${key} has wrong value${value}`);\r\n\r\n        // define keys\r\n        this.define(key);\r\n\r\n        let copedValue = value;\r\n\r\n        if (typeof value === 'object') {\r\n            copedValue = (Array.isArray(value)) ? Object.assign([], value) : Object.assign({}, value);\r\n        }\r\n\r\n        const values = valuesMap.get(this);\r\n        values[key] = copedValue;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the array of context values.\r\n     * @param values\r\n     * @returns {Context}\r\n     */\r\n    setValues(values) {\r\n        this.removeValues();\r\n\r\n        const has = Object.prototype.hasOwnProperty;\r\n\r\n        Object.keys(values).forEach((key) => {\r\n            if (has.call(values, key)) {\r\n                this.setValue(key, values[key]);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get an value from the context.\r\n     * @param key\r\n     * @param def\r\n     * @returns {*}\r\n     */\r\n    getValue(key, def) {\r\n        return valuesMap.get(this)[key] || def;\r\n    }\r\n\r\n    /**\r\n     * Get all of the current value on the context.\r\n     */\r\n    getValues() {\r\n        return Object.assign({}, valuesMap.get(this));\r\n    }\r\n\r\n    /**\r\n     * Remove value\r\n     * @param key\r\n     * @returns {Context}\r\n     */\r\n    removeValue(key) {\r\n        const values = valuesMap.get(this);\r\n        delete values[key];\r\n\r\n        this.removeDefine(key);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove values\r\n     * @param keys\r\n     */\r\n    removeValues(keys) {\r\n        const keysAr = keys || Object.keys(valuesMap.get(this));\r\n        keysAr.forEach(key => this.removeValue(key));\r\n    }\r\n\r\n    /**\r\n     * Define value getter and setter\r\n     * @param key\r\n     * @param onlyGetter\r\n     * @private\r\n     */\r\n    define(key, onlyGetter) {\r\n        if (this.hasDefine(key)) return;\r\n\r\n        if (!CheckUtils.isValid(key) || typeof property === 'object') {\r\n            throw new TypeError(`Bad value name:${key}`);\r\n        }\r\n\r\n        const self = this;\r\n\r\n        // delete property\r\n        delete this[key];\r\n\r\n        const descriptors = {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get() {\r\n                return self.getValue(key);\r\n            },\r\n        };\r\n\r\n        if (!onlyGetter) {\r\n            descriptors.set = value => self.setValue(key, value);\r\n        }\r\n\r\n        const defined = definedMap.get(this);\r\n        defined[key] = true;\r\n\r\n        Object.defineProperty(this, key, descriptors);\r\n    }\r\n\r\n    /**\r\n     * Check if value has defined\r\n     * @param key\r\n     * @private\r\n     */\r\n    hasDefine(key) {\r\n        return Boolean(definedMap.get(this)[key]);\r\n    }\r\n\r\n    /**\r\n     * Remove value getter and setter\r\n     * @param key\r\n     * @private\r\n     */\r\n    removeDefine(key) {\r\n        if (!this.hasDefine(key)) return;\r\n\r\n        const defined = definedMap.get(this);\r\n        delete defined[key];\r\n\r\n        delete this[key];\r\n    }\r\n}\r\n","export default {\r\n    FILTER_DELIMITER: ';',\r\n    FILTER_PAIR_DELIMITER: '=',\r\n    encode(filter = {}) {\r\n        const query = [];\r\n        const has = Object.prototype.hasOwnProperty;\r\n        Object.keys(filter).forEach((key) => {\r\n            if (has.call(filter, key)) {\r\n                query.push(`${encodeURIComponent(key)}${this.FILTER_PAIR_DELIMITER}${encodeURIComponent(filter[key])}`);\r\n            }\r\n        });\r\n        return query.join(this.FILTER_DELIMITER);\r\n    },\r\n    decode(query = '') {\r\n        const filter = {};\r\n        query.split(this.FILTER_DELIMITER).forEach((v) => {\r\n            const [name, value] = v.split(this.FILTER_PAIR_DELIMITER);\r\n            filter[name] = value;\r\n        });\r\n        return filter;\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\nimport axios from 'axios';\r\nimport Context from '../vo/Context';\r\nimport Constants from '../Constants';\r\nimport BaseEntity from '../entities/BaseEntity';\r\n\r\nlet httpXHR = {};\r\n\r\nexport default class Service {\r\n    static getLastHttpRequestInfo() {\r\n        return httpXHR;\r\n    }\r\n\r\n    /**\r\n     * Helper method for performing GET request to N\r\n     etLicensing API services. Finds and returns first suitable item with\r\n     * type resultType from the response.\r\n     *\r\n     * Context for the NetLicensing API call\r\n     * @param context\r\n     *\r\n     * the REST URL template\r\n     * @param urlTemplate\r\n     *\r\n     * The REST query parameters values. May be null if there are no parameters.\r\n     * @param queryParams\r\n     *\r\n     * the type of the result\r\n     * @param resultType\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    static get(context, urlTemplate, queryParams, resultType) {\r\n        return Service\r\n            .request(context, 'get', urlTemplate, queryParams)\r\n            .then(response => ((response.data) ? Service.getEntity(resultType, response.data.items.item[0]) : null));\r\n    }\r\n\r\n    /**\r\n     * Helper method for performing GET request to NetLicensing API service that returns page of items with type\r\n     * resultType.\r\n     *\r\n     * context for the NetLicensing API call\r\n     * @param context\r\n     *\r\n     * the REST URL template\r\n     * @param urlTemplate\r\n     *\r\n     * The REST query parameters values. May be null if there are no parameters.\r\n     * @param queryParams\r\n     *\r\n     * the type of the result\r\n     * @param resultType\r\n     *\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    static list(context, urlTemplate, queryParams, resultType) {\r\n        return Service\r\n            .request(context, 'get', urlTemplate, queryParams)\r\n            .then(response => ((response.data)\r\n                ? response.data.items.item.map(item => Service.getEntity(resultType, item))\r\n                : []));\r\n    }\r\n\r\n    /**\r\n     * Helper method for performing POST request to NetLicensing API services. Finds and returns first suitable item\r\n     * with type resultType from the response.\r\n     *\r\n     * context for the NetLicensing API call\r\n     * @param context\r\n     *\r\n     * the REST URL template\r\n     * @param urlTemplate\r\n     *\r\n     * The REST query parameters values. May be null if there are no parameters.\r\n     * @param queryParams\r\n     *\r\n     * he type of the result\r\n     * @param resultType\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    static post(context, urlTemplate, queryParams, resultType) {\r\n        return Service\r\n            .request(context, 'post', urlTemplate, queryParams)\r\n            .then(response => ((response.data) ? Service.getEntity(resultType, response.data.items.item[0]) : null));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param context\r\n     * @param urlTemplate\r\n     * @param queryParams\r\n     * @returns {Promise}\r\n     */\r\n    static delete(context, urlTemplate, queryParams) {\r\n        return Service\r\n            .request(context, 'delete', urlTemplate, queryParams)\r\n            .then(response => (response.status === 204));\r\n    }\r\n\r\n    /**\r\n     * Send request to NetLicensing  RestApi\r\n     * @param context\r\n     * @param method\r\n     * @param urlTemplate\r\n     * @param queryParams\r\n     * @returns {Promise}\r\n     */\r\n    static request(context, method, urlTemplate, queryParams) {\r\n        if (!(context instanceof Context)) throw new TypeError('context must be an instance of NetLicensing.Context');\r\n\r\n        const template = String(urlTemplate);\r\n        const params = queryParams || {};\r\n\r\n        if (!template) throw new TypeError('Url template must be specified');\r\n\r\n        // validate http method\r\n        if (['get', 'post', 'delete'].indexOf(method.toLowerCase()) < 0) {\r\n            throw new Error(`Invalid request type:${method}, allowed requests types: GET, POST, DELETE.`);\r\n        }\r\n\r\n        // validate context\r\n        if (!context.getBaseUrl(null)) {\r\n            throw new Error('Base url must be specified');\r\n        }\r\n\r\n        if (!Service.isValidUrl(String(context.getBaseUrl()))) {\r\n            throw new Error(`Base url \"${context.getBaseUrl()}\" is not a valid URL`);\r\n        }\r\n\r\n        let restUrl = `${context.getBaseUrl()}/${urlTemplate}`;\r\n\r\n        restUrl = restUrl.replace(/([^:]\\/)\\/+/g, '$1');\r\n\r\n        // validate baseUrl +  urlTemplate\r\n        if (!Service.isValidUrl(String(restUrl))) {\r\n            throw new Error(`Rest url \"${restUrl}\" is not a valid URL`);\r\n        }\r\n\r\n        const request = {\r\n            url: restUrl,\r\n            method: method.toLowerCase(),\r\n            responseType: 'json',\r\n            headers: {},\r\n            transformRequest: [(data, headers) => {\r\n                if (headers['Content-Type'] === 'application/x-www-form-urlencoded') {\r\n                    return Service.toQueryString(data);\r\n                }\r\n                return data;\r\n            }],\r\n        };\r\n\r\n        if (['put', 'post', 'patch'].indexOf(request.method) >= 0) {\r\n            if (request.method === 'post') {\r\n                request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\r\n            }\r\n            request.data = params;\r\n        } else {\r\n            request.params = params;\r\n        }\r\n\r\n        switch (context.getSecurityMode()) {\r\n            // Basic Auth\r\n            case Constants.BASIC_AUTHENTICATION:\r\n                if (!context.getUsername()) throw new Error('Missing parameter \"username\"');\r\n                if (!context.getPassword()) throw new Error('Missing parameter \"password\"');\r\n\r\n                request.auth = {\r\n                    username: context.getUsername(),\r\n                    password: context.getPassword(),\r\n                };\r\n                break;\r\n            // ApiKey Auth\r\n            case Constants.APIKEY_IDENTIFICATION:\r\n                if (!context.getApiKey()) throw new Error('Missing parameter \"apiKey\"');\r\n\r\n                request.headers.Authorization = `Basic ${btoa(`apiKey:${context.getApiKey()}`)}`;\r\n                break;\r\n            default:\r\n                throw new Error('Unknown security mode');\r\n        }\r\n\r\n        return axios(request)\r\n            .then((response) => {\r\n                httpXHR = response;\r\n                return response;\r\n            })\r\n            .catch((error) => {\r\n                httpXHR = error;\r\n\r\n                if (error.response) {\r\n                    // The request was made and the server responded with a status code\r\n                    // that falls out of the range of 2xx\r\n                    const info = error.response.data.infos.info[0] || null;\r\n\r\n                    if (info && info.id === 'NotFoundException') {\r\n                        return Promise.resolve(null);\r\n                    }\r\n\r\n                    const reasonPhrase = info.value || 'Unknown';\r\n                    throw new Error(`Unsupported response status code ${error.response.status}: ${reasonPhrase}`);\r\n                }\r\n\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Create Entity from item\r\n     * @param resultType\r\n     * @param item\r\n     * @returns {*}\r\n     */\r\n    static getEntity(resultType, item) {\r\n        const properties = item.property || null;\r\n        const lists = item.list || null;\r\n\r\n        if (!resultType) return item;\r\n\r\n        // eslint-disable-next-line new-cap\r\n        const entity = new resultType();\r\n\r\n        if (!(entity instanceof BaseEntity)) {\r\n            throw new Error(`Invalid entity ${resultType}, entity must be instanceof BaseEntity`);\r\n        }\r\n\r\n        properties.forEach(({ name, value }) => {\r\n            entity.setProperty(name, value);\r\n        });\r\n\r\n        if (lists) {\r\n            lists.forEach(({ name, property }) => {\r\n                const setListMethod = `setList${name.charAt(0).toUpperCase()}${name.substr(1, name.length - 1)}`;\r\n                const setListsMethod = 'setLists';\r\n\r\n                if (typeof entity[setListMethod] !== 'function' && typeof entity[setListsMethod] !== 'function') {\r\n                    // eslint-disable-next-line no-console\r\n                    console.warn(`Methods: ${setListMethod},${setListsMethod} not found in ${item.type} \r\n                    for list property ${name}`);\r\n                    return;\r\n                }\r\n\r\n                if (typeof entity[setListMethod] === 'function') {\r\n                    entity[setListMethod](property);\r\n                    return;\r\n                }\r\n\r\n                if (typeof entity[setListsMethod] === 'function') {\r\n                    entity[setListsMethod](name, property);\r\n                }\r\n            });\r\n        }\r\n\r\n        return entity;\r\n    }\r\n\r\n    static isValidUrl(url) {\r\n        const pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.?)+[a-z]{2,}|' + // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n\r\n        return pattern.test(url);\r\n    }\r\n\r\n    static toQueryString(data, prefix) {\r\n        const query = [];\r\n\r\n        const has = Object.prototype.hasOwnProperty;\r\n\r\n        Object.keys(data).forEach((key) => {\r\n            if (has.call(data, key)) {\r\n                const k = prefix ? `${prefix}[${key}]` : key;\r\n                let v = data[key];\r\n                v = (v instanceof Date) ? v.toISOString() : v;\r\n                query.push((v !== null && typeof v === 'object') ?\r\n                    Service.toQueryString(v, k) :\r\n                    `${encodeURIComponent(k)}=${encodeURIComponent(v)}`);\r\n            }\r\n        });\r\n\r\n        return query.join('&').replace(/%5B[0-9]+%5D=/g, '=');\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * License entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing API:\r\n *\r\n * Unique number (across all products/licensees of a vendor) that identifies the license. Vendor can\r\n * assign this number when creating a license or let NetLicensing generate one. Read-only after corresponding creation\r\n * transaction status is set to closed.\r\n * @property string number\r\n *\r\n * Name for the licensed item. Set from license template on creation, if not specified explicitly.\r\n * @property string name\r\n *\r\n * If set to false, the license is disabled. License can be re-enabled, but as long as it is disabled,\r\n * the license is excluded from the validation process.\r\n * @property boolean active\r\n *\r\n * price for the license. If >0, it must always be accompanied by the currency specification. Read-only,\r\n * set from license template on creation.\r\n * @property float price\r\n *\r\n * specifies currency for the license price. Check data types to discover which currencies are\r\n * supported. Read-only, set from license template on creation.\r\n * @property string currency\r\n *\r\n * If set to true, this license is not shown in NetLicensing Shop as purchased license. Set from license\r\n * template on creation, if not specified explicitly.\r\n * @property boolean $hidden\r\n *\r\n * @property string startDate\r\n *\r\n * Arbitrary additional user properties of string type may be associated with each license. The name of user property\r\n * must not be equal to any of the fixed property names listed above and must be none of id, deleted, licenseeNumber,\r\n * licenseTemplateNumber.\r\n */\r\nexport default class License extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                name: 'string',\r\n                price: 'float',\r\n                hidden: 'boolean',\r\n                parentfeature: 'string',\r\n                timeVolume: 'int',\r\n                startDate: 'date',\r\n                inUse: 'boolean',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['inUse', 'currency', 'price'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines([\r\n            'number',\r\n            'active',\r\n            'name',\r\n            'hidden',\r\n            'parentfeature',\r\n            'timeVolume',\r\n            'startDate',\r\n            'inUse',\r\n            'currency',\r\n            'price',\r\n        ]);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setHidden(hidden) {\r\n        return this.setProperty('hidden', hidden);\r\n    }\r\n\r\n    getHidden(def) {\r\n        return this.getProperty('hidden', def);\r\n    }\r\n\r\n    setParentfeature(parentfeature) {\r\n        return this.setProperty('parentfeature', parentfeature);\r\n    }\r\n\r\n    getParentfeature(def) {\r\n        return this.getProperty('parentfeature', def);\r\n    }\r\n\r\n    setTimeVolume(timeVolume) {\r\n        return this.setProperty('timeVolume', timeVolume);\r\n    }\r\n\r\n    getTimeVolume(def) {\r\n        return this.getProperty('timeVolume', def);\r\n    }\r\n\r\n    setStartDate(startDate) {\r\n        return this.setProperty('startDate', startDate);\r\n    }\r\n\r\n    getStartDate(def) {\r\n        return this.getProperty('startDate', def);\r\n    }\r\n\r\n    getInUse(def) {\r\n        return this.getProperty('inUse', def);\r\n    }\r\n\r\n    getPrice(def) {\r\n        return this.getProperty('price', def);\r\n    }\r\n\r\n    getCurrency(def) {\r\n        return this.getProperty('currency', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\nimport LicenseTransactionJoin from './LicenseTransactionJoin';\r\nimport License from './License';\r\n\r\n/**\r\n * Transaction entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing API:\r\n *\r\n * Unique number (across all products of a vendor) that identifies the transaction. This number is\r\n * always generated by NetLicensing.\r\n * @property string number\r\n *\r\n * always true for transactions\r\n * @property boolean active\r\n *\r\n * Status of transaction. \"CANCELLED\", \"CLOSED\", \"PENDING\".\r\n * @property string status\r\n *\r\n * \"SHOP\". AUTO transaction for internal use only.\r\n * @property string source\r\n *\r\n * grand total for SHOP transaction (see source).\r\n * @property float grandTotal\r\n *\r\n * discount for SHOP transaction (see source).\r\n * @property float discount\r\n *\r\n * specifies currency for money fields (grandTotal and discount). Check data types to discover which\r\n * @property string currency\r\n *\r\n * Date created. Optional.\r\n * @property string dateCreated\r\n *\r\n * Date closed. Optional.\r\n * @property string dateClosed\r\n *\r\n * @constructor\r\n */\r\nexport default class Transaction extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                name: 'string',\r\n                status: 'string',\r\n                source: 'string',\r\n                grandTotal: 'float',\r\n                discount: 'float',\r\n                currency: 'string',\r\n                dateCreated: 'date',\r\n                dateClosed: 'date',\r\n                active: 'boolean',\r\n                paymentMethod: 'string',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['active'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines([\r\n            'number',\r\n            'name',\r\n            'status',\r\n            'source',\r\n            'grandTotal',\r\n            'discount',\r\n            'currency',\r\n            'dateCreated',\r\n            'dateClosed',\r\n            'paymentMethod',\r\n            'licenseTransactionJoins',\r\n        ]);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setStatus(status) {\r\n        return this.setProperty('status', status);\r\n    }\r\n\r\n    getStatus(def) {\r\n        return this.getProperty('status', def);\r\n    }\r\n\r\n    setSource(source) {\r\n        return this.setProperty('source', source);\r\n    }\r\n\r\n    getSource(def) {\r\n        return this.getProperty('source', def);\r\n    }\r\n\r\n    setGrandTotal(grandTotal) {\r\n        return this.setProperty('grandTotal', grandTotal);\r\n    }\r\n\r\n    getGrandTotal(def) {\r\n        return this.getProperty('grandTotal', def);\r\n    }\r\n\r\n    setDiscount(discount) {\r\n        return this.setProperty('discount', discount);\r\n    }\r\n\r\n    getDiscount(def) {\r\n        return this.getProperty('discount', def);\r\n    }\r\n\r\n    setCurrency(currency) {\r\n        return this.setProperty('currency', currency);\r\n    }\r\n\r\n    getCurrency(def) {\r\n        return this.getProperty('currency', def);\r\n    }\r\n\r\n    setDateCreated(dateCreated) {\r\n        return this.setProperty('dateCreated', dateCreated);\r\n    }\r\n\r\n    getDateCreated(def) {\r\n        return this.getProperty('dateCreated', def);\r\n    }\r\n\r\n    setDateClosed(dateClosed) {\r\n        return this.setProperty('dateClosed', dateClosed);\r\n    }\r\n\r\n    getDateClosed(def) {\r\n        return this.getProperty('dateClosed', def);\r\n    }\r\n\r\n    setPaymentMethod(paymentMethod) {\r\n        return this.setProperty('paymentMethod', paymentMethod);\r\n    }\r\n\r\n    getPaymentMethod(def) {\r\n        return this.getProperty('paymentMethod', def);\r\n    }\r\n\r\n    setActive() {\r\n        return this.setProperty('active', true);\r\n    }\r\n\r\n    getLicenseTransactionJoins(def) {\r\n        return this.getProperty('licenseTransactionJoins', def);\r\n    }\r\n\r\n    setLicenseTransactionJoins(licenseTransactionJoins) {\r\n        return this.setProperty('licenseTransactionJoins', licenseTransactionJoins);\r\n    }\r\n\r\n    setListLicenseTransactionJoin(properties) {\r\n        if (!properties) return;\r\n\r\n        const licenseTransactionJoins = this.getProperty('licenseTransactionJoins', []);\r\n        const licenseTransactionJoin = new LicenseTransactionJoin();\r\n\r\n        properties.forEach((property) => {\r\n            if (property.name === 'licenseNumber') {\r\n                licenseTransactionJoin.setLicense(new License({ number: property.value }));\r\n            }\r\n\r\n            if (property.name === 'transactionNumber') {\r\n                licenseTransactionJoin.setTransaction(new Transaction({ number: property.value }));\r\n            }\r\n        });\r\n\r\n        licenseTransactionJoins.push(licenseTransactionJoin);\r\n        this.setProperty('licenseTransactionJoins', licenseTransactionJoins);\r\n    }\r\n}\r\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * Country entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing  API:\r\n *\r\n * @property code - Unique code of country.\r\n *\r\n * @property name - Unique name of country\r\n *\r\n * @property vatPercent - Country vat.\r\n *\r\n * @property isEu - is country in EU.\r\n */\r\nexport default class Country extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                code: 'string',\r\n                name: 'string',\r\n                vatPercent: 'int',\r\n                isEu: 'boolean',\r\n            },\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines(['code', 'name', 'vatPercent', 'isEu']);\r\n    }\r\n\r\n    setCode(code) {\r\n        return this.setProperty('code', code);\r\n    }\r\n\r\n    getCode(def) {\r\n        return this.getProperty('code', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setVatPercent(vat) {\r\n        return this.setProperty('vatPercent', vat);\r\n    }\r\n\r\n    getVatPercent(def) {\r\n        return this.getProperty('vatPercent', def);\r\n    }\r\n\r\n    setIsEu(isEu) {\r\n        return this.setProperty('isEu', isEu);\r\n    }\r\n\r\n    getIsEu(def) {\r\n        return this.getProperty('isEu', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\nimport Transaction from './Transaction';\r\nimport License from './License';\r\n\r\n// const\r\n\r\nexport default class LicenseTransactionJoin {\r\n    constructor(transaction, license) {\r\n        this.transaction = transaction;\r\n        this.license = license;\r\n    }\r\n\r\n    setTransaction(transaction) {\r\n        if (!(transaction instanceof Transaction)) {\r\n            throw new TypeError('context must be an instance of Transaction');\r\n        }\r\n\r\n        this.transaction = transaction;\r\n        return this;\r\n    }\r\n\r\n    getTransaction(def) {\r\n        return this.transaction || def;\r\n    }\r\n\r\n    setLicense(license) {\r\n        if (!(license instanceof License)) {\r\n            throw new TypeError('context must be an instance of License');\r\n        }\r\n        this.license = license;\r\n        return this;\r\n    }\r\n\r\n    getLicense(def) {\r\n        return this.license || def;\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * Product module entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing API:\r\n *\r\n * Unique number\r\n * @property string number\r\n *\r\n * If set to false, the token is disabled.\r\n * @property boolean active\r\n *\r\n * Expiration Time\r\n * @property string expirationTime\r\n *\r\n * @property string vendorNumber\r\n *\r\n * Token type to be generated.\r\n * DEFAULT - default one-time token (will be expired after first request)\r\n * SHOP - shop token is used to redirect customer to the netlicensingShop(licenseeNumber is mandatory)\r\n * APIKEY - APIKey-token\r\n * @property string tokenType\r\n *\r\n * @property string licenseeNumber\r\n *\r\n * @constructor\r\n */\r\nexport default class Token extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                expirationTime: 'date',\r\n                vendorNumber: 'string',\r\n                tokenType: 'string',\r\n                licenseeNumber: 'string',\r\n                successURL: 'string',\r\n                successURLTitle: 'string',\r\n                cancelURL: 'string',\r\n                cancelURLTitle: 'string',\r\n                shopURL: 'string',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['number', 'shopURL'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines([\r\n            'number',\r\n            'active',\r\n            'expirationTime',\r\n            'vendorNumber',\r\n            'tokenType',\r\n            'licenseeNumber',\r\n            'successURL',\r\n            'successURLTitle',\r\n            'cancelURL',\r\n            'cancelURLTitle',\r\n            'shopURL',\r\n        ]);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setExpirationTime(expirationTime) {\r\n        return this.setProperty('expirationTime', expirationTime);\r\n    }\r\n\r\n    getExpirationTime(def) {\r\n        return this.getProperty('expirationTime', def);\r\n    }\r\n\r\n    setVendorNumber(vendorNumber) {\r\n        return this.setProperty('vendorNumber', vendorNumber);\r\n    }\r\n\r\n    getVendorNumber(def) {\r\n        return this.getProperty('vendorNumber', def);\r\n    }\r\n\r\n    setTokenType(tokenType) {\r\n        return this.setProperty('tokenType', tokenType);\r\n    }\r\n\r\n    getTokenType(def) {\r\n        return this.getProperty('tokenType', def);\r\n    }\r\n\r\n    setLicenseeNumber(licenseeNumber) {\r\n        return this.setProperty('licenseeNumber', licenseeNumber);\r\n    }\r\n\r\n    getLicenseeNumber(def) {\r\n        return this.getProperty('licenseeNumber', def);\r\n    }\r\n\r\n    setSuccessURL(successURL) {\r\n        return this.setProperty('successURL', successURL);\r\n    }\r\n\r\n    getSuccessURL(def) {\r\n        return this.getProperty('successURL', def);\r\n    }\r\n\r\n    setSuccessURLTitle(successURLTitle) {\r\n        return this.setProperty('successURLTitle', successURLTitle);\r\n    }\r\n\r\n    getSuccessURLTitle(def) {\r\n        return this.getProperty('successURLTitle', def);\r\n    }\r\n\r\n    setCancelURL(cancelURL) {\r\n        return this.setProperty('cancelURL', cancelURL);\r\n    }\r\n\r\n    getCancelURL(def) {\r\n        return this.getProperty('cancelURL', def);\r\n    }\r\n\r\n    setCancelURLTitle(cancelURLTitle) {\r\n        return this.setProperty('cancelURLTitle', cancelURLTitle);\r\n    }\r\n\r\n    getCancelURLTitle(def) {\r\n        return this.getProperty('cancelURLTitle', def);\r\n    }\r\n\r\n    getShopURL(def) {\r\n        return this.getProperty('shopURL', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\nimport BaseEntity from './BaseEntity';\r\n\r\nexport default class ProductDiscount extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                totalPrice: 'float',\r\n                currency: 'string',\r\n                amountFix: 'float',\r\n                amountPercent: 'int',\r\n            },\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines(['totalPrice', 'currency', 'amountFix', 'amountPercent']);\r\n    }\r\n\r\n    setTotalPrice(totalPrice) {\r\n        return this.setProperty('totalPrice', totalPrice);\r\n    }\r\n\r\n    getTotalPrice(def) {\r\n        return this.getProperty('totalPrice', def);\r\n    }\r\n\r\n    setCurrency(currency) {\r\n        return this.setProperty('currency', currency);\r\n    }\r\n\r\n    getCurrency(def) {\r\n        return this.getProperty('currency', def);\r\n    }\r\n\r\n    setAmountFix(amountFix) {\r\n        return this.setProperty('amountFix', amountFix).removeProperty('amountPercent');\r\n    }\r\n\r\n    getAmountFix(def) {\r\n        return this.getProperty('amountFix', def);\r\n    }\r\n\r\n    setAmountPercent(amountPercent) {\r\n        return this.setProperty('amountPercent', amountPercent).removeProperty('amountFix');\r\n    }\r\n\r\n    getAmountPercent(def) {\r\n        return this.getProperty('amountPercent', def);\r\n    }\r\n\r\n    toString() {\r\n        const totalPrice = this.getTotalPrice();\r\n        const currency = this.getCurrency();\r\n        let amount = 0;\r\n\r\n        if (this.getAmountFix(null)) amount = this.getAmountFix();\r\n        if (this.getAmountPercent(null)) amount = `${this.getAmountPercent()}%`;\r\n\r\n        return `${totalPrice};${currency};${amount}`;\r\n    }\r\n}\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\nimport ProductDiscount from './ProductDiscount';\r\n\r\n/**\r\n * The discounts map\r\n * @type {{}}\r\n * @private\r\n */\r\nconst discountsMap = new WeakMap();\r\n\r\n/**\r\n * An identifier that show if discounts was touched\r\n * @type {{}}\r\n * @private\r\n */\r\nconst discountsTouched = new WeakMap();\r\n\r\n/**\r\n * NetLicensing  Product entity.\r\n *\r\n * Properties visible via NetLicensing  API:\r\n *\r\n * Unique number that identifies the product. Vendor can assign this number when creating a product or\r\n * let NetLicensing  generate one. Read-only after creation of the first licensee for the product.\r\n * @property string number\r\n *\r\n * If set to false, the product is disabled. No new licensees can be registered for the product,\r\n * existing licensees can not obtain new licenses.\r\n * @property boolean active\r\n *\r\n * Product name. Together with the version identifies the product for the end customer.\r\n * @property string name\r\n *\r\n * Product version. Convenience parameter, additional to the product name.\r\n * @property float version\r\n *\r\n * If set to 'true', non-existing licensees will be created at first validation attempt.\r\n * @property boolean licenseeAutoCreate\r\n *\r\n * Licensee secret mode for product.Supported types: \"DISABLED\", \"PREDEFINED\", \"CLIENT\"\r\n * @property boolean licenseeSecretMode\r\n *\r\n * Product description. Optional.\r\n * @property string description\r\n *\r\n * Licensing information. Optional.\r\n * @property string licensingInfo\r\n *\r\n * @property boolean inUse\r\n *\r\n * Arbitrary additional user properties of string type may be associated with each product. The name of user property\r\n * must not be equal to any of the fixed property names listed above and must be none of id, deleted.\r\n *\r\n * @constructor\r\n */\r\nexport default class Product extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                name: 'string',\r\n                version: 'string',\r\n                description: 'string',\r\n                licensingInfo: 'string',\r\n                licenseeAutoCreate: 'boolean',\r\n                licenseeSecretMode: 'string',\r\n                inUse: 'boolean',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['inUse'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines([\r\n            'number',\r\n            'active',\r\n            'name',\r\n            'version',\r\n            'description',\r\n            'licensingInfo',\r\n            'licenseeAutoCreate',\r\n            'licenseeSecretMode',\r\n            'inUse',\r\n        ]);\r\n\r\n        discountsMap.set(this, []);\r\n        discountsTouched.set(this, false);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setVersion(version) {\r\n        return this.setProperty('version', version);\r\n    }\r\n\r\n    getVersion(def) {\r\n        return this.getProperty('version', def);\r\n    }\r\n\r\n    setLicenseeAutoCreate(licenseeAutoCreate) {\r\n        return this.setProperty('licenseeAutoCreate', licenseeAutoCreate);\r\n    }\r\n\r\n    getLicenseeAutoCreate(def) {\r\n        return this.getProperty('licenseeAutoCreate', def);\r\n    }\r\n\r\n    setLicenseeSecretMode(licenseeSecretMode) {\r\n        return this.setProperty('licenseeSecretMode', licenseeSecretMode);\r\n    }\r\n\r\n    getLicenseeSecretMode(def) {\r\n        return this.getProperty('licenseeSecretMode', def);\r\n    }\r\n\r\n    setDescription(description) {\r\n        return this.setProperty('description', description);\r\n    }\r\n\r\n    getDescription(def) {\r\n        return this.getProperty('description', def);\r\n    }\r\n\r\n    setLicensingInfo(licensingInfo) {\r\n        return this.setProperty('licensingInfo', licensingInfo);\r\n    }\r\n\r\n    getLicensingInfo(def) {\r\n        return this.getProperty('licensingInfo', def);\r\n    }\r\n\r\n    getInUse(def) {\r\n        return this.getProperty('inUse', def);\r\n    }\r\n\r\n    /**\r\n     * Add discount to product\r\n     *\r\n     * @param discount NetLicensing.ProductDiscount\r\n     * @returns {NetLicensing.Product}\r\n     */\r\n    addDiscount(discount) {\r\n        if (!(discount instanceof ProductDiscount)) {\r\n            throw new TypeError('discount must be an instance of ProductDiscount');\r\n        }\r\n\r\n        const discounts = discountsMap.get(this);\r\n        discounts.push(discount);\r\n        discountsMap.set(this, discounts);\r\n        discountsTouched.set(this, true);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set discounts to product\r\n     * @param discounts\r\n     */\r\n    setProductDiscounts(discounts) {\r\n        discountsMap.set(this, []);\r\n        discountsTouched.set(this, true);\r\n\r\n        if (!discounts) return this;\r\n\r\n        if (Array.isArray(discounts)) {\r\n            discounts.forEach((discount) => {\r\n                this.addDiscount(discount);\r\n            });\r\n\r\n            return this;\r\n        }\r\n\r\n        this.addDiscount(discounts);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get array of objects discounts\r\n     * @returns {Array}\r\n     */\r\n    getProductDiscounts() {\r\n        return Object.assign([], discountsMap.get(this));\r\n    }\r\n\r\n    setListDiscount(properties) {\r\n        if (!properties) return;\r\n\r\n        const discount = new ProductDiscount();\r\n        properties.forEach((property) => {\r\n            discount.setProperty(property.name, property.value);\r\n        });\r\n        this.addDiscount(discount);\r\n    }\r\n\r\n    asPropertiesMap() {\r\n        const propertiesMap = super.asPropertiesMap();\r\n\r\n        if (discountsMap.get(this).length) {\r\n            propertiesMap.discount = discountsMap.get(this).map(discount => discount.toString());\r\n        }\r\n\r\n        if (!propertiesMap.discount && discountsTouched.get(this)) {\r\n            propertiesMap.discount = '';\r\n        }\r\n\r\n        return propertiesMap;\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * Product module entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing API:\r\n *\r\n * Unique number (across all products of a vendor) that identifies the product module. Vendor can assign\r\n * this number when creating a product module or let NetLicensing generate one. Read-only after creation of the first\r\n * licensee for the product.\r\n * @property string number\r\n *\r\n * If set to false, the product module is disabled. Licensees can not obtain any new licenses for this\r\n * product module.\r\n * @property boolean active\r\n *\r\n * Product module name that is visible to the end customers in NetLicensing Shop.\r\n * @property string name\r\n *\r\n * Licensing model applied to this product module. Defines what license templates can be\r\n * configured for the product module and how licenses for this product module are processed during validation.\r\n * @property string licensingModel\r\n *\r\n * Maximum checkout validity (days). Mandatory for 'Floating' licensing model.\r\n * @property integer maxCheckoutValidity\r\n *\r\n * Remaining time volume for yellow level. Mandatory for 'Rental' licensing model.\r\n * @property integer yellowThreshold\r\n *\r\n * Remaining time volume for red level. Mandatory for 'Rental' licensing model.\r\n * @property integer redThreshold\r\n *\r\n * License template. Mandatory for 'Try & Buy' licensing model. Supported types: \"TIMEVOLUME\", \"FEATURE\".\r\n * @property string licenseTemplate\r\n *\r\n * @constructor\r\n */\r\nexport default class ProductModule extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                name: 'string',\r\n                licensingModel: 'string',\r\n                maxCheckoutValidity: 'int',\r\n                yellowThreshold: 'int',\r\n                redThreshold: 'int',\r\n                licenseTemplate: 'string',\r\n                inUse: 'boolean',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['inUse'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines([\r\n            'number',\r\n            'active',\r\n            'name',\r\n            'licensingModel',\r\n            'maxCheckoutValidity',\r\n            'yellowThreshold',\r\n            'redThreshold',\r\n            'licenseTemplate',\r\n            'inUse',\r\n        ]);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setLicensingModel(licensingModel) {\r\n        return this.setProperty('licensingModel', licensingModel);\r\n    }\r\n\r\n    getLicensingModel(def) {\r\n        return this.getProperty('licensingModel', def);\r\n    }\r\n\r\n    setMaxCheckoutValidity(maxCheckoutValidity) {\r\n        return this.setProperty('maxCheckoutValidity', maxCheckoutValidity);\r\n    }\r\n\r\n    getMaxCheckoutValidity(def) {\r\n        return this.getProperty('maxCheckoutValidity', def);\r\n    }\r\n\r\n    setYellowThreshold(yellowThreshold) {\r\n        return this.setProperty('yellowThreshold', yellowThreshold);\r\n    }\r\n\r\n    getYellowThreshold(def) {\r\n        return this.getProperty('yellowThreshold', def);\r\n    }\r\n\r\n    setRedThreshold(redThreshold) {\r\n        return this.setProperty('redThreshold', redThreshold);\r\n    }\r\n\r\n    getRedThreshold(def) {\r\n        return this.getProperty('redThreshold', def);\r\n    }\r\n\r\n    setLicenseTemplate(licenseTemplate) {\r\n        return this.setProperty('licenseTemplate', licenseTemplate);\r\n    }\r\n\r\n    getLicenseTemplate(def) {\r\n        return this.getProperty('licenseTemplate', def);\r\n    }\r\n\r\n    getInUse(def) {\r\n        return this.getProperty('inUse', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * PaymentMethod entity used internally by NetLicensing.\r\n *\r\n * @property string number\r\n * @property boolean active\r\n *\r\n * @constructor\r\n */\r\nexport default class PaymentMethod extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                'paypal.subject': 'string',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['inUse'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines(['number', 'active', 'paypal.subject']);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setPaypalSubject(paypalSubject) {\r\n        return this.setProperty('paypal.subject', paypalSubject);\r\n    }\r\n\r\n    getPaypalSubject(def) {\r\n        return this.getProperty('paypal.subject', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * License template entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing  API:\r\n *\r\n * Unique number (across all products of a vendor) that identifies the license template. Vendor can\r\n * assign this number when creating a license template or let NetLicensing  generate one.\r\n * Read-only after creation of the first license from this license template.\r\n * @property string number\r\n *\r\n * If set to false, the license template is disabled. Licensee can not obtain any new licenses off this\r\n * license template.\r\n * @property boolean active\r\n *\r\n * Name for the licensed item.\r\n * @property string name\r\n *\r\n * Type of licenses created from this license template. Supported types: \"FEATURE\", \"TIMEVOLUME\",\r\n * \"FLOATING\", \"QUANTITY\"\r\n * @property string licenseType\r\n *\r\n * Price for the license. If >0, it must always be accompanied by the currency specification.\r\n * @property double price\r\n *\r\n * Specifies currency for the license price. Check data types to discover which currencies are\r\n * supported.\r\n * @property string currency\r\n *\r\n * If set to true, every new licensee automatically gets one license out of this license template on\r\n * creation. Automatic licenses must have their price set to 0.\r\n * @property boolean automatic\r\n *\r\n * If set to true, this license template is not shown in NetLicensing  Shop as offered for purchase.\r\n * @property boolean hidden\r\n *\r\n * If set to true, licenses from this license template are not visible to the end customer, but\r\n * participate in validation.\r\n * @property boolean hideLicenses\r\n *\r\n * Mandatory for 'TIMEVOLUME' license type.\r\n * @property integer timeVolume\r\n *\r\n * Mandatory for 'FLOATING' license type.\r\n * @property integer maxSessions\r\n *\r\n * Mandatory for 'QUANTITY' license type.\r\n * @property integer quantity\r\n *\r\n * @constructor\r\n */\r\nexport default class LicenseTemplate extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                name: 'string',\r\n                licenseType: 'string',\r\n                price: 'double',\r\n                currency: 'string',\r\n                automatic: 'boolean',\r\n                hidden: 'boolean',\r\n                hideLicenses: 'boolean',\r\n                timeVolume: 'int',\r\n                maxSessions: 'int',\r\n                quantity: 'int',\r\n                inUse: 'boolean',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['inUse'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines([\r\n            'number',\r\n            'active',\r\n            'name',\r\n            'licenseType',\r\n            'price',\r\n            'currency',\r\n            'automatic',\r\n            'hidden',\r\n            'hideLicenses',\r\n            'timeVolume',\r\n            'maxSessions',\r\n            'quantity',\r\n            'inUse',\r\n        ]);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setLicenseType(licenseType) {\r\n        return this.setProperty('licenseType', licenseType);\r\n    }\r\n\r\n    getLicenseType(def) {\r\n        return this.getProperty('licenseType', def);\r\n    }\r\n\r\n    setPrice(price) {\r\n        return this.setProperty('price', price);\r\n    }\r\n\r\n    getPrice(def) {\r\n        return this.getProperty('price', def);\r\n    }\r\n\r\n    setCurrency(currency) {\r\n        return this.setProperty('currency', currency);\r\n    }\r\n\r\n    getCurrency(def) {\r\n        return this.getProperty('currency', def);\r\n    }\r\n\r\n    setAutomatic(automatic) {\r\n        return this.setProperty('automatic', automatic);\r\n    }\r\n\r\n    getAutomatic(def) {\r\n        return this.getProperty('automatic', def);\r\n    }\r\n\r\n    setHidden(hidden) {\r\n        return this.setProperty('hidden', hidden);\r\n    }\r\n\r\n    getHidden(def) {\r\n        return this.getProperty('hidden', def);\r\n    }\r\n\r\n    setHideLicenses(hideLicenses) {\r\n        return this.setProperty('hideLicenses', hideLicenses);\r\n    }\r\n\r\n    getHideLicenses(def) {\r\n        return this.getProperty('hideLicenses', def);\r\n    }\r\n\r\n    setTimeVolume(timeVolume) {\r\n        return this.setProperty('timeVolume', timeVolume);\r\n    }\r\n\r\n    getTimeVolume(def) {\r\n        return this.getProperty('timeVolume', def);\r\n    }\r\n\r\n    setMaxSessions(maxSessions) {\r\n        return this.setProperty('maxSessions', maxSessions);\r\n    }\r\n\r\n    getMaxSessions(def) {\r\n        return this.getProperty('maxSessions', def);\r\n    }\r\n\r\n    setQuantity(quantity) {\r\n        return this.setProperty('quantity', quantity);\r\n    }\r\n\r\n    getQuantity(def) {\r\n        return this.getProperty('quantity', def);\r\n    }\r\n\r\n    getInUse(def) {\r\n        return this.getProperty('inUse', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport CheckUtils from '../util/CheckUtils';\r\n\r\n/**\r\n * Validation result map\r\n * @type {WeakMap<Object, any>}\r\n */\r\nconst vr = new WeakMap();\r\n\r\nexport default class ValidationResults {\r\n    constructor() {\r\n        vr.set(this, { validators: {} });\r\n    }\r\n\r\n    getValidators() {\r\n        return Object.assign({}, vr.get(this).validators);\r\n    }\r\n\r\n    setProductModuleValidation(productModuleNumber, productModuleValidation) {\r\n        if (!CheckUtils.isValid(productModuleNumber) || typeof productModuleNumber === 'object') {\r\n            throw new TypeError(`Bad productModuleNumber:${productModuleNumber}`);\r\n        }\r\n\r\n        vr.get(this).validators[productModuleNumber] = productModuleValidation;\r\n\r\n        return this;\r\n    }\r\n\r\n    getProductModuleValidation(productModuleNumber) {\r\n        if (!CheckUtils.isValid(productModuleNumber) || typeof productModuleNumber === 'object') {\r\n            throw new TypeError(`Bad productModuleNumber:${productModuleNumber}`);\r\n        }\r\n\r\n        return vr.get(this).validators[productModuleNumber];\r\n    }\r\n\r\n    setTtl(ttl) {\r\n        if (!CheckUtils.isValid(ttl) || typeof ttl === 'object') {\r\n            throw new TypeError(`Bad ttl:${ttl}`);\r\n        }\r\n        vr.get(this).ttl = new Date(String(ttl));\r\n\r\n        return this;\r\n    }\r\n\r\n    getTtl() {\r\n        return (vr.get(this).ttl) ? new Date(vr.get(this).ttl) : undefined;\r\n    }\r\n\r\n    toString() {\r\n        let data = 'ValidationResult [';\r\n\r\n        const validators = this.getValidators();\r\n        const has = Object.prototype.hasOwnProperty;\r\n\r\n        Object.keys(validators).forEach((productModuleNumber) => {\r\n            data += `ProductModule<${productModuleNumber}>`;\r\n            if (has.call(validators, productModuleNumber)) {\r\n                data += JSON.stringify(validators[productModuleNumber]);\r\n            }\r\n        });\r\n\r\n        data += ']';\r\n\r\n        return data;\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\n/**\r\n * Validation parameters map\r\n *\r\n * @type {WeakMap<Object, any>}\r\n */\r\nconst vpMap = new WeakMap();\r\n\r\nexport default class ValidationParameters {\r\n    constructor() {\r\n        vpMap.set(this, { parameters: {} });\r\n    }\r\n\r\n    /**\r\n     * Sets the target product\r\n     *\r\n     * optional productNumber, must be provided in case licensee auto-create is enabled\r\n     * @param productNumber\r\n     * @returns {ValidationParameters}\r\n     */\r\n    setProductNumber(productNumber) {\r\n        vpMap.get(this).productNumber = productNumber;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get the target product\r\n     * @returns {*}\r\n     */\r\n    getProductNumber() {\r\n        return vpMap.get(this).productNumber;\r\n    }\r\n\r\n    /**\r\n     * Sets the name for the new licensee\r\n     *\r\n     * optional human-readable licensee name in case licensee will be auto-created. This parameter must not\r\n     * be the name, but can be used to store any other useful string information with new licensees, up to\r\n     * 1000 characters.\r\n     * @param licenseeName\r\n     * @returns {NetLicensing.ValidationParameters}\r\n     */\r\n    setLicenseeName(licenseeName) {\r\n        vpMap.get(this).licenseeName = licenseeName;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get the licensee name\r\n     * @returns {*}\r\n     */\r\n    getLicenseeName() {\r\n        return vpMap.get(this).licenseeName;\r\n    }\r\n\r\n    /**\r\n     * Sets the licensee secret\r\n     *\r\n     * licensee secret stored on the client side. Refer to Licensee Secret documentation for details.\r\n     * @param licenseeSecret\r\n     * @returns {ValidationParameters}\r\n     */\r\n    setLicenseeSecret(licenseeSecret) {\r\n        vpMap.get(this).licenseeSecret = licenseeSecret;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get the licensee secret\r\n     * @returns {*}\r\n     */\r\n    getLicenseeSecret() {\r\n        return vpMap.get(this).licenseeSecret;\r\n    }\r\n\r\n    /**\r\n     * Get validation parameters\r\n     * @returns {*}\r\n     */\r\n    getParameters() {\r\n        return Object.assign({}, vpMap.get(this).parameters);\r\n    }\r\n\r\n    getProductModuleValidationParameters(productModuleNumber) {\r\n        return Object.assign({}, vpMap.get(this).parameters[productModuleNumber]);\r\n    }\r\n\r\n    setProductModuleValidationParameters(productModuleNumber, productModuleParameters) {\r\n        const { parameters } = vpMap.get(this);\r\n\r\n        if (parameters[productModuleNumber] === undefined || !Object.keys(parameters[productModuleNumber]).length) {\r\n            parameters[productModuleNumber] = {};\r\n        }\r\n\r\n        parameters[productModuleNumber] = Object.assign(parameters[productModuleNumber], productModuleParameters);\r\n\r\n        return this;\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport BaseEntity from './BaseEntity';\r\n\r\n/**\r\n * Licensee entity used internally by NetLicensing.\r\n *\r\n * Properties visible via NetLicensing  API:\r\n *\r\n * Unique number (across all products of a vendor) that identifies the licensee. Vendor can assign this\r\n * number when creating a licensee or let NetLicensing  generate one. Read-only after creation of the first license for\r\n * the licensee.\r\n * @property string number\r\n *\r\n * Licensee name.\r\n * @property string name\r\n *\r\n * If set to false, the licensee is disabled. Licensee can not obtain new licenses, and validation is\r\n * disabled (tbd).\r\n * @property boolean active\r\n *\r\n * Licensee Secret for licensee\r\n * @property string licenseeSecret\r\n *\r\n * Mark licensee for transfer.\r\n * @property boolean markedForTransfer\r\n *\r\n * Arbitrary additional user properties of string type may be associated with each licensee. The name of user property\r\n * must not be equal to any of the fixed property names listed above and must be none of id, deleted, productNumber\r\n *\r\n * @constructor\r\n */\r\nexport default class Licensee extends BaseEntity {\r\n    constructor(properties) {\r\n        super({\r\n            properties,\r\n            // The attributes that should be cast to native types.\r\n            casts: {\r\n                number: 'string',\r\n                active: 'boolean',\r\n                name: 'string',\r\n                licenseeSecret: 'string',\r\n                markedForTransfer: 'boolean',\r\n                inUse: 'boolean',\r\n            },\r\n            // The attributes that should have read-only access.\r\n            readOnly: ['inUse'],\r\n        });\r\n\r\n        // define default entity properties\r\n        this.defines(['number', 'active', 'name', 'licenseeSecret', 'markedForTransfer', 'inUse']);\r\n    }\r\n\r\n    setNumber(number) {\r\n        return this.setProperty('number', number);\r\n    }\r\n\r\n    getNumber(def) {\r\n        return this.getProperty('number', def);\r\n    }\r\n\r\n    setActive(active) {\r\n        return this.setProperty('active', active);\r\n    }\r\n\r\n    getActive(def) {\r\n        return this.getProperty('active', def);\r\n    }\r\n\r\n    setName(name) {\r\n        return this.setProperty('name', name);\r\n    }\r\n\r\n    getName(def) {\r\n        return this.getProperty('name', def);\r\n    }\r\n\r\n    setLicenseeSecret(licenseeSecret) {\r\n        return this.setProperty('licenseeSecret', licenseeSecret);\r\n    }\r\n\r\n    getLicenseeSecret(def) {\r\n        return this.getProperty('licenseeSecret', def);\r\n    }\r\n\r\n    setMarkedForTransfer(markedForTransfer) {\r\n        return this.setProperty('markedForTransfer', markedForTransfer);\r\n    }\r\n\r\n    getMarkedForTransfer(def) {\r\n        return this.getProperty('markedForTransfer', def);\r\n    }\r\n\r\n    getInUse(def) {\r\n        return this.getProperty('inUse', def);\r\n    }\r\n}\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\n// Cast an attribute to a native JS type.\r\nexport default (key, value) => {\r\n    switch (key.trim().toLowerCase()) {\r\n        case 'str':\r\n        case 'string':\r\n            return String(value);\r\n        case 'int':\r\n        case 'integer':\r\n            return parseInt(value, 10);\r\n        case 'float':\r\n        case 'double':\r\n            return parseFloat(value);\r\n        case 'bool':\r\n        case 'boolean':\r\n            switch (value) {\r\n                case 'true':\r\n                case 'TRUE':\r\n                    return true;\r\n                case 'false':\r\n                case 'FALSE':\r\n                    return false;\r\n                default:\r\n                    return Boolean(value);\r\n            }\r\n        case 'date':\r\n            return (value === 'now') ? 'now' : new Date(String(value));\r\n        default:\r\n            return value;\r\n    }\r\n};\r\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport Country from '../entities/Country';\r\nimport FilterUtils from '../util/FilterUtils';\r\n\r\n/**\r\n * JS representation of the Utility Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NetLicensing PUB/Utility+Services\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Returns all license types. See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Utility+Services#UtilityServices-LicenseTypeslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * array of available license types or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    listLicenseTypes(context) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .list(context, `${Constants.Utility.ENDPOINT_PATH}/licenseTypes`)\r\n            .then(items => items.map(item => item.property[0].value));\r\n    },\r\n\r\n    /**\r\n     * Returns all license models. See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Utility+Services#UtilityServices-LicensingModelslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * array of available license models or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    listLicensingModels(context) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .list(context, `${Constants.Utility.ENDPOINT_PATH}/licensingModels`)\r\n            .then(items => items.map(item => item.property[0].value));\r\n    },\r\n\r\n    /**\r\n     * Returns all countries.\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter\r\n     *\r\n     * collection of available countries or null/empty list if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    listCountries(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = typeof filter === 'string' ? filter : FilterUtils.encode(filter);\r\n        }\r\n\r\n        return Service\r\n            .list(context, `${Constants.Utility.ENDPOINT_PATH}/countries`, queryParams, Country);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport Transaction from '../entities/Transaction';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport FilterUtils from '../util/FilterUtils';\r\n\r\n/**\r\n * JS representation of the Transaction Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NetLicensing PUB/Transaction+Services\r\n *\r\n * Transaction is created each time change to  LicenseService licenses happens. For instance licenses are\r\n * obtained by a licensee, licenses disabled by vendor, licenses deleted, etc. Transaction is created no matter what\r\n * source has initiated the change to licenses: it can be either a direct purchase of licenses by a licensee via\r\n * NetLicensing Shop, or licenses can be given to a licensee by a vendor. Licenses can also be assigned implicitly by\r\n * NetLicensing if it is defined so by a license model (e.g. evaluation license may be given automatically). All these\r\n * events are reflected in transactions. Of all the transaction handling routines only read-only routines are exposed to\r\n * the public API, as transactions are only allowed to be created and modified by NetLicensing internally.\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new transaction object with given properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Transaction+Services#TransactionServices-Createtransaction\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * non-null properties will be taken for the new object, null properties will either stay null, or will\r\n     * be set to a default value, depending on property.\r\n     * @param transaction NetLicensing.Transaction\r\n     *\r\n     * return the newly created transaction object in promise\r\n     * @returns {Promise}\r\n     */\r\n    create(context, transaction) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(transaction instanceof Transaction)) {\r\n            throw new TypeError('transaction must be an instance of Transaction');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .post(context, Constants.Transaction.ENDPOINT_PATH, transaction.asPropertiesMap(), Transaction);\r\n    },\r\n\r\n    /**\r\n     * Gets transaction by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Transaction+Services#TransactionServices-Gettransaction\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the transaction number\r\n     * @param number string\r\n     *\r\n     * return the transaction in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .get(context, `${Constants.Transaction.ENDPOINT_PATH}/${number}`, {}, Transaction);\r\n    },\r\n\r\n    /**\r\n     * Returns all transactions of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Transaction+Services#TransactionServices-Transactionslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string\r\n     *\r\n     * array of transaction entities or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = typeof filter === 'string' ? filter : FilterUtils.encode(filter);\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.Transaction.ENDPOINT_PATH, queryParams, Transaction);\r\n    },\r\n\r\n    /**\r\n     * Updates transaction properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Transaction+Services#TransactionServices-Updatetransaction\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * transaction number\r\n     * @param number string\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param transaction NetLicensing.Transaction\r\n     *\r\n     * return updated transaction in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, transaction) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of NetLicensing.Context');\r\n        }\r\n\r\n        if (!(transaction instanceof Transaction)) {\r\n            throw new TypeError('transaction must be an instance of NetLicensing.Transaction');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const path = `${Constants.Transaction.ENDPOINT_PATH}/${number}`;\r\n\r\n        return Service\r\n            .post(context, path, transaction.asPropertiesMap(), Transaction);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport Token from '../entities/Token';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport FilterUtils from '../util/FilterUtils';\r\n\r\n/**\r\n * JS representation of the Token Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NetLicensing PUB/Token+Services\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new token.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Token+Services#TokenServices-Createtoken\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param token NetLicensing.Token\r\n     *\r\n     * return created token in promise\r\n     * @returns {Promise}\r\n     */\r\n    create(context, token) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(token instanceof Token)) {\r\n            throw new TypeError('token must be an instance of Token');\r\n        }\r\n\r\n        return Service\r\n            .post(context, Constants.Token.ENDPOINT_PATH, token.asPropertiesMap(), Token);\r\n    },\r\n\r\n    /**\r\n     * Gets token by its number..See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/conluence/display/NetLicensing PUB/Token+Services#TokenServices-Gettoken\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the token number\r\n     * @param number\r\n     *\r\n     * return the token in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of NetLicensing.Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        return Service\r\n            .get(context, `${Constants.Token.ENDPOINT_PATH}/${number}`, {}, Token);\r\n    },\r\n\r\n    /**\r\n     * Returns tokens of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Token+Services#TokenServices-Tokenslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * array of token entities or empty array if nothing found.\r\n     * @return array\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = typeof filter === 'string' ? filter : FilterUtils.encode(filter);\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.Token.ENDPOINT_PATH, queryParams, Token);\r\n    },\r\n\r\n    /**\r\n     * Delete token by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Token+Services#TokenServices-Deletetoken\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     *  the token number\r\n     * @param number string\r\n     *\r\n     * return boolean state of delete in promise\r\n     * @returns {Promise}\r\n     */\r\n    delete(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of NetLicensing.Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        return Service\r\n            .delete(context, `${Constants.Token.ENDPOINT_PATH}/${number}`);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Service from './Service';\r\nimport Context from '../vo/Context';\r\nimport Product from '../entities/Product';\r\nimport Constants from '../Constants';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport FilterUtils from '../util/FilterUtils';\r\n\r\n/**\r\n * JS representation of the Product Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new product with given properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services#ProductServices-Createproduct\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * non-null properties will be taken for the new object, null properties will either stay null, or will\r\n     * be set to a default value, depending on property.\r\n     * @param product NetLicensing.Product\r\n     *\r\n     * return the newly created product object in promise\r\n     * @returns {Promise}\r\n     */\r\n\r\n    create(context, product) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(product instanceof Product)) {\r\n            throw new TypeError('product must be an instance of Product');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .post(context, Constants.Product.ENDPOINT_PATH, product.asPropertiesMap(), Product);\r\n    },\r\n\r\n    /**\r\n     * Gets product by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services#ProductServices-Getproduct\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the product number\r\n     * @param number string\r\n     *\r\n     * return the product object in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .get(context, `${Constants.Product.ENDPOINT_PATH}/${number}`, {}, Product);\r\n    },\r\n\r\n    /**\r\n     * Returns products of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services#ProductServices-Productslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * array of product entities or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = typeof filter === 'string' ? filter : FilterUtils.encode(filter);\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.Product.ENDPOINT_PATH, queryParams, Product);\r\n    },\r\n\r\n    /**\r\n     * Updates product properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services#ProductServices-Updateproduct\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * product number\r\n     * @param number string\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param product NetLicensing.Product\r\n     *\r\n     * updated product in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, product) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(product instanceof Product)) {\r\n            throw new TypeError('product must be an instance of Product');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .post(context, `${Constants.Product.ENDPOINT_PATH}/${number}`, product.asPropertiesMap(), Product);\r\n    },\r\n\r\n    /**\r\n     * Deletes product.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services#ProductServices-Deleteproduct\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * product number\r\n     * @param number string\r\n     *\r\n     * if true, any entities that depend on the one being deleted will be deleted too\r\n     * @param forceCascade boolean\r\n     *\r\n     * return boolean state of delete in promise\r\n     * @returns {Promise}\r\n     */\r\n    delete(context, number, forceCascade) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        const queryParams = { forceCascade: Boolean(forceCascade) };\r\n\r\n        return Service\r\n            .delete(context, `${Constants.Product.ENDPOINT_PATH}/${number}`, queryParams);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport ProductModule from '../entities/ProductModule';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\nimport FilterUtils from '../util/FilterUtils';\r\n\r\n/**\r\n * JS representation of the ProductModule Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Module+Services\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new product module object with given properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Module+Services#ProductModuleServices-Createproductmodule\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * parent product to which the new product module is to be added\r\n     * @param productNumber string\r\n     *\r\n     * non-null properties will be taken for the new object, null properties will either stay null, or will\r\n     * be set to a default value, depending on property.\r\n     * @param productModule NetLicensing.ProductModule\r\n     *\r\n     * the newly created product module object in promise\r\n     * @returns {Promise}\r\n     */\r\n    create(context, productNumber, productModule) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(productModule instanceof ProductModule)) {\r\n            throw new TypeError('product must be an instance of ProductModule');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(productNumber, 'productNumber');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        productModule.setProperty('productNumber', productNumber);\r\n\r\n        return Service\r\n            .post(context, Constants.ProductModule.ENDPOINT_PATH, productModule.asPropertiesMap(), ProductModule);\r\n    },\r\n\r\n    /**\r\n     * Gets product module by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Module+Services#ProductModuleServices-Getproductmodule\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the product module number\r\n     * @param number string\r\n     *\r\n     * return the product module object in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .get(context, `${Constants.ProductModule.ENDPOINT_PATH}/${number}`, {}, ProductModule);\r\n    },\r\n\r\n    /**\r\n     * Returns products of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Services#ProductServices-Productslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * array of product modules entities or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = typeof filter === 'string' ? filter : FilterUtils.encode(filter);\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.ProductModule.ENDPOINT_PATH, queryParams, ProductModule);\r\n    },\r\n\r\n    /**\r\n     * Updates product module properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Module+Services#ProductModuleServices-Updateproductmodule\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * product module number\r\n     * @param number string\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param productModule NetLicensing.ProductModule\r\n     *\r\n     * updated product module in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, productModule) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(productModule instanceof ProductModule)) {\r\n            throw new TypeError('product must be an instance of ProductModule');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const path = `${Constants.ProductModule.ENDPOINT_PATH}/${number}`;\r\n\r\n        return Service\r\n            .post(context, path, productModule.asPropertiesMap(), ProductModule);\r\n    },\r\n\r\n    /**\r\n     * Deletes product module.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Product+Module+Services#ProductModuleServices-Deleteproductmodule\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * product module number\r\n     * @param number string\r\n     *\r\n     * if true, any entities that depend on the one being deleted will be deleted too\r\n     * @param forceCascade boolean\r\n     *\r\n     * return boolean state of delete in promise\r\n     * @returns {Promise}\r\n     */\r\n    delete(context, number, forceCascade) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        const queryParams = { forceCascade: Boolean(forceCascade) };\r\n\r\n        return Service\r\n            .delete(context, `${Constants.ProductModule.ENDPOINT_PATH}/${number}`, queryParams);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport PaymentMethod from '../entities/PaymentMethod';\r\nimport Constants from '../Constants';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport Service from './Service';\r\nimport FilterUtils from '../util/FilterUtils';\r\n\r\nexport default {\r\n    /**\r\n     * Gets payment method by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Payment+Method+Services#PaymentMethodServices-Getpaymentmethod\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the payment method number\r\n     * @param number string\r\n     *\r\n     * return the payment method in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .get(context, `${Constants.PaymentMethod.ENDPOINT_PATH}/${number}`, {}, PaymentMethod);\r\n    },\r\n\r\n    /**\r\n     * Returns payment methods of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Payment+Method+Services#PaymentMethodServices-Paymentmethodslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * array of payment method entities or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = typeof filter === 'string' ? filter : FilterUtils.encode(filter);\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.PaymentMethod.ENDPOINT_PATH, queryParams, PaymentMethod);\r\n    },\r\n\r\n    /**\r\n     * Updates payment method properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NetLicensing PUB/Payment+Method+Services#PaymentMethodServices-Updatepaymentmethod\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the payment method number\r\n     * @param number string\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param paymentMethod NetLicensing.PaymentMethod\r\n     *\r\n     * return updated payment method in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, paymentMethod) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(paymentMethod instanceof PaymentMethod)) {\r\n            throw new TypeError('paymentMethod must be an instance of PaymentMethod');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const path = `${Constants.PaymentMethod.ENDPOINT_PATH}/${number}`;\r\n\r\n        return Service\r\n            .post(context, path, paymentMethod.asPropertiesMap(), PaymentMethod);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport LicenseTemplate from '../entities/LicenseTemplate';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\nimport FilterUtils from '../util/FilterUtils';\r\n\r\n/**\r\n * JS representation of the ProductModule Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NLICPUB/License+Template+Services\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new license template object with given properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Template+Services#LicenseTemplateServices-Createlicensetemplate\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * parent product module to which the new license template is to be added\r\n     * @param productModuleNumber\r\n     *\r\n     * non-null properties will be taken for the new object, null properties will either stay null, or will\r\n     * be set to a default value, depending on property.\r\n     * @param licenseTemplate NetLicensing.LicenseTemplate\r\n     *\r\n     * the newly created license template object in promise\r\n     * @returns {Promise}\r\n     */\r\n    create(context, productModuleNumber, licenseTemplate) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(licenseTemplate instanceof LicenseTemplate)) {\r\n            throw new TypeError('licenseTemplate must be an instance of LicenseTemplate');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(productModuleNumber, 'productModuleNumber');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        licenseTemplate.setProperty('productModuleNumber', productModuleNumber);\r\n\r\n        return Service\r\n            .post(context, Constants.LicenseTemplate.ENDPOINT_PATH, licenseTemplate.asPropertiesMap(), LicenseTemplate);\r\n    },\r\n\r\n    /**\r\n     * Gets license template by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Template+Services#LicenseTemplateServices-Getlicensetemplate\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the license template number\r\n     * @param number string\r\n     *\r\n     * return the license template object in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .get(context, `${Constants.LicenseTemplate.ENDPOINT_PATH}/${number}`, {}, LicenseTemplate);\r\n    },\r\n\r\n    /**\r\n     * Returns all license templates of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Template+Services#LicenseTemplateServices-Licensetemplateslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * array of license templates (of all products/modules) or null/empty list if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = typeof filter === 'string' ? filter : FilterUtils.encode(filter);\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.LicenseTemplate.ENDPOINT_PATH, queryParams, LicenseTemplate);\r\n    },\r\n\r\n    /**\r\n     * Updates license template properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Template+Services#LicenseTemplateServices-Updatelicensetemplate\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * license template number\r\n     * @param number string\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param licenseTemplate NetLicensing.LicenseTemplate\r\n     *\r\n     * updated license template in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, licenseTemplate) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(licenseTemplate instanceof LicenseTemplate)) {\r\n            throw new TypeError('licenseTemplate must be an instance of LicenseTemplate');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const path = `${Constants.LicenseTemplate.ENDPOINT_PATH}/${number}`;\r\n\r\n        return Service\r\n            .post(context, path, licenseTemplate.asPropertiesMap(), LicenseTemplate);\r\n    },\r\n\r\n    /**\r\n     * Deletes license template.See NetLicensingAPI JavaDoc for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Template+Services#LicenseTemplateServices-Deletelicensetemplate\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * license template number\r\n     * @param number string\r\n     *\r\n     * if true, any entities that depend on the one being deleted will be deleted too\r\n     * @param forceCascade boolean\r\n     *\r\n     * return boolean state of delete in promise\r\n     * @returns {Promise}\r\n     */\r\n    delete(context, number, forceCascade) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        const queryParams = { forceCascade: Boolean(forceCascade) };\r\n\r\n        return Service\r\n            .delete(context, `${Constants.LicenseTemplate.ENDPOINT_PATH}/${number}`, queryParams);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport License from '../entities/License';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\nimport FilterUtils from '../util/FilterUtils';\r\n\r\n/**\r\n * JS representation of the License Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NLICPUB/License+Services\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new license object with given properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Services#LicenseServices-Createlicense\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * parent licensee to which the new license is to be added\r\n     * @param licenseeNumber string\r\n     *\r\n     *  license template that the license is created from\r\n     * @param licenseTemplateNumber string\r\n     *\r\n     * For privileged logins specifies transaction for the license creation. For regular logins new\r\n     * transaction always created implicitly, and the operation will be in a separate transaction.\r\n     * Transaction is generated with the provided transactionNumber, or, if transactionNumber is null, with\r\n     * auto-generated number.\r\n     * @param transactionNumber null|string\r\n     *\r\n     * non-null properties will be taken for the new object, null properties will either stay null, or will\r\n     * be set to a default value, depending on property.\r\n     * @param license NetLicensing.License\r\n     *\r\n     * return the newly created license object in promise\r\n     * @returns {Promise}\r\n     */\r\n    create(context, licenseeNumber, licenseTemplateNumber, transactionNumber, license) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(license instanceof License)) {\r\n            throw new TypeError('license must be an instance of License');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(licenseeNumber, 'licenseeNumber');\r\n        CheckUtils.paramNotEmpty(licenseTemplateNumber, 'licenseTemplateNumber');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        license.setProperty('licenseeNumber', licenseeNumber);\r\n        license.setProperty('licenseTemplateNumber', licenseTemplateNumber);\r\n\r\n        if (transactionNumber) license.setProperty('transactionNumber', transactionNumber);\r\n\r\n        return Service\r\n            .post(context, Constants.License.ENDPOINT_PATH, license.asPropertiesMap(), License);\r\n    },\r\n\r\n\r\n    /**\r\n     * Gets license by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Services#LicenseServices-Getlicense\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the license number\r\n     * @param number string\r\n     *\r\n     * return the license in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        return Service\r\n            .get(context, `${Constants.License.ENDPOINT_PATH}/${number}`, {}, License);\r\n    },\r\n\r\n    /**\r\n     * Returns licenses of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Services#LicenseServices-Licenseslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * return array of licenses (of all products) or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = typeof filter === 'string' ? filter : FilterUtils.encode(filter);\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.License.ENDPOINT_PATH, queryParams, License);\r\n    },\r\n\r\n    /**\r\n     * Updates license properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Services#LicenseServices-Updatelicense\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * license number\r\n     * @param number string\r\n     *\r\n     * transaction for the license update. Created implicitly if transactionNumber is null. In this case the\r\n     * operation will be in a separate transaction.\r\n     * @param transactionNumber string|null\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param license NetLicensing.License\r\n     *\r\n     * return updated license in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, transactionNumber, license) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(license instanceof License)) {\r\n            throw new TypeError('license must be an instance of License');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        if (transactionNumber) license.setProperty('transactionNumber', transactionNumber);\r\n\r\n        return Service\r\n            .post(context, `${Constants.License.ENDPOINT_PATH}/${number}`, license.asPropertiesMap(), License);\r\n    },\r\n\r\n    /**\r\n     * Deletes license.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/License+Services#LicenseServices-Deletelicense\r\n     *\r\n     * When any license is deleted, corresponding transaction is created automatically.\r\n     *\r\n     *  determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * license number\r\n     * @param number string\r\n     *\r\n     * if true, any entities that depend on the one being deleted will be deleted too\r\n     * @param forceCascade boolean\r\n     *\r\n     * return boolean state of delete in promise\r\n     * @returns {Promise}\r\n     */\r\n    delete(context, number, forceCascade) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        const queryParams = { forceCascade: Boolean(forceCascade) };\r\n\r\n        return Service\r\n            .delete(context, `${Constants.License.ENDPOINT_PATH}/${number}`, queryParams);\r\n    },\r\n};\r\n","/**\r\n * @author    Labs64 <netlicensing@labs64.com>\r\n * @license   Apache-2.0\r\n * @link      http://netlicensing.io\r\n * @copyright 2017 Labs64 NetLicensing\r\n */\r\n\r\nimport Context from '../vo/Context';\r\nimport Licensee from '../entities/Licensee';\r\nimport CheckUtils from '../util/CheckUtils';\r\nimport FilterUtils from '../util/FilterUtils';\r\nimport Constants from '../Constants';\r\nimport Service from './Service';\r\nimport ValidationParameters from '../vo/ValidationParameters';\r\nimport ValidationResults from '../vo/ValidationResults';\r\n\r\n/**\r\n * JS representation of the Licensee Service. See NetLicensingAPI for details:\r\n * https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services\r\n *\r\n * @constructor\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Creates new licensee object with given properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Createlicensee\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * parent product to which the new licensee is to be added\r\n     * @param productNumber string\r\n     *\r\n     * non-null properties will be taken for the new object, null properties will either stay null, or will\r\n     * be set to a default value, depending on property.\r\n     * @param licensee NetLicensing.Licensee\r\n     *\r\n     * return the newly created licensee object in promise\r\n     * @returns {Promise}\r\n     */\r\n    create(context, productNumber, licensee) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(licensee instanceof Licensee)) {\r\n            throw new TypeError('licensee must be an instance of Licensee');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(productNumber, 'productNumber');\r\n\r\n        context.setSecurityMode(Constants.BASIC_AUTHENTICATION);\r\n\r\n        licensee.setProperty('productNumber', productNumber);\r\n\r\n        return Service\r\n            .post(context, Constants.Licensee.ENDPOINT_PATH, licensee.asPropertiesMap(), Licensee);\r\n    },\r\n\r\n    /**\r\n     * Gets licensee by its number.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Getlicensee\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the licensee number\r\n     * @param number string\r\n     *\r\n     * return the licensee in promise\r\n     * @returns {Promise}\r\n     */\r\n    get(context, number) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        return Service\r\n            .get(context, `${Constants.Licensee.ENDPOINT_PATH}/${number}`, {}, Licensee);\r\n    },\r\n\r\n    /**\r\n     * Returns all licensees of a vendor.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Licenseeslist\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * reserved for the future use, must be omitted / set to NULL\r\n     * @param filter string|null\r\n     *\r\n     * array of licensees (of all products) or empty array if nothing found in promise.\r\n     * @returns {Promise}\r\n     */\r\n    list(context, filter) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        const queryParams = {};\r\n\r\n        if (filter) {\r\n            if (!CheckUtils.isValid(filter)) {\r\n                throw new TypeError(`filter has bad value ${filter}`);\r\n            }\r\n            queryParams.filter = typeof filter === 'string' ? filter : FilterUtils.encode(filter);\r\n        }\r\n\r\n        return Service\r\n            .list(context, Constants.Licensee.ENDPOINT_PATH, queryParams, Licensee);\r\n    },\r\n\r\n    /**\r\n     * Updates licensee properties.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Updatelicensee\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * licensee number\r\n     * @param number string\r\n     *\r\n     * non-null properties will be updated to the provided values, null properties will stay unchanged.\r\n     * @param licensee NetLicensing.Licensee\r\n     *\r\n     * return updated licensee in promise.\r\n     * @returns {Promise}\r\n     */\r\n    update(context, number, licensee) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(licensee instanceof Licensee)) {\r\n            throw new TypeError('licensee must be an instance of Licensee');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        return Service\r\n            .post(context, `${Constants.Licensee.ENDPOINT_PATH}/${number}`, licensee.asPropertiesMap(), Licensee);\r\n    },\r\n\r\n    /**\r\n     * Deletes licensee.See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Deletelicensee\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * licensee number\r\n     * @param number string\r\n     *\r\n     * if true, any entities that depend on the one being deleted will be deleted too\r\n     * @param forceCascade boolean\r\n     *\r\n     * return boolean state of delete in promise\r\n     * @returns {Promise}\r\n     */\r\n    delete(context, number, forceCascade) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        const queryParams = { forceCascade: Boolean(forceCascade) };\r\n\r\n        return Service\r\n            .delete(context, `${Constants.Licensee.ENDPOINT_PATH}/${number}`, queryParams);\r\n    },\r\n\r\n    /**\r\n     * Validates active licenses of the licensee. See NetLicensingAPI for details:\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Validatelicensee\r\n     *\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * licensee number\r\n     * @param number string\r\n     *\r\n     * optional validation parameters. See ValidationParameters and licensing model documentation for\r\n     * details.\r\n     * @param validationParameters NetLicensing.ValidationParameters.\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    validate(context, number, validationParameters) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        if (!(validationParameters instanceof ValidationParameters)) {\r\n            throw new TypeError('validationParameters must be an instance of ValidationParameters');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n\r\n        const queryParams = {};\r\n\r\n        if (validationParameters.getProductNumber()) {\r\n            queryParams.productNumber = validationParameters.getProductNumber();\r\n        }\r\n\r\n        if (validationParameters.getLicenseeName()) {\r\n            queryParams.licenseeName = validationParameters.getLicenseeName();\r\n        }\r\n\r\n        if (validationParameters.getLicenseeSecret()) {\r\n            queryParams.licenseeSecret = validationParameters.getLicenseeSecret();\r\n        }\r\n\r\n        let pmIndex = 0;\r\n        const parameters = validationParameters.getParameters();\r\n\r\n        const has = Object.prototype.hasOwnProperty;\r\n\r\n        Object.keys(parameters).forEach((productModuleName) => {\r\n            queryParams[`productModuleNumber${pmIndex}`] = productModuleName;\r\n            if (!has.call(parameters, productModuleName)) return;\r\n\r\n            const parameter = parameters[productModuleName];\r\n\r\n            Object.keys(parameter).forEach((key) => {\r\n                if (has.call(parameter, key)) {\r\n                    queryParams[key + pmIndex] = parameter[key];\r\n                }\r\n            });\r\n            pmIndex += 1;\r\n        });\r\n\r\n        const path = `${Constants.Licensee.ENDPOINT_PATH}/${number}/${Constants.Licensee.ENDPOINT_PATH_VALIDATE}`;\r\n\r\n        return Service\r\n            .post(context, path, queryParams)\r\n            .then((item) => {\r\n                const data = {};\r\n                const validationResults = new ValidationResults();\r\n\r\n                item.property.forEach((property) => {\r\n                    try {\r\n                        data[property.name] = JSON.parse(property.value);\r\n                    } catch (e) {\r\n                        data[property.name] = property.value;\r\n                    }\r\n                });\r\n\r\n                validationResults\r\n                    .setProductModuleValidation(data.productModuleNumber, data)\r\n                    .setTtl(Service.getLastHttpRequestInfo().data.ttl);\r\n\r\n                return validationResults;\r\n            });\r\n    },\r\n\r\n\r\n    /**\r\n     * Transfer licenses between licensees.\r\n     * @see https://www.labs64.de/confluence/display/NLICPUB/Licensee+Services#LicenseeServices-Transferlicensee\r\n     *\r\n     * determines the vendor on whose behalf the call is performed\r\n     * @param context NetLicensing.Context\r\n     *\r\n     * the number of the licensee receiving licenses\r\n     * @param number string\r\n     *\r\n     * the number of the licensee delivering licenses\r\n     * @param sourceLicenseeNumber string\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    transfer(context, number, sourceLicenseeNumber) {\r\n        if (!(context instanceof Context)) {\r\n            throw new TypeError('context must be an instance of Context');\r\n        }\r\n\r\n        CheckUtils.paramNotEmpty(number, 'number');\r\n        CheckUtils.paramNotEmpty(sourceLicenseeNumber, 'sourceLicenseeNumber');\r\n\r\n        const queryParams = { sourceLicenseeNumber };\r\n\r\n        const path = `${Constants.Licensee.ENDPOINT_PATH}/${number}/${Constants.Licensee.ENDPOINT_PATH_TRANSFER}`;\r\n\r\n        return Service\r\n            .post(context, path, queryParams);\r\n    },\r\n};\r\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n","'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","module.exports = require('./lib/axios');","// Constants\r\nimport Constants from './Constants';\r\n// VO\r\nimport Context from './vo/Context';\r\n\r\n// Services\r\nimport Service from './services/Service';\r\nimport LicenseeService from './services/LicenseeService';\r\nimport LicenseService from './services/LicenseService';\r\nimport LicenseTemplateService from './services/LicenseTemplateService';\r\nimport PaymentMethodService from './services/PaymentMethodService';\r\nimport ProductModuleService from './services/ProductModuleService';\r\nimport ProductService from './services/ProductService';\r\nimport TokenService from './services/TokenService';\r\nimport TransactionService from './services/TransactionService';\r\nimport UtilityService from './services/UtilityService';\r\n\r\n// Entities\r\nimport Country from './entities/Country';\r\nimport License from './entities/License';\r\nimport Licensee from './entities/Licensee';\r\nimport LicenseTemplate from './entities/LicenseTemplate';\r\nimport PaymentMethod from './entities/PaymentMethod';\r\nimport Product from './entities/Product';\r\nimport ProductDiscount from './entities/ProductDiscount';\r\nimport ProductModule from './entities/ProductModule';\r\nimport Token from './entities/Token';\r\nimport Transaction from './entities/Transaction';\r\nimport LicenseTransactionJoin from './entities/LicenseTransactionJoin';\r\nimport ValidationParameters from './vo/ValidationParameters';\r\nimport ValidationResults from './vo/ValidationResults';\r\n\r\n// Utils\r\nimport CastsUtils from './util/CastsUtils';\r\nimport CheckUtils from './util/CheckUtils';\r\nimport FilterUtils from './util/FilterUtils';\r\n\r\n\r\n// Create the default instance to be exported\r\nconst NetLicensing = {\r\n    // Constants\r\n    Constants,\r\n\r\n    // Expose VO\r\n    Context,\r\n    ValidationParameters,\r\n    ValidationResults,\r\n\r\n    // Expose Services\r\n    Service,\r\n    LicenseeService,\r\n    LicenseService,\r\n    LicenseTemplateService,\r\n    PaymentMethodService,\r\n    ProductModuleService,\r\n    ProductService,\r\n    TokenService,\r\n    TransactionService,\r\n    UtilityService,\r\n\r\n    // Expose Entities\r\n    Country,\r\n    License,\r\n    Licensee,\r\n    LicenseTemplate,\r\n    PaymentMethod,\r\n    Product,\r\n    ProductDiscount,\r\n    ProductModule,\r\n    Token,\r\n    Transaction,\r\n    LicenseTransactionJoin,\r\n\r\n    // Expose Utils\r\n    CastsUtils,\r\n    CheckUtils,\r\n    FilterUtils,\r\n};\r\n\r\nmodule.exports = NetLicensing;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = NetLicensing;\r\n"],"sourceRoot":""}